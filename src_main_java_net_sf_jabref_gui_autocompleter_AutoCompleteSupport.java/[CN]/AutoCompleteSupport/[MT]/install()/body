{
  final Action upAction=new MoveAction(-1);
  final Action downAction=new MoveAction(1);
  final Action hidePopupAction=new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      popup.setVisible(false);
    }
  }
;
  final Action acceptAction=new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      E itemToInsert=renderer.getSelectedItem();
      if (itemToInsert == null)       return;
      String toInsert=autoCompleter.getAutoCompleteText(itemToInsert);
      if (!autoCompleter.isSingleUnitField()) {
        int priv=textComp.getText().length() - 1;
        while ((priv >= 0) && !Character.isWhitespace(textComp.getText().charAt(priv)) && textComp.getText().charAt(priv) != ',') {
          priv--;
        }
        textComp.setText(textComp.getText().substring(0,priv + 1) + toInsert);
      }
 else {
        textComp.setText(toInsert);
      }
      textComp.setCaretPosition(textComp.getText().length());
      popup.setVisible(false);
    }
  }
;
  popup.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.LIGHT_GRAY));
  popup.setPopupSize(textComp.getWidth(),200);
  popup.setLayout(new BorderLayout());
  popup.setFocusable(false);
  popup.setRequestFocusEnabled(false);
  popup.add(renderer.init(acceptAction));
  textComp.getDocument().addDocumentListener(new DocumentListener(){
    public void insertUpdate(    DocumentEvent e){
      postProcessTextChange();
    }
    public void removeUpdate(    DocumentEvent e){
      postProcessTextChange();
    }
    public void changedUpdate(    DocumentEvent e){
    }
  }
);
  textComp.registerKeyboardAction(downAction,KeyStroke.getKeyStroke(KeyEvent.VK_DOWN,0),JComponent.WHEN_FOCUSED);
  textComp.registerKeyboardAction(upAction,KeyStroke.getKeyStroke(KeyEvent.VK_UP,0),JComponent.WHEN_FOCUSED);
  textComp.registerKeyboardAction(hidePopupAction,KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),JComponent.WHEN_IN_FOCUSED_WINDOW);
  this.textComp.addFocusListener(new ComboBoxEditorFocusHandler());
  popup.addPopupMenuListener(new PopupMenuListener(){
    public void popupMenuWillBecomeVisible(    PopupMenuEvent e){
      textComp.registerKeyboardAction(acceptAction,KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0),JComponent.WHEN_FOCUSED);
    }
    public void popupMenuWillBecomeInvisible(    PopupMenuEvent e){
      textComp.unregisterKeyboardAction(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0));
    }
    public void popupMenuCanceled(    PopupMenuEvent e){
    }
  }
);
}
