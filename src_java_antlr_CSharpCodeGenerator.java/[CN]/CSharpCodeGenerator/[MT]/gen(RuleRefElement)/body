{
  if (DEBUG_CODE_GENERATOR)   System.out.println("genRR(" + rr + ")");
  RuleSymbol rs=(RuleSymbol)grammar.getSymbol(rr.targetRule);
  if (rs == null || !rs.isDefined()) {
    antlrTool.error("Rule '" + rr.targetRule + "' is not defined",grammar.getFilename(),rr.getLine(),rr.getColumn());
    return;
  }
  if (!(rs instanceof RuleSymbol)) {
    antlrTool.error("'" + rr.targetRule + "' does not name a grammar rule",grammar.getFilename(),rr.getLine(),rr.getColumn());
    return;
  }
  genErrorTryForElement(rr);
  if (grammar instanceof TreeWalkerGrammar && rr.getLabel() != null && syntacticPredLevel == 0) {
    println(rr.getLabel() + " = _t==ASTNULL ? null : " + lt1Value+ ";");
  }
  if (grammar instanceof LexerGrammar && (!saveText || rr.getAutoGenType() == GrammarElement.AUTO_GEN_BANG)) {
    declareSaveIndexVariableIfNeeded();
    println("_saveIndex = text.Length;");
  }
  printTabs();
  if (rr.idAssign != null) {
    if (rs.block.returnAction == null) {
      antlrTool.warning("Rule '" + rr.targetRule + "' has no return type",grammar.getFilename(),rr.getLine(),rr.getColumn());
    }
    _print(rr.idAssign + "=");
  }
 else {
    if (!(grammar instanceof LexerGrammar) && syntacticPredLevel == 0 && rs.block.returnAction != null) {
      antlrTool.warning("Rule '" + rr.targetRule + "' returns a value",grammar.getFilename(),rr.getLine(),rr.getColumn());
    }
  }
  GenRuleInvocation(rr);
  if (grammar instanceof LexerGrammar && (!saveText || rr.getAutoGenType() == GrammarElement.AUTO_GEN_BANG)) {
    declareSaveIndexVariableIfNeeded();
    println("text.Length = _saveIndex;");
  }
  if (syntacticPredLevel == 0) {
    boolean doNoGuessTest=(grammar.hasSyntacticPredicate && (grammar.buildAST && rr.getLabel() != null || (genAST && rr.getAutoGenType() == GrammarElement.AUTO_GEN_NONE)));
    if (doNoGuessTest) {
      println("if (0 == inputState.guessing)");
      println("{");
      tabs++;
    }
    if (grammar.buildAST && rr.getLabel() != null) {
      println(rr.getLabel() + "_AST = (" + labeledElementASTType+ ")returnAST;");
    }
    if (genAST) {
switch (rr.getAutoGenType()) {
case GrammarElement.AUTO_GEN_NONE:
        if (usingCustomAST)         println("astFactory.addASTChild(currentAST, (AST)returnAST);");
 else         println("astFactory.addASTChild(currentAST, returnAST);");
      break;
case GrammarElement.AUTO_GEN_CARET:
    antlrTool.error("Internal: encountered ^ after rule reference");
  break;
default :
break;
}
}
if (grammar instanceof LexerGrammar && rr.getLabel() != null) {
println(rr.getLabel() + " = returnToken_;");
}
if (doNoGuessTest) {
tabs--;
println("}");
}
}
genErrorCatchForElement(rr);
}
