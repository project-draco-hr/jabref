{
  Container pane=getContentPane();
  pane.setLayout(new BorderLayout());
  JPanel main=new JPanel(), buttons=new JPanel(), right=new JPanel();
  main.setLayout(new BorderLayout());
  right.setLayout(new GridLayout(1,2));
  java.util.List entryTypes=new ArrayList();
  for (Iterator i=BibtexEntryType.ALL_TYPES.keySet().iterator(); i.hasNext(); ) {
    entryTypes.add(i.next());
  }
  typeComp=new EntryTypeList(entryTypes);
  typeComp.addListSelectionListener(this);
  typeComp.addAdditionActionListener(this);
  typeComp.addDefaultActionListener(new DefaultListener());
  typeComp.setListSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  reqComp=new FieldSetComponent(Globals.lang("Required fields"),new ArrayList(),preset,true,true);
  reqComp.setEnabled(false);
  reqComp.setBorder(BorderFactory.createEmptyBorder(2,2,2,2));
  ListDataListener dataListener=new DataListener();
  reqComp.addListDataListener(dataListener);
  optComp=new FieldSetComponent(Globals.lang("Optional fields"),new ArrayList(),preset,true,true);
  optComp.setEnabled(false);
  optComp.setBorder(BorderFactory.createEmptyBorder(2,2,2,2));
  optComp.addListDataListener(dataListener);
  right.add(reqComp);
  right.add(optComp);
  right.setBorder(BorderFactory.createEtchedBorder());
  ok=new JButton("OK");
  cancel=new JButton(Globals.lang("Cancel"));
  apply=new JButton(Globals.lang("Apply"));
  ok.addActionListener(this);
  apply.addActionListener(this);
  cancel.addActionListener(this);
  buttons.add(ok);
  buttons.add(apply);
  buttons.add(cancel);
  main.add(typeComp,BorderLayout.WEST);
  main.add(right,BorderLayout.CENTER);
  main.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  pane.add(main,BorderLayout.CENTER);
  pane.add(buttons,BorderLayout.SOUTH);
  pack();
}
