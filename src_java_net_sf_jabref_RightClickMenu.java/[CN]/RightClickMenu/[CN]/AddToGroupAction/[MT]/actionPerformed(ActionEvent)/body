{
  if (m_node.getGroup() instanceof ExplicitGroup) {
    BibtexEntry[] entries=panel.getSelectedEntries();
    String key;
    int entriesWithoutKey=0;
    int entriesWithDuplicateKey=0;
    for (int i=0; i < entries.length; ++i) {
      key=entries[i].getCiteKey();
      if (key == null)       key="";
      if (key.equals(""))       ++entriesWithoutKey;
 else       if (panel.database().getEntriesByKey(key).length > 1)       ++entriesWithDuplicateKey;
    }
    if (entriesWithoutKey > 0 || entriesWithDuplicateKey > 0) {
      int i=JOptionPane.showConfirmDialog(panel.frame,"no key: " + entriesWithoutKey + ", dupe key: "+ entriesWithDuplicateKey,"Warning",JOptionPane.OK_CANCEL_OPTION,JOptionPane.WARNING_MESSAGE);
      if (i == JOptionPane.CANCEL_OPTION)       return;
    }
  }
  if (!Util.warnAssignmentSideEffects(m_node.getGroup(),panel.getSelectedEntries(),panel.getDatabase(),panel.frame))   return;
  panel.storeCurrentEdit();
  AbstractUndoableEdit undo=m_node.addToGroup(panel.getSelectedEntries());
  if (undo == null)   return;
  panel.undoManager.addEdit(undo);
  panel.refreshTable();
  panel.markBaseChanged();
  panel.updateEntryEditorIfShowing();
  panel.updateViewToSelected();
}
