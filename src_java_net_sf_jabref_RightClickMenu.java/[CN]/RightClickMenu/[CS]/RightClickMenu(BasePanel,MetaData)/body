{
  panel=panel_;
  metaData=metaData_;
  boolean multiple=(panel.entryTable.getSelectedRowCount() > 1);
  BibtexEntry be=null;
  if (panel.entryTable.getSelectedRowCount() == 1)   be=panel.entryTable.getSelectedEntries()[0];
  addPopupMenuListener(this);
  add(new AbstractAction(Globals.lang("Copy")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("copy");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  add(new AbstractAction(Globals.lang("Paste")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("paste");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  add(new AbstractAction(Globals.lang("Cut")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("cut");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  addSeparator();
  if (multiple) {
    add(new AbstractAction(Globals.lang("Mark entries")){
      public void actionPerformed(      ActionEvent e){
        try {
          panel.runCommand("markEntries");
        }
 catch (        Throwable ex) {
        }
      }
    }
);
    add(new AbstractAction(Globals.lang("Unmark entries")){
      public void actionPerformed(      ActionEvent e){
        try {
          panel.runCommand("unmarkEntries");
        }
 catch (        Throwable ex) {
        }
      }
    }
);
    addSeparator();
  }
 else   if (be != null) {
    if (be.getField(Globals.MARKED) == null)     add(new AbstractAction(Globals.lang("Mark entry")){
      public void actionPerformed(      ActionEvent e){
        try {
          panel.runCommand("markEntries");
        }
 catch (        Throwable ex) {
        }
      }
    }
);
 else     add(new AbstractAction(Globals.lang("Unmark entry")){
      public void actionPerformed(      ActionEvent e){
        try {
          panel.runCommand("unmarkEntries");
        }
 catch (        Throwable ex) {
        }
      }
    }
);
    addSeparator();
  }
  add(new AbstractAction(Globals.lang("Open PDF or PS")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("openFile");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  add(new AbstractAction(Globals.lang("Open URL or DOI")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("openUrl");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  add(new AbstractAction(Globals.lang("Copy BibTeX key")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("copyKey");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  add(new AbstractAction(Globals.lang("Copy \\cite{BibTeX key}")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("copyCiteKey");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  addSeparator();
  populateTypeMenu();
  add(typeMenu);
  addSeparator();
}
