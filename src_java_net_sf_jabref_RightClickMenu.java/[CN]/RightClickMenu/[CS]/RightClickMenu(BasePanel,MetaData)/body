{
  panel=panel_;
  metaData=metaData_;
  boolean multiple=(panel.mainTable.getSelectedRowCount() > 1);
  BibtexEntry be=null;
  if (panel.mainTable.getSelectedRowCount() == 1)   be=panel.mainTable.getSelected().get(0);
  addPopupMenuListener(this);
  add(new AbstractAction(Globals.lang("Copy"),GUIGlobals.getImage("copy")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("copy");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  add(new AbstractAction(Globals.lang("Paste"),GUIGlobals.getImage("paste")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("paste");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  add(new AbstractAction(Globals.lang("Cut"),GUIGlobals.getImage("cut")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("cut");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  add(new AbstractAction(Globals.lang("Delete"),GUIGlobals.getImage("delete")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("delete");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  addSeparator();
  add(new AbstractAction(Globals.lang("Export to clipboard")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("exportToClipboard");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  addSeparator();
  if (multiple) {
    add(new AbstractAction(Globals.lang("Mark entries"),GUIGlobals.getImage("markEntries")){
      public void actionPerformed(      ActionEvent e){
        try {
          panel.runCommand("markEntries");
        }
 catch (        Throwable ex) {
        }
      }
    }
);
    add(new AbstractAction(Globals.lang("Unmark entries"),GUIGlobals.getImage("unmarkEntries")){
      public void actionPerformed(      ActionEvent e){
        try {
          panel.runCommand("unmarkEntries");
        }
 catch (        Throwable ex) {
        }
      }
    }
);
    addSeparator();
  }
 else   if (be != null) {
    if (be.getField(BibtexFields.MARKED) == null)     add(new AbstractAction(Globals.lang("Mark entry"),GUIGlobals.getImage("markEntries")){
      public void actionPerformed(      ActionEvent e){
        try {
          panel.runCommand("markEntries");
        }
 catch (        Throwable ex) {
        }
      }
    }
);
 else     add(new AbstractAction(Globals.lang("Unmark entry"),GUIGlobals.getImage("unmarkEntries")){
      public void actionPerformed(      ActionEvent e){
        try {
          panel.runCommand("unmarkEntries");
        }
 catch (        Throwable ex) {
        }
      }
    }
);
    addSeparator();
  }
  add(new AbstractAction(Globals.lang("Open file"),GUIGlobals.getImage("openExternalFile")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("openExternalFile");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  add(new AbstractAction(Globals.lang("Open PDF or PS"),GUIGlobals.getImage("openFile")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("openFile");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  add(new AbstractAction(Globals.lang("Open URL or DOI"),GUIGlobals.getImage("www")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("openUrl");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  add(new AbstractAction(Globals.lang("Copy BibTeX key")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("copyKey");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  add(new AbstractAction(Globals.lang("Copy") + " \\cite{" + Globals.lang("BibTeX key")+ "}"){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("copyCiteKey");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  addSeparator();
  populateTypeMenu();
  add(typeMenu);
  add(new AbstractAction(Globals.lang("Plain text import")){
    public void actionPerformed(    ActionEvent e){
      try {
        panel.runCommand("importPlainText");
      }
 catch (      Throwable ex) {
      }
    }
  }
);
  addSeparator();
  floatMarked.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      Globals.prefs.putBoolean("floatMarkedEntries",floatMarked.isSelected());
      panel.mainTable.refreshSorting();
    }
  }
);
}
