{
  File f=null;
  if (newFile.isSelected()) {
    if (newNameTf.getText().length() > 0) {
      f=new File(newNameTf.getText());
    }
  }
 else {
    f=new File(personalFile.getText());
  }
  if (f != null) {
    if (!f.exists()) {
      throw new FileNotFoundException(f.getAbsolutePath());
    }
    FileWriter fw=null;
    try {
      fw=new FileWriter(f,false);
      for (      JournalEntry entry : tableModel.getJournals()) {
        fw.write(entry.name);
        fw.write(" = ");
        fw.write(entry.abbreviation);
        fw.write(Globals.NEWLINE);
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
 finally {
      if (fw != null) {
        try {
          fw.close();
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
      }
    }
    String filename=f.getPath();
    if (filename.equals("")) {
      filename=null;
    }
    Globals.prefs.put(JabRefPreferences.PERSONAL_JOURNAL_LIST,filename);
  }
  ArrayList<String> extFiles=new ArrayList<String>();
  for (  ExternalFileEntry efe : externals) {
    if (!efe.getValue().equals("")) {
      extFiles.add(efe.getValue());
    }
  }
  if (extFiles.size() == 0) {
    Globals.prefs.put(JabRefPreferences.EXTERNAL_JOURNAL_LISTS,"");
  }
 else {
    String[] list=extFiles.toArray(new String[extFiles.size()]);
    Globals.prefs.putStringArray(JabRefPreferences.EXTERNAL_JOURNAL_LISTS,list);
  }
  Globals.initializeJournalNames();
  for (int i=0; i < frame.baseCount(); i++) {
    frame.baseAt(i).getAutoCompleters().addJournalListToAutoCompleter();
  }
}
