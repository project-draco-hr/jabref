{
  BasePanel bp=frame.getCurrentBasePanel();
  if (bp == null) {
    return;
  }
  if (bp.getSelectedEntries().isEmpty()) {
    bp.output(Localization.lang("Select at least one entry to manage keywords."));
    return;
  }
  createDialog();
  canceled=true;
  fillKeyWordList();
  diag.pack();
  diag.setLocationRelativeTo(frame);
  diag.setVisible(true);
  if (canceled) {
    return;
  }
  Set<String> keywordsToAdd=new HashSet<>();
  Set<String> userSelectedKeywords=new HashSet<>();
  for (Enumeration<String> keywords=keywordListModel.elements(); keywords.hasMoreElements(); ) {
    String keyword=keywords.nextElement();
    userSelectedKeywords.add(keyword);
    if (!sortedKeywordsOfAllEntriesBeforeUpdateByUser.contains(keyword)) {
      keywordsToAdd.add(keyword);
    }
  }
  Set<String> keywordsToRemove=new HashSet<>();
  for (  String kword : sortedKeywordsOfAllEntriesBeforeUpdateByUser) {
    if (!userSelectedKeywords.contains(kword)) {
      keywordsToRemove.add(kword);
    }
  }
  if (keywordsToAdd.isEmpty() && keywordsToRemove.isEmpty()) {
    return;
  }
  if (SpecialFieldsUtils.keywordSyncEnabled() && !keywordsToAdd.isEmpty()) {
    synchronizeSpecialFields(keywordsToAdd,keywordsToRemove);
  }
  NamedCompound ce=updateKeywords(bp.getSelectedEntries(),keywordsToAdd,keywordsToRemove);
  bp.getUndoManager().addEdit(ce);
  bp.markBaseChanged();
}
