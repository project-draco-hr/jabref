{
  StringBuffer sb=new StringBuffer();
  sb.append("<b>");
  if (Globals.prefs.getBoolean("groupShowDynamic"))   sb.append("<i>").append(Util.quoteForHTML(getName())).append("</i>");
 else   sb.append(Util.quoteForHTML(getName()));
  sb.append(Globals.lang("</b> - dynamic group (<b>")).append(m_searchField).append(Globals.lang("</b> contains <b>")).append(Util.quoteForHTML(m_searchExpression)).append("</b>)");
switch (getHierarchicalContext()) {
case AbstractGroup.INCLUDING:
    sb.append(Globals.lang(", includes subgroups"));
  break;
case AbstractGroup.REFINING:
sb.append(Globals.lang(", refines supergroup"));
break;
default :
break;
}
return sb.toString();
}
