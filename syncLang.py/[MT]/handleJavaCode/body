def handleJavaCode(filename, lines, keyList, notTermList):
    startLen = 14
    while (len(lines) > 0):
        patt = re.compile('Globals\\s*.lang\\s*\\(\\s*"[^"]*"[^"]*\\)')
        pattInner = re.compile('"[^"]*"')
        patt2 = re.compile('Globals\\s*.lang\\s*\\(\\s*"[^"]*"')
        result = patt.search(lines)
        result2 = patt2.search(lines)
        if result:
            span = result.span()
            theSpan = lines[span[0]:span[1]]
            spanInner = pattInner.search(theSpan).span()
            found = theSpan[(spanInner[0] + 1):(spanInner[1] - 1)].replace(' ', '_')
            found = found.replace('=', '\\=').replace(':', '\\:')
            if ((not (found == '')) and (found not in keyList)):
                keyList.append(found)
            if (span[1] < len(lines)):
                lines = lines[(span[1] + 1):]
            else:
                lines = ''
        elif result2:
            span = result2.span()
            theSpan = lines[span[0]:span[1]]
            spanInner = pattInner.search(theSpan).span()
            found = theSpan[(spanInner[0] + 1):(spanInner[1] - 1)].replace(' ', '_')
            print ('Not terminated: ' + found)
            if (span[1] < len(lines)):
                lines = lines[(span[1] + 1):]
            else:
                lines = ''
        else:
            lines = ''
