{
  String name=null;
  String literal=null;
  if (tokname != null) {
    name=tokname.getText();
  }
  if (tokliteral != null) {
    literal=tokliteral.getText();
  }
  if (literal != null) {
    StringLiteralSymbol sl=(StringLiteralSymbol)grammar.tokenManager.getTokenSymbol(literal);
    if (sl != null) {
      if (name == null || sl.getLabel() != null) {
        tool.warning("Redefinition of literal in tokens {...}: " + literal,grammar.getFilename(),tokliteral.getLine());
        return;
      }
 else       if (name != null) {
        sl.setLabel(name);
        grammar.tokenManager.mapToTokenSymbol(name,sl);
      }
    }
    if (name != null) {
      TokenSymbol ts=(TokenSymbol)grammar.tokenManager.getTokenSymbol(name);
      if (ts != null) {
        if (ts instanceof StringLiteralSymbol) {
          tool.warning("Redefinition of token in tokens {...}: " + name,grammar.getFilename(),tokliteral.getLine());
          return;
        }
        int ttype=ts.getTokenType();
        sl=new StringLiteralSymbol(literal);
        sl.setTokenType(ttype);
        sl.setLabel(name);
        grammar.tokenManager.define(sl);
        grammar.tokenManager.mapToTokenSymbol(name,sl);
        return;
      }
    }
    sl=new StringLiteralSymbol(literal);
    int tt=grammar.tokenManager.nextTokenType();
    sl.setTokenType(tt);
    sl.setLabel(name);
    grammar.tokenManager.define(sl);
    if (name != null) {
      grammar.tokenManager.mapToTokenSymbol(name,sl);
    }
  }
 else {
    if (grammar.tokenManager.tokenDefined(name)) {
      tool.warning("Redefinition of token in tokens {...}: " + name,grammar.getFilename(),tokname.getLine());
      return;
    }
    int tt=grammar.tokenManager.nextTokenType();
    TokenSymbol ts=new TokenSymbol(name);
    ts.setTokenType(tt);
    grammar.tokenManager.define(ts);
  }
}
