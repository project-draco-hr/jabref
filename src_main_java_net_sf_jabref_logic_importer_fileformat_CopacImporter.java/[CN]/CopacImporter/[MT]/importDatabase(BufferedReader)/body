{
  Objects.requireNonNull(reader);
  List<String> entries=new LinkedList<>();
  StringBuilder sb=new StringBuilder();
  String str;
  while ((str=reader.readLine()) != null) {
    if (str.length() < 4) {
      continue;
    }
    String code=str.substring(0,4);
    if ("    ".equals(code)) {
      sb.append(' ').append(str.trim());
    }
 else {
      if ("TI- ".equals(str.substring(0,4))) {
        if (sb.length() > 0) {
          entries.add(sb.toString());
        }
        sb=new StringBuilder();
      }
      sb.append('\n').append(str);
    }
  }
  if (sb.length() > 0) {
    entries.add(sb.toString());
  }
  List<BibEntry> results=new LinkedList<>();
  for (  String entry : entries) {
    BibEntry b=new BibEntry(DEFAULT_BIBTEXENTRY_ID,"book");
    String[] lines=entry.split("\n");
    for (    String line1 : lines) {
      String line=line1.trim();
      if (line.length() < 4) {
        continue;
      }
      String code=line.substring(0,4);
      if ("TI- ".equals(code)) {
        setOrAppend(b,FieldName.TITLE,line.substring(4).trim(),", ");
      }
 else       if ("AU- ".equals(code)) {
        setOrAppend(b,FieldName.AUTHOR,line.substring(4).trim()," and ");
      }
 else       if ("PY- ".equals(code)) {
        setOrAppend(b,FieldName.YEAR,line.substring(4).trim(),", ");
      }
 else       if ("PU- ".equals(code)) {
        setOrAppend(b,FieldName.PUBLISHER,line.substring(4).trim(),", ");
      }
 else       if ("SE- ".equals(code)) {
        setOrAppend(b,FieldName.SERIES,line.substring(4).trim(),", ");
      }
 else       if ("IS- ".equals(code)) {
        setOrAppend(b,FieldName.ISBN,line.substring(4).trim(),", ");
      }
 else       if ("KW- ".equals(code)) {
        setOrAppend(b,FieldName.KEYWORDS,line.substring(4).trim(),", ");
      }
 else       if ("NT- ".equals(code)) {
        setOrAppend(b,FieldName.NOTE,line.substring(4).trim(),", ");
      }
 else       if ("PD- ".equals(code)) {
        setOrAppend(b,"physicaldimensions",line.substring(4).trim(),", ");
      }
 else       if ("DT- ".equals(code)) {
        setOrAppend(b,"documenttype",line.substring(4).trim(),", ");
      }
 else {
        setOrAppend(b,code.substring(0,2),line.substring(4).trim(),", ");
      }
    }
    results.add(b);
  }
  return new ParserResult(results);
}
