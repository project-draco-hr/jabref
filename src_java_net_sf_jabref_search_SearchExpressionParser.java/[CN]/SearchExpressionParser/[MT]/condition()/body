{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST condition_AST=null;
  boolean synPredMatched80=false;
  if (((_tokenSet_0.member(LA(1))) && (_tokenSet_1.member(LA(2))) && (_tokenSet_1.member(LA(3))))) {
    int _m80=mark();
    synPredMatched80=true;
    inputState.guessing++;
    try {
{
        expression();
        match(LITERAL_and);
        condition();
      }
    }
 catch (    RecognitionException pe) {
      synPredMatched80=false;
    }
    rewind(_m80);
    inputState.guessing--;
  }
  if (synPredMatched80) {
    expression();
    astFactory.addASTChild(currentAST,returnAST);
    match(LITERAL_and);
    condition();
    astFactory.addASTChild(currentAST,returnAST);
    if (inputState.guessing == 0) {
      condition_AST=currentAST.root;
      condition_AST=astFactory.make((new ASTArray(2)).add(astFactory.create(And)).add(condition_AST));
      currentAST.root=condition_AST;
      currentAST.child=condition_AST != null && condition_AST.getFirstChild() != null ? condition_AST.getFirstChild() : condition_AST;
      currentAST.advanceChildToEnd();
    }
    condition_AST=currentAST.root;
  }
 else {
    boolean synPredMatched82=false;
    if (((_tokenSet_0.member(LA(1))) && (_tokenSet_1.member(LA(2))) && (_tokenSet_1.member(LA(3))))) {
      int _m82=mark();
      synPredMatched82=true;
      inputState.guessing++;
      try {
{
          expression();
          match(LITERAL_or);
          condition();
        }
      }
 catch (      RecognitionException pe) {
        synPredMatched82=false;
      }
      rewind(_m82);
      inputState.guessing--;
    }
    if (synPredMatched82) {
      expression();
      astFactory.addASTChild(currentAST,returnAST);
      match(LITERAL_or);
      condition();
      astFactory.addASTChild(currentAST,returnAST);
      if (inputState.guessing == 0) {
        condition_AST=currentAST.root;
        condition_AST=astFactory.make((new ASTArray(2)).add(astFactory.create(Or)).add(condition_AST));
        currentAST.root=condition_AST;
        currentAST.child=condition_AST != null && condition_AST.getFirstChild() != null ? condition_AST.getFirstChild() : condition_AST;
        currentAST.advanceChildToEnd();
      }
      condition_AST=currentAST.root;
    }
 else     if ((_tokenSet_0.member(LA(1))) && (_tokenSet_1.member(LA(2))) && (_tokenSet_1.member(LA(3)))) {
      expression();
      astFactory.addASTChild(currentAST,returnAST);
      condition_AST=currentAST.root;
    }
 else {
      throw new NoViableAltException(LT(1),getFilename());
    }
  }
  returnAST=condition_AST;
}
