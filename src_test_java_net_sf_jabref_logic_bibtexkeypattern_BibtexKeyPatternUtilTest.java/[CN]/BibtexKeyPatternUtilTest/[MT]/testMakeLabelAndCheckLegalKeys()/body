{
  Optional<BibEntry> entry0=BibtexParser.singleFromString("@ARTICLE{kohn, author={Andreas K??ning}, year={2000}}",importFormatPreferences);
  assertEquals("Koen",BibtexKeyPatternUtil.checkLegalKey(BibtexKeyPatternUtil.makeLabel(entry0.get(),"auth3"),true));
  entry0=BibtexParser.singleFromString("@ARTICLE{kohn, author={Andreas ????ning}, year={2000}}",importFormatPreferences);
  assertEquals("Aoen",BibtexKeyPatternUtil.checkLegalKey(BibtexKeyPatternUtil.makeLabel(entry0.get(),"auth3"),true));
  entry0=BibtexParser.singleFromString("@ARTICLE{kohn, author={Andreas ????ning}, year={2000}}",importFormatPreferences);
  assertEquals("Eoen",BibtexKeyPatternUtil.checkLegalKey(BibtexKeyPatternUtil.makeLabel(entry0.get(),"auth3"),true));
  entry0=BibtexParser.singleFromString("@ARTICLE{kohn, author={Andreas ????ning}, year={2000}}",importFormatPreferences);
  assertEquals("Ioen",BibtexKeyPatternUtil.checkLegalKey(BibtexKeyPatternUtil.makeLabel(entry0.get(),"auth3"),true));
  entry0=BibtexParser.singleFromString("@ARTICLE{kohn, author={Andreas ????ning}, year={2000}}",importFormatPreferences);
  assertEquals("Loen",BibtexKeyPatternUtil.checkLegalKey(BibtexKeyPatternUtil.makeLabel(entry0.get(),"auth3"),true));
  entry0=BibtexParser.singleFromString("@ARTICLE{kohn, author={Andreas ????ning}, year={2000}}",importFormatPreferences);
  assertEquals("Noen",BibtexKeyPatternUtil.checkLegalKey(BibtexKeyPatternUtil.makeLabel(entry0.get(),"auth3"),true));
  entry0=BibtexParser.singleFromString("@ARTICLE{kohn, author={Andreas ????ning}, year={2000}}",importFormatPreferences);
  assertEquals("Ooen",BibtexKeyPatternUtil.checkLegalKey(BibtexKeyPatternUtil.makeLabel(entry0.get(),"auth3"),true));
  entry0=BibtexParser.singleFromString("@ARTICLE{kohn, author={Andreas ????ning}, year={2000}}",importFormatPreferences);
  assertEquals("Roen",BibtexKeyPatternUtil.checkLegalKey(BibtexKeyPatternUtil.makeLabel(entry0.get(),"auth3"),true));
  entry0=BibtexParser.singleFromString("@ARTICLE{kohn, author={Andreas ????ning}, year={2000}}",importFormatPreferences);
  assertEquals("Soen",BibtexKeyPatternUtil.checkLegalKey(BibtexKeyPatternUtil.makeLabel(entry0.get(),"auth3"),true));
  entry0=BibtexParser.singleFromString("@ARTICLE{kohn, author={Andreas ????ning}, year={2000}}",importFormatPreferences);
  assertEquals("Uoen",BibtexKeyPatternUtil.checkLegalKey(BibtexKeyPatternUtil.makeLabel(entry0.get(),"auth3"),true));
  entry0=BibtexParser.singleFromString("@ARTICLE{kohn, author={Andreas ????ning}, year={2000}}",importFormatPreferences);
  assertEquals("Yoen",BibtexKeyPatternUtil.checkLegalKey(BibtexKeyPatternUtil.makeLabel(entry0.get(),"auth3"),true));
  entry0=BibtexParser.singleFromString("@ARTICLE{kohn, author={Andreas ????ning}, year={2000}}",importFormatPreferences);
  assertEquals("Zoen",BibtexKeyPatternUtil.checkLegalKey(BibtexKeyPatternUtil.makeLabel(entry0.get(),"auth3"),true));
}
