{
  preferences=prefs;
  remotePreferences=new RemotePreferences(preferences);
  useRemoteServer=new JCheckBox(Localization.lang("Listen for remote operation on port") + ':');
  useIEEEAbrv=new JCheckBox(Localization.lang("Use IEEE LaTeX abbreviations"));
  remoteServerPort=new JTextField();
  useConvertToEquation=new JCheckBox(Localization.lang("Prefer converting subscripts and superscripts to equations rather than text"));
  useCaseKeeperOnSearch=new JCheckBox(Localization.lang("Add {} to specified title words on search to keep the correct case"));
  useUnitFormatterOnSearch=new JCheckBox(Localization.lang("Format units by adding non-breaking separators and keeping the correct case on search"));
  FormLayout layout=new FormLayout("1dlu, 8dlu, left:pref, 4dlu, fill:3dlu","");
  DefaultFormBuilder builder=new DefaultFormBuilder(layout);
  JPanel pan=new JPanel();
  builder.appendSeparator(Localization.lang("Remote operation"));
  builder.nextLine();
  builder.append(new JPanel());
  builder.append(new JLabel("<html>" + Localization.lang("This feature lets new files be opened or imported into an " + "already running instance of JabRef<BR>instead of opening a new instance. For instance, this " + "is useful when you open a file in JabRef<br>from your web browser."+ "<BR>Note that this will prevent you from running more than one instance of JabRef at a time.") + "</html>"));
  builder.nextLine();
  builder.append(new JPanel());
  JPanel p=new JPanel();
  p.add(useRemoteServer);
  p.add(remoteServerPort);
  p.add(new HelpAction(HelpFiles.REMOTE).getHelpButton());
  builder.append(p);
  builder.nextLine();
  builder.appendSeparator(Localization.lang("Search %0","IEEEXplore"));
  builder.nextLine();
  builder.append(new JPanel());
  builder.append(useIEEEAbrv);
  builder.nextLine();
  builder.appendSeparator(Localization.lang("Import conversions"));
  builder.nextLine();
  builder.append(new JPanel());
  builder.append(useConvertToEquation);
  builder.nextLine();
  builder.append(pan);
  builder.append(useCaseKeeperOnSearch);
  builder.nextLine();
  builder.append(pan);
  builder.append(useUnitFormatterOnSearch);
  pan=builder.getPanel();
  pan.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  setLayout(new BorderLayout());
  add(pan,BorderLayout.CENTER);
}
