{
  URL url=null;
  int size=-1;
  byte[] b=null;
  try {
    url=new URL(urlToZipArchive);
    ZipFile zf=new ZipFile(url.getFile());
    Enumeration e=zf.entries();
    while (e.hasMoreElements()) {
      ZipEntry ze=(ZipEntry)e.nextElement();
      if (ze.getName().equals(internalArchivePath)) {
        if (ze.isDirectory()) {
          return null;
        }
        if (ze.getSize() > 65536) {
          System.out.println("Resource files should be smaller than 65536 bytes...");
        }
        size=(int)ze.getSize();
      }
    }
    zf.close();
    FileInputStream fis=new FileInputStream(url.getFile());
    BufferedInputStream bis=new BufferedInputStream(fis);
    ZipInputStream zis=new ZipInputStream(bis);
    ZipEntry ze=null;
    while ((ze=zis.getNextEntry()) != null) {
      if (ze.getName().equals(internalArchivePath)) {
        b=new byte[(int)size];
        int rb=0;
        int chunk=0;
        while (((int)size - rb) > 0) {
          chunk=zis.read(b,rb,(int)size - rb);
          if (chunk == -1) {
            break;
          }
          rb+=chunk;
        }
      }
    }
  }
 catch (  Exception e) {
    System.err.println("error while loading");
    return null;
  }
  return b;
}
