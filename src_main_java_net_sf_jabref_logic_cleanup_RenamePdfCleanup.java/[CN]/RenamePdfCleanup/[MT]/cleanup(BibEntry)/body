{
  TypedBibEntry typedEntry=new TypedBibEntry(entry,databaseContext);
  List<ParsedFileField> fileList=typedEntry.getFiles();
  List<ParsedFileField> newFileList=new ArrayList<>();
  boolean changed=false;
  for (  ParsedFileField flEntry : fileList) {
    String realOldFilename=flEntry.getLink();
    if (onlyRelativePaths && (new File(realOldFilename).isAbsolute())) {
      newFileList.add(flEntry);
      continue;
    }
    StringBuilder newFilename=new StringBuilder(FileUtil.createFileNameFromPattern(databaseContext.getDatabase(),entry,fileNamePattern,prefs).trim());
    newFilename.append('.').append(FileUtil.getFileExtension(realOldFilename).orElse("pdf"));
    Optional<File> expandedOldFile=FileUtil.expandFilename(realOldFilename,databaseContext.getFileDirectory());
    if ((!expandedOldFile.isPresent()) || (expandedOldFile.get().getParent() == null)) {
      newFileList.add(flEntry);
      continue;
    }
    String newPath=expandedOldFile.get().getParent().concat(OS.FILE_SEPARATOR).concat(newFilename.toString());
    String expandedOldFilePath=expandedOldFile.get().toString();
    boolean pathsDifferOnlyByCase=newPath.equalsIgnoreCase(expandedOldFilePath) && !newPath.equals(expandedOldFilePath);
    if (new File(newPath).exists() && !pathsDifferOnlyByCase) {
      newFileList.add(flEntry);
      continue;
    }
    boolean renameSuccessful=FileUtil.renameFile(expandedOldFilePath,newPath);
    if (renameSuccessful) {
      changed=true;
      String description=flEntry.getDescription();
      String type=flEntry.getFileType();
      File parent=(new File(realOldFilename)).getParentFile();
      String newFileEntryFileName;
      if ((parent == null) || databaseContext.getFileDirectory().contains(parent.getAbsolutePath())) {
        newFileEntryFileName=newFilename.toString();
      }
 else {
        newFileEntryFileName=parent.toString().concat(OS.FILE_SEPARATOR).concat(newFilename.toString());
      }
      newFileList.add(new ParsedFileField(description,newFileEntryFileName,type));
    }
 else {
      unsuccessfulRenames++;
    }
  }
  if (changed) {
    Optional<FieldChange> change=typedEntry.setFiles(newFileList);
    if (change.isPresent()) {
      return Collections.singletonList(change.get());
    }
 else {
      return Collections.emptyList();
    }
  }
  return Collections.emptyList();
}
