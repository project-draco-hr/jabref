{
  if (value == highlight1Cell)   selected=true;
  Component c=super.getTreeCellRendererComponent(tree,value,selected,expanded,leaf,row,hasFocus);
  AbstractGroup group=((GroupTreeNode)value).getGroup();
  if (group == null || !(c instanceof JLabel))   return c;
  JLabel label=(JLabel)c;
  if (highlight2Cells != null) {
    for (int i=0; i < highlight2Cells.length; ++i) {
      if (highlight2Cells[i] == value) {
        label.setForeground(Color.RED);
        break;
      }
    }
  }
  if (!label.getText().equals(group.getName())) {
    label.setText(group.getName());
    label.setToolTipText("<html>" + group.getShortDescription() + "</html>");
  }
  if (Globals.prefs.getBoolean("groupShowIcons")) {
switch (group.getHierarchicalContext()) {
case AbstractGroup.REFINING:
      if (label.getIcon() != GUIGlobals.groupRefiningIcon)       label.setIcon(GUIGlobals.groupRefiningIcon);
    break;
case AbstractGroup.INCLUDING:
  if (label.getIcon() != GUIGlobals.groupIncludingIcon)   label.setIcon(GUIGlobals.groupIncludingIcon);
break;
default :
if (label.getIcon() != GUIGlobals.groupRegularIcon) label.setIcon(GUIGlobals.groupRegularIcon);
break;
}
}
 else {
label.setIcon(null);
}
if (Globals.prefs.getBoolean("groupShowDynamic")) {
Font f=label.getFont();
if (group.isDynamic()) {
if (!f.isItalic()) {
f=f.deriveFont(Font.ITALIC);
label.setFont(f);
}
}
 else {
if (f.isItalic()) {
f=f.deriveFont(Font.PLAIN);
label.setFont(f);
}
}
}
return c;
}
