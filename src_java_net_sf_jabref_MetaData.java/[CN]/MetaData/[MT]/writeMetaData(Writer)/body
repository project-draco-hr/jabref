{
  for (Iterator i=metaData.keySet().iterator(); i.hasNext(); ) {
    String key=(String)i.next();
    StringBuffer sb=new StringBuffer();
    Vector orderedData=(Vector)metaData.get(key);
    if (orderedData.size() > 0) {
      sb.append("@comment{" + GUIGlobals.META_FLAG + key+ ":");
      for (int j=0; j < orderedData.size(); j++) {
        sb.append(Util.quote((String)orderedData.elementAt(j),";",'\\') + ";");
      }
      sb.append("}\n\n");
    }
    wrapStringBuffer(sb,Globals.METADATA_LINE_LENGTH);
    out.write(sb.toString());
  }
  if (groupsRoot != null && groupsRoot.getChildCount() > 0) {
    StringBuffer sb=new StringBuffer();
    sb.append("@comment{" + GUIGlobals.META_FLAG + "groupsversion:");
    sb.append("" + VersionHandling.CURRENT_VERSION + ";");
    sb.append("}\n\n");
    out.write(sb.toString());
    sb=new StringBuffer();
    sb.append("@comment{" + GUIGlobals.META_FLAG + "groupstree:\n");
    StringTokenizer tok=new StringTokenizer(groupsRoot.getTreeAsString(),"\n");
    while (tok.hasMoreTokens()) {
      StringBuffer s=new StringBuffer(Util.quote(tok.nextToken(),";",'\\') + ";");
      wrapStringBuffer(s,Globals.METADATA_LINE_LENGTH);
      sb.append(s + "\n");
    }
    sb.append("}\n\n");
    out.write(sb.toString());
  }
}
