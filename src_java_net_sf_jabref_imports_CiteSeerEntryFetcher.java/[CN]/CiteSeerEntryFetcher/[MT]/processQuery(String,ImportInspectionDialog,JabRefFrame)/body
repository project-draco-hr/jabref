{
  stop=false;
  dialog.setVisible(true);
  String[] ids=query.trim().split("[;,\\s]+");
  for (int i=0; i < ids.length; i++) {
    if (stop)     break;
    String id=ids[i];
    id=id.replaceAll("(http://citeseer.ist.psu.edu/|\\.html|oai:CiteSeerPSU:)","");
    if (!id.matches("^\\d+$")) {
      JOptionPane.showMessageDialog(dialog,Globals.lang("Citeseer only supports numerical ids, '%0' is invalid.\n" + "See the help for further information.",id),Globals.lang("Fetch Citeseer"),JOptionPane.INFORMATION_MESSAGE);
      continue;
    }
    BibtexEntry entry=new BibtexEntry(Util.createNeutralId(),BibtexEntryType.getType("article"));
    entry.setField("citeseerurl",id);
    try {
      URL citeseerUrl=new URL(OAI_URL + id);
      HttpURLConnection citeseerConnection=(HttpURLConnection)citeseerUrl.openConnection();
      InputStream inputStream=citeseerConnection.getInputStream();
      DefaultHandler handlerBase=new CiteSeerEntryFetcherHandler(entry);
      if (saxParser == null)       saxParser=SAXParserFactory.newInstance().newSAXParser();
      saxParser.parse(inputStream,handlerBase);
      for (      String name : entry.getAllFields()) {
        entry.setField(name,OAI2Fetcher.correctLineBreaks(entry.getField(name).toString()));
      }
      dialog.addEntry(entry);
      dialog.setProgress(i + 1,ids.length);
    }
 catch (    Exception e) {
      JOptionPane.showMessageDialog(dialog,Globals.lang("Error fetching from Citeseer:\n" + e.getLocalizedMessage()),Globals.lang("Fetch Citeseer"),JOptionPane.ERROR_MESSAGE);
    }
    dialog.entryListComplete();
  }
}
