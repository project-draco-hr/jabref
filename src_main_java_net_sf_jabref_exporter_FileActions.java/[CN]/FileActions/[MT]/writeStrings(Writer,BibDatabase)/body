{
  FileActions.previousStringType=BibtexString.Type.AUTHOR;
  List<BibtexString> strings=new ArrayList<>();
  for (  String s : database.getStringKeySet()) {
    strings.add(database.getString(s));
  }
  Collections.sort(strings,new BibtexStringComparator(true));
  HashMap<String,BibtexString> remaining=new HashMap<>();
  int maxKeyLength=0;
  for (  BibtexString string : strings) {
    remaining.put(string.getName(),string);
    maxKeyLength=Math.max(maxKeyLength,string.getName().length());
  }
  for (  BibtexString.Type t : BibtexString.Type.values()) {
    for (    BibtexString bs : strings) {
      if (remaining.containsKey(bs.getName()) && (bs.getType() == t)) {
        FileActions.writeString(fw,bs,remaining,maxKeyLength);
      }
    }
  }
}
