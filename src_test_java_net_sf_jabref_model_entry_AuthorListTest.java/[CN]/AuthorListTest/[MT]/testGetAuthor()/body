{
  Author author=AuthorList.parse("John Smith and von Neumann, Jr, John").getAuthor(0);
  Assert.assertEquals(Optional.of("John"),author.getFirst());
  Assert.assertEquals(Optional.of("J."),author.getFirstAbbr());
  Assert.assertEquals("John Smith",author.getFirstLast(false));
  Assert.assertEquals("J. Smith",author.getFirstLast(true));
  Assert.assertEquals(Optional.empty(),author.getJr());
  Assert.assertEquals(Optional.of("Smith"),author.getLast());
  Assert.assertEquals("Smith, John",author.getLastFirst(false));
  Assert.assertEquals("Smith, J.",author.getLastFirst(true));
  Assert.assertEquals("Smith",author.getLastOnly());
  Assert.assertEquals("Smith, J.",author.getNameForAlphabetization());
  Assert.assertEquals(Optional.empty(),author.getVon());
  author=AuthorList.parse("Peter Black Brown").getAuthor(0);
  Assert.assertEquals(Optional.of("Peter Black"),author.getFirst());
  Assert.assertEquals(Optional.of("P. B."),author.getFirstAbbr());
  Assert.assertEquals("Peter Black Brown",author.getFirstLast(false));
  Assert.assertEquals("P. B. Brown",author.getFirstLast(true));
  Assert.assertEquals(Optional.empty(),author.getJr());
  Assert.assertEquals(Optional.empty(),author.getVon());
  author=AuthorList.parse("John Smith and von Neumann, Jr, John").getAuthor(1);
  Assert.assertEquals(Optional.of("John"),author.getFirst());
  Assert.assertEquals(Optional.of("J."),author.getFirstAbbr());
  Assert.assertEquals("John von Neumann, Jr",author.getFirstLast(false));
  Assert.assertEquals("J. von Neumann, Jr",author.getFirstLast(true));
  Assert.assertEquals(Optional.of("Jr"),author.getJr());
  Assert.assertEquals(Optional.of("Neumann"),author.getLast());
  Assert.assertEquals("von Neumann, Jr, John",author.getLastFirst(false));
  Assert.assertEquals("von Neumann, Jr, J.",author.getLastFirst(true));
  Assert.assertEquals("von Neumann",author.getLastOnly());
  Assert.assertEquals("Neumann, Jr, J.",author.getNameForAlphabetization());
  Assert.assertEquals(Optional.of("von"),author.getVon());
}
