{
  int dropRow=-1;
  if (comp instanceof JTable) {
    dropRow=((JTable)comp).getSelectedRow();
  }
  try {
    if (t.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {
      @SuppressWarnings("unchecked") List<File> l=(List<File>)t.getTransferData(DataFlavor.javaFileListFlavor);
      return handleDraggedFiles(l,dropRow);
    }
 else     if (t.isDataFlavorSupported(urlFlavor)) {
      URL dropLink=(URL)t.getTransferData(urlFlavor);
      return handleDropTransfer(dropLink);
    }
 else     if (t.isDataFlavorSupported(stringFlavor)) {
      String dropStr=(String)t.getTransferData(stringFlavor);
      LOGGER.debug("Received stringFlavor: " + dropStr);
      return handleDropTransfer(dropStr,dropRow);
    }
  }
 catch (  IOException ioe) {
    LOGGER.error("Failed to read dropped data",ioe);
  }
catch (  UnsupportedFlavorException|ClassCastException ufe) {
    LOGGER.error("Drop type error",ufe);
  }
  LOGGER.info("Can't transfer input: ");
  DataFlavor[] inflavs=t.getTransferDataFlavors();
  for (  DataFlavor inflav : inflavs) {
    LOGGER.info("  " + inflav);
  }
  return false;
}
