{
  super(frame_,Localization.lang("Manage custom imports"),false);
  this.importCustomizationDialog=this;
  frame=frame_;
  JButton addFromFolderButton=new JButton(Localization.lang("Add from folder"));
  addFromFolderButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      String chosenFileStr=null;
      CustomImportList.Importer importer=new CustomImportList.Importer();
      importer.setBasePath(FileDialogs.getNewDir(frame,new File(prefs.get(JabRefPreferences.WORKING_DIRECTORY)),"",Localization.lang("Select Classpath of New Importer"),JFileChooser.CUSTOM_DIALOG,false));
      if (importer.getBasePath() != null) {
        chosenFileStr=FileDialogs.getNewFile(frame,importer.getFileFromBasePath(),".class",Localization.lang("Select new ImportFormat Subclass"),JFileChooser.CUSTOM_DIALOG,false);
      }
      if (chosenFileStr != null) {
        try {
          importer.setClassName(pathToClass(importer.getFileFromBasePath(),new File(chosenFileStr)));
          importer.setName(importer.getInstance().getFormatName());
          importer.setCliId(importer.getInstance().getCLIId());
          addOrReplaceImporter(importer);
          customImporterTable.revalidate();
          customImporterTable.repaint();
        }
 catch (        Exception exc) {
          JOptionPane.showMessageDialog(frame,Localization.lang("Could not instantiate %0",chosenFileStr));
        }
catch (        NoClassDefFoundError exc) {
          JOptionPane.showMessageDialog(frame,Localization.lang("Could not instantiate %0. Have you chosen the correct package path?",chosenFileStr));
        }
      }
    }
  }
);
  addFromFolderButton.setToolTipText(Localization.lang("Add a (compiled) custom ImportFormat class from a class path.") + "\n" + Localization.lang("The path need not be on the classpath of JabRef."));
  JButton addFromJarButton=new JButton(Localization.lang("Add from jar"));
  addFromJarButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      String basePath=FileDialogs.getNewFile(frame,new File(prefs.get(JabRefPreferences.WORKING_DIRECTORY)),".zip,.jar",Localization.lang("Select a Zip-archive"),JFileChooser.CUSTOM_DIALOG,false);
      if (basePath != null) {
        try (ZipFile zipFile=new ZipFile(new File(basePath),ZipFile.OPEN_READ)){
          ZipFileChooser zipFileChooser=new ZipFileChooser(importCustomizationDialog,zipFile);
          zipFileChooser.setVisible(true);
          customImporterTable.revalidate();
          customImporterTable.repaint(10);
        }
 catch (        IOException exc) {
          LOGGER.info("Could not open Zip-archive.",exc);
          JOptionPane.showMessageDialog(frame,Localization.lang("Could not open %0",basePath) + "\n" + Localization.lang("Have you chosen the correct package path?"));
        }
catch (        NoClassDefFoundError exc) {
          LOGGER.info("Could not instantiate Zip-archive reader.",exc);
          JOptionPane.showMessageDialog(frame,Localization.lang("Could not instantiate %0",basePath) + "\n" + Localization.lang("Have you chosen the correct package path?"));
        }
      }
    }
  }
);
  addFromJarButton.setToolTipText(Localization.lang("Add a (compiled) custom ImportFormat class from a Zip-archive.") + "\n" + Localization.lang("The Zip-archive need not be on the classpath of JabRef."));
  JButton showDescButton=new JButton(Localization.lang("Show description"));
  showDescButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      int row=customImporterTable.getSelectedRow();
      if (row != -1) {
        CustomImportList.Importer importer=((ImportTableModel)customImporterTable.getModel()).getImporter(row);
        try {
          ImportFormat importFormat=importer.getInstance();
          JOptionPane.showMessageDialog(frame,importFormat.getDescription());
        }
 catch (        Exception exc) {
          exc.printStackTrace();
          JOptionPane.showMessageDialog(frame,Localization.lang("Could not instantiate %0 %1",importer.getName() + ":\n",exc.getMessage()));
        }
      }
 else {
        JOptionPane.showMessageDialog(frame,Localization.lang("Please select an importer."));
      }
    }
  }
);
  JButton removeButton=new JButton(Localization.lang("Remove"));
  removeButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      int row=customImporterTable.getSelectedRow();
      if (row != -1) {
        customImporterTable.removeRowSelectionInterval(row,row);
        prefs.customImports.remove(((ImportTableModel)customImporterTable.getModel()).getImporter(row));
        Globals.importFormatReader.resetImportFormats();
        customImporterTable.revalidate();
        customImporterTable.repaint();
      }
 else {
        JOptionPane.showMessageDialog(frame,Localization.lang("Please select an importer."));
      }
    }
  }
);
  AbstractAction closeAction=new AbstractAction(){
    @Override public void actionPerformed(    ActionEvent e){
      dispose();
    }
  }
;
  JButton closeButton=new JButton(Localization.lang("Close"));
  closeButton.addActionListener(closeAction);
  JButton helpButton=new HelpAction(frame.helpDiag,GUIGlobals.importCustomizationHelp).getIconButton();
  ImportTableModel tableModel=new ImportTableModel();
  customImporterTable=new JTable(tableModel);
  TableColumnModel cm=customImporterTable.getColumnModel();
  cm.getColumn(0).setPreferredWidth(GUIGlobals.IMPORT_DIALOG_COL_0_WIDTH);
  cm.getColumn(1).setPreferredWidth(GUIGlobals.IMPORT_DIALOG_COL_1_WIDTH);
  cm.getColumn(2).setPreferredWidth(GUIGlobals.IMPORT_DIALOG_COL_2_WIDTH);
  cm.getColumn(3).setPreferredWidth(GUIGlobals.IMPORT_DIALOG_COL_3_WIDTH);
  JScrollPane sp=new JScrollPane(customImporterTable,JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
  customImporterTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  customImporterTable.setPreferredScrollableViewportSize(getSize());
  if (customImporterTable.getRowCount() > 0) {
    customImporterTable.setRowSelectionInterval(0,0);
  }
  JPanel mainPanel=new JPanel();
  ActionMap am=mainPanel.getActionMap();
  InputMap im=mainPanel.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
  im.put(Globals.getKeyPrefs().getKey(KeyBinding.CLOSE_DIALOG),"close");
  am.put("close",closeAction);
  mainPanel.setLayout(new BorderLayout());
  mainPanel.add(sp,BorderLayout.CENTER);
  JPanel buttons=new JPanel();
  ButtonBarBuilder bb=new ButtonBarBuilder(buttons);
  buttons.setBorder(BorderFactory.createEmptyBorder(2,2,2,2));
  bb.addGlue();
  bb.addButton(addFromFolderButton);
  bb.addButton(addFromJarButton);
  bb.addButton(showDescButton);
  bb.addButton(removeButton);
  bb.addButton(closeButton);
  bb.addUnrelatedGap();
  bb.addButton(helpButton);
  bb.addGlue();
  getContentPane().add(mainPanel,BorderLayout.CENTER);
  getContentPane().add(buttons,BorderLayout.SOUTH);
  this.setSize(getSize());
  pack();
  PositionWindow.placeDialog(this,frame);
  new FocusRequester(customImporterTable);
}
