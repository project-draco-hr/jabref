{
  File file=new File(link);
  String name=file.getName();
  int pos=name.indexOf('.');
  String extension=((pos >= 0) && (pos < name.length() - 1)) ? name.substring(pos + 1).trim().toLowerCase() : null;
  String dir=metaData.getFileDirectory(extension);
  String fileDir=metaData.getFileDirectory(GUIGlobals.FILE_FIELD);
  String databaseDir=metaData.getFile().getParent();
  File tmp=expandFilename(link,new String[]{dir,fileDir,databaseDir});
  if (tmp != null)   file=tmp;
  if (file.exists() && (fileType != null)) {
    try {
      if (Globals.ON_MAC) {
        String[] cmd={"/usr/bin/open","-a",fileType.getOpenWith(),file.getPath()};
        Runtime.getRuntime().exec(cmd);
      }
 else       if (Globals.ON_WIN) {
        if ((fileType.getOpenWith() != null) && (fileType.getOpenWith().length() > 0)) {
          openFileWithApplicationOnWindows(file.getPath(),fileType.getOpenWith());
        }
 else         openFileOnWindows(file.getPath(),true);
      }
 else {
        String[] cmdArray=new String[]{fileType.getOpenWith(),file.getPath()};
        Runtime.getRuntime().exec(cmdArray);
      }
    }
 catch (    IOException e) {
      e.printStackTrace();
      System.err.println("An error occured on the command: " + fileType.getOpenWith() + " #"+ link);
      System.err.println(e.getMessage());
    }
  }
 else {
    if (link.startsWith("\\url{") && link.endsWith("}"))     link=link.substring(5,link.length() - 1);
    if (link.startsWith("doi:"))     link=Globals.DOI_LOOKUP_PREFIX + link;
    link=sanitizeUrl(link);
    if (Globals.ON_MAC) {
      String[] cmd={"/usr/bin/open","-a",Globals.prefs.get("htmlviewer"),link};
      Runtime.getRuntime().exec(cmd);
    }
 else     if (Globals.ON_WIN) {
      openFileOnWindows(link,false);
    }
 else {
      String[] cmdArray=new String[]{Globals.prefs.get("htmlviewer"),link};
      Runtime.getRuntime().exec(cmdArray);
    }
  }
}
