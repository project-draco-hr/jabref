{
  final GroupTreeNode root=panel.getBibDatabaseContext().getMetaData().getGroups().orElse(null);
  final UndoableModifySubtree undo=new UndoableModifySubtree(new GroupTreeNodeViewModel(panel.getBibDatabaseContext().getMetaData().getGroups().orElse(null)),new GroupTreeNodeViewModel(root),Localization.lang("Modified groups"));
  root.removeAllChildren();
  if (changedGroups == null) {
    root.setGroup(new AllEntriesGroup(Localization.lang("All entries")));
  }
 else {
    root.setGroup(changedGroups.getGroup());
    for (    GroupTreeNode child : changedGroups.getChildren()) {
      child.copySubtree().moveTo(root);
    }
    root.refreshGroupsForNewDatabase(panel.getDatabase());
  }
  undoEdit.addEdit(undo);
  tmpGroupRoot.removeAllChildren();
  if (changedGroups != null) {
    GroupTreeNode copied=changedGroups.copySubtree();
    tmpGroupRoot.setGroup(copied.getGroup());
    for (    GroupTreeNode child : copied.getChildren()) {
      child.copySubtree().moveTo(tmpGroupRoot);
    }
  }
  tmpGroupRoot.refreshGroupsForNewDatabase(secondary);
  return true;
}
