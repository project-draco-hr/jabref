{
  final GroupTreeNode root=panel.getLoadedDatabase().getMetaData().getGroups();
  final UndoableModifySubtree undo=new UndoableModifySubtree(panel.getGroupSelector(),panel.getLoadedDatabase().getMetaData().getGroups(),root,Localization.lang("Modified groups"));
  root.removeAllChildren();
  if (changedGroups == null) {
    root.setGroup(new AllEntriesGroup());
  }
 else {
    root.setGroup(changedGroups.getGroup());
    for (int i=0; i < changedGroups.getChildCount(); ++i) {
      root.add(((GroupTreeNode)changedGroups.getChildAt(i)).deepCopy());
    }
    root.refreshGroupsForNewDatabase(panel.database());
  }
  if (panel.getGroupSelector().getGroupTreeRoot() == root) {
    panel.getGroupSelector().revalidateGroups();
  }
  undoEdit.addEdit(undo);
  tmpGroupRoot.removeAllChildren();
  if (changedGroups != null) {
    GroupTreeNode copied=changedGroups.deepCopy();
    tmpGroupRoot.setGroup(copied.getGroup());
    for (int i=0; i < copied.getChildCount(); ++i) {
      tmpGroupRoot.add(((GroupTreeNode)copied.getChildAt(i)).deepCopy());
    }
  }
  tmpGroupRoot.refreshGroupsForNewDatabase(secondary);
  return true;
}
