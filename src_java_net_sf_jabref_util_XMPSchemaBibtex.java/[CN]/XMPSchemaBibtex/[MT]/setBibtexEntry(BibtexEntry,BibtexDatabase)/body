{
  Object[] fields=entry.getAllFields();
  Object[] results;
  int resultsSize;
  JabRefPreferences prefs=JabRefPreferences.getInstance();
  if (prefs.getBoolean("useXmpPrivacyFilter")) {
    TreeSet<String> filters=new TreeSet<String>(Arrays.asList(prefs.getStringArray("xmpPrivacyFilter")));
    results=new Object[fields.length];
    resultsSize=0;
    for (int i=0; i < fields.length; i++) {
      if (!filters.contains(fields[i])) {
        results[resultsSize++]=fields[i];
      }
    }
  }
 else {
    results=fields;
    resultsSize=fields.length;
  }
  for (int i=0; i < resultsSize; i++) {
    String field=results[i].toString();
    String value=BibtexDatabase.getResolvedField(field,entry,database);
    if (field.equals("author") || field.equals("editor")) {
      setPersonList(field,value);
    }
 else {
      setTextProperty(field,value);
    }
  }
  setTextProperty("entrytype",entry.getType().getName());
}
