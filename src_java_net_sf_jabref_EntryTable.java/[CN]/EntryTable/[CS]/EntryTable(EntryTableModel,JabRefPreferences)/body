{
  super(tm_);
  this.tableModel=tm_;
  prefs=prefs_;
  antialiasing=prefs.getBoolean("antialias");
  ctrlClick=prefs.getBoolean("ctrlClick");
  getTableHeader().setReorderingAllowed(false);
  setShowVerticalLines(true);
  setShowHorizontalLines(true);
  setColumnSelectionAllowed(false);
  setRowSelectionAllowed(true);
  setAutoResizeMode(prefs.getInt("autoResizeMode"));
  DefaultCellEditor dce=new DefaultCellEditor(new JTextField());
  dce.setClickCountToStart(2);
  setDefaultEditor(String.class,dce);
  getTableHeader().addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      int col=getTableHeader().columnAtPoint(e.getPoint());
      if (col > 0) {
        String s=tableModel.getColumnName(col).toLowerCase();
        if (!s.equals(prefs.get("priSort")))         prefs.put("priSort",s);
 else         prefs.putBoolean("priDescending",!prefs.getBoolean("priDescending"));
        tableModel.remap();
        repaint();
      }
    }
  }
);
  addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if ((e.getButton() == MouseEvent.BUTTON3) || (ctrlClick && (e.getButton() == MouseEvent.BUTTON1) && e.isControlDown())) {
        if (rightClickMenu != null)         rightClickMenu.show(ths,e.getX(),e.getY());
      }
    }
  }
);
  setWidths();
  sp.getViewport().setBackground(GUIGlobals.tableBackground);
  updateFont();
}
