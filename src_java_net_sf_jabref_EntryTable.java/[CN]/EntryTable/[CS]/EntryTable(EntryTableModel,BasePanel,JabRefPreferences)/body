{
  super(tm_);
  this.tableModel=tm_;
  setBorder(null);
  panel=panel_;
  addFocusListener(Globals.focusListener);
  setDragEnabled(true);
  setTransferHandler(new EntryTableTransferHandler(this));
  prefs=prefs_;
  antialiasing=prefs.getBoolean("antialias");
  ctrlClick=prefs.getBoolean("ctrlClick");
  tableColorCodes=prefs.getBoolean("tableColorCodesOn");
  getTableHeader().setReorderingAllowed(false);
  setGridColor(GUIGlobals.gridColor);
  setShowVerticalLines(true);
  setShowHorizontalLines(true);
  setColumnSelectionAllowed(false);
  setRowSelectionAllowed(true);
  setAutoResizeMode(prefs.getInt("autoResizeMode"));
  DefaultCellEditor dce=new DefaultCellEditor(new JTextField());
  dce.setClickCountToStart(2);
  setDefaultEditor(String.class,dce);
  getTableHeader().addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      int col=getTableHeader().columnAtPoint(e.getPoint());
      if (col >= tableModel.padleft) {
        String s=tableModel.getFieldName(col);
        if (s.equals("")) {
          return;
        }
        Point p=e.getPoint();
        int colindex=getTableHeader().columnAtPoint(p);
        if (colindex >= 0) {
          final int initoffset=3;
          int xoffset=initoffset;
          for (int i=0; i < colindex; i++) {
            xoffset+=getColumnModel().getColumn(i).getWidth();
          }
          TableColumn column=getColumnModel().getColumn(col);
          int cw=column.getWidth();
          int ch=getTableHeader().getHeight();
          Rectangle r=new Rectangle();
          r.setBounds(xoffset,0,cw - 2 * initoffset,ch);
          if (!r.contains(p)) {
            return;
          }
        }
        if (!s.equals(prefs.get("priSort")))         prefs.put("priSort",s);
 else         prefs.putBoolean("priDescending",!prefs.getBoolean("priDescending"));
        tableModel.remap();
        repaint();
      }
    }
  }
);
  addMouseListener(new TableClickListener());
  setSelectionModel(new javax.swing.DefaultListSelectionModel(){
    public void setSelectionInterval(    int index0,    int index1){
      if (panel.entryEditorAllowsChange() == false) {
        panel.moveFocusToEntryEditor();
        return;
      }
      super.setSelectionInterval(index0,index1);
    }
  }
);
  addSelectionListener();
  setWidths();
  sp.getViewport().setBackground(GUIGlobals.tableBackground);
  updateFont();
}
