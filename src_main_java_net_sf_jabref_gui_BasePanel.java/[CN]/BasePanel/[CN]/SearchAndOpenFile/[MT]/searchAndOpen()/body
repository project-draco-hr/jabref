{
  if (!Globals.prefs.getBoolean(JabRefPreferences.RUN_AUTOMATIC_FILE_SEARCH)) {
    return Optional.empty();
  }
  final Collection<BibEntry> entries=Collections.singleton(entry);
  final Collection<ExternalFileType> types=ExternalFileTypes.getInstance().getExternalFileTypeSelection();
  final List<File> dirs=new ArrayList<>();
  if (!basePanel.getBibDatabaseContext().getFileDirectory().isEmpty()) {
    final List<String> mdDirs=basePanel.getBibDatabaseContext().getFileDirectory();
    for (    final String mdDir : mdDirs) {
      dirs.add(new File(mdDir));
    }
  }
  final List<String> extensions=new ArrayList<>();
  for (  final ExternalFileType type : types) {
    extensions.add(type.getExtension());
  }
  Map<BibEntry,List<File>> result;
  if (Globals.prefs.getBoolean(JabRefPreferences.AUTOLINK_USE_REG_EXP_SEARCH_KEY)) {
    String regExp=Globals.prefs.get(JabRefPreferences.REG_EXP_SEARCH_EXPRESSION_KEY);
    result=RegExpFileSearch.findFilesForSet(entries,extensions,dirs,regExp);
  }
 else {
    result=FileUtil.findAssociatedFiles(entries,extensions,dirs,Globals.prefs);
  }
  if (result.containsKey(entry)) {
    final List<File> res=result.get(entry);
    if (!res.isEmpty()) {
      final String filepath=res.get(0).getPath();
      final Optional<String> extension=FileUtil.getFileExtension(filepath);
      if (extension.isPresent()) {
        Optional<ExternalFileType> type=ExternalFileTypes.getInstance().getExternalFileTypeByExt(extension.get());
        if (type.isPresent()) {
          try {
            JabRefDesktop.openExternalFileAnyFormat(basePanel.getBibDatabaseContext(),filepath,type);
            basePanel.output(Localization.lang("External viewer called") + '.');
            return Optional.of(filepath);
          }
 catch (          IOException ex) {
            basePanel.output(Localization.lang("Error") + ": " + ex.getMessage());
          }
        }
      }
    }
  }
  return Optional.empty();
}
