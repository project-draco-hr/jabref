{
  splitPane=new JSplitPane(JSplitPane.VERTICAL_SPLIT);
  splitPane.setDividerSize(GUIGlobals.SPLIT_PANE_DIVIDER_SIZE);
  boolean floatSearchActive=(mainTable != null) && isShowingFloatSearch();
  createMainTable();
  for (  EntryEditor ee : entryEditors.values()) {
    ee.validateAllFields();
  }
  splitPane.setTopComponent(mainTable.getPane());
  splitPane.setBorder(BorderFactory.createEmptyBorder());
  setBorder(BorderFactory.createEmptyBorder());
  if (mode == BasePanel.SHOWING_PREVIEW) {
    mode=BasePanel.SHOWING_NOTHING;
    int row=mainTable.findEntry(currentPreview.getEntry());
    if (row >= 0) {
      mainTable.setRowSelectionInterval(row,row);
    }
  }
 else   if (mode == BasePanel.SHOWING_EDITOR) {
    mode=BasePanel.SHOWING_NOTHING;
  }
 else {
    splitPane.setBottomComponent(null);
  }
  setLayout(new BorderLayout());
  removeAll();
  add(searchBar,BorderLayout.NORTH);
  add(splitPane,BorderLayout.CENTER);
  instantiateSearchAutoCompleter();
  this.getDatabase().addDatabaseChangeListener(new SearchAutoCompleterUpdater());
  if (Globals.prefs.getBoolean(JabRefPreferences.AUTO_COMPLETE)) {
    autoCompleters=new ContentAutoCompleters(getDatabase(),metaData);
    this.getDatabase().addDatabaseChangeListener(new AutoCompletersUpdater());
  }
 else {
    autoCompleters=new ContentAutoCompleters();
  }
  if (floatSearchActive) {
    startShowingFloatSearch();
  }
  splitPane.revalidate();
  revalidate();
  repaint();
}
