{
  int c;
  StringBuffer buffer=null;
  char firstLetter;
  String name;
  while (!_eof) {
    c=read();
    if (c == -1) {
      _eof=true;
    }
    if (!Character.isLetter((char)c) && (c != '_') && (c != '-')) {
      unread(c);
      name=buffer != null ? buffer.toString() : "";
      try {
        firstLetter=name.charAt(0);
      }
 catch (      StringIndexOutOfBoundsException ex) {
        StringBuilder lastFive=new StringBuilder(10);
        for (        StringInt entry : parsedEntries.subList(Math.max(0,parsedEntries.size() - 6),parsedEntries.size() - 1)) {
          lastFive.append(entry.s);
        }
        throw new StringIndexOutOfBoundsException(Localization.lang("Backslash parsing error near") + " \'" + lastFive.toString().replace("\n"," ")+ '\'');
      }
      if (firstLetter == 'b') {
        if (name.equalsIgnoreCase("begin")) {
          getBracketedField(LayoutHelper.IS_FIELD_START);
          return;
        }
 else         if (name.equalsIgnoreCase("begingroup")) {
          getBracketedField(LayoutHelper.IS_GROUP_START);
          return;
        }
      }
 else       if (firstLetter == 'f') {
        if (name.equalsIgnoreCase("format")) {
          if (c == '[') {
            getBracketedOptionField(LayoutHelper.IS_OPTION_FIELD);
            return;
          }
 else {
            getBracketedField(LayoutHelper.IS_OPTION_FIELD);
            return;
          }
        }
 else         if (name.equalsIgnoreCase("filename")) {
          parsedEntries.add(new StringInt(name,LayoutHelper.IS_FILENAME));
          return;
        }
 else         if (name.equalsIgnoreCase("filepath")) {
          parsedEntries.add(new StringInt(name,LayoutHelper.IS_FILEPATH));
          return;
        }
      }
 else       if (firstLetter == 'e') {
        if (name.equalsIgnoreCase("end")) {
          getBracketedField(LayoutHelper.IS_FIELD_END);
          return;
        }
 else         if (name.equalsIgnoreCase("endgroup")) {
          getBracketedField(LayoutHelper.IS_GROUP_END);
          return;
        }
 else         if (name.equalsIgnoreCase("encoding")) {
          parsedEntries.add(new StringInt(name,LayoutHelper.IS_ENCODING_NAME));
          return;
        }
      }
      parsedEntries.add(new StringInt(name,LayoutHelper.IS_SIMPLE_FIELD));
      return;
    }
 else {
      if (buffer == null) {
        buffer=new StringBuffer(100);
      }
      buffer.append((char)c);
    }
  }
}
