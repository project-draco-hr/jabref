{
  StringBuffer buffer=null;
  int c;
  boolean start=false;
  boolean inQuotes=false;
  boolean doneWithOptions=false;
  String option=null;
  String tmp;
  while (!_eof) {
    c=read();
    if (c == -1) {
      _eof=true;
      if (buffer != null) {
        if (option != null) {
          tmp=buffer.toString() + '\n' + option;
        }
 else {
          tmp=buffer.toString();
        }
        parsedEntries.add(new StringInt(tmp,LayoutHelper.IS_OPTION_FIELD));
      }
      return null;
    }
    if (!inQuotes && (c == ']' || c == '[' || doneWithOptions && (c == '{' || c == '}'))) {
      if (c == ']' || doneWithOptions && c == '}') {
        if (c == ']' && buffer != null) {
          option=buffer.toString();
          buffer=null;
          start=false;
          doneWithOptions=true;
        }
 else         if (c == '}') {
          String parameter=buffer == null ? " " : buffer.toString();
          if (option != null) {
            tmp=parameter + '\n' + option;
          }
 else {
            tmp=parameter;
          }
          parsedEntries.add(new StringInt(tmp,LayoutHelper.IS_OPTION_FIELD));
          return null;
        }
      }
 else {
        start=true;
      }
    }
 else     if (c == '"') {
      inQuotes=!inQuotes;
      if (buffer == null) {
        buffer=new StringBuffer(100);
      }
      buffer.append('"');
    }
 else {
      if (buffer == null) {
        buffer=new StringBuffer(100);
      }
      if (start) {
        buffer.append((char)c);
      }
    }
  }
  return null;
}
