{
  _prefs=prefs;
  _frame=frame;
  setLayout(new BorderLayout());
  psDir=new JTextField(25);
  pdfDir=new JTextField(25);
  fileDir=new JTextField(25);
  bibLocationAsFileDir=new JCheckBox(Globals.lang("Allow file links relative to each bib file's location"));
  bibLocAsPrimaryDir=new JCheckBox(Globals.lang("Use the bib file location as primary file directory"));
  bibLocAsPrimaryDir.setToolTipText(Globals.lang("When downloading files, or moving linked files to the " + "file directory, prefer the bib file location rather than the file directory set above"));
  bibLocationAsFileDir.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent changeEvent){
      bibLocAsPrimaryDir.setEnabled(bibLocationAsFileDir.isSelected());
    }
  }
);
  editFileTypes=new JButton(Globals.lang("Manage external file types"));
  runAutoFileSearch=new JCheckBox(Globals.lang("When opening file link, search for matching file if no link is defined"));
  allowFileAutoOpenBrowse=new JCheckBox(Globals.lang("Automatically open browse dialog when creating new file link"));
  regExpTextField=new JTextField(25);
  useRegExpComboBox=new JRadioButton(Globals.lang("Use Regular Expression Search"));
  regExpListener=new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      regExpTextField.setEditable(useRegExpComboBox.isSelected());
    }
  }
;
  useRegExpComboBox.addItemListener(regExpListener);
  editFileTypes.addActionListener(ExternalFileTypeEditor.getAction(prefsDiag));
  ButtonGroup bg=new ButtonGroup();
  bg.add(matchExactKeyOnly);
  bg.add(matchStartsWithKey);
  bg.add(useRegExpComboBox);
  BrowseAction browse;
  FormLayout layout=new FormLayout("1dlu, 8dlu, left:pref, 4dlu, fill:150dlu, 4dlu, fill:pref","");
  DefaultFormBuilder builder=new DefaultFormBuilder(layout);
  builder.appendSeparator(Globals.lang("External file links"));
  JPanel pan=new JPanel();
  builder.append(pan);
  JLabel lab=new JLabel(Globals.lang("Main file directory") + ":");
  builder.append(lab);
  builder.append(fileDir);
  browse=BrowseAction.buildForDir(_frame,fileDir);
  builder.append(new JButton(browse));
  builder.nextLine();
  builder.append(new JPanel());
  builder.append(bibLocationAsFileDir,3);
  builder.nextLine();
  builder.append(new JPanel());
  builder.append(bibLocAsPrimaryDir,3);
  builder.nextLine();
  builder.append(new JPanel());
  builder.append(matchStartsWithKey,3);
  builder.nextLine();
  builder.append(new JPanel());
  builder.append(matchExactKeyOnly,3);
  builder.nextLine();
  builder.append(new JPanel());
  builder.append(useRegExpComboBox);
  builder.append(regExpTextField);
  HelpAction helpAction=new HelpAction(helpDialog,GUIGlobals.regularExpressionSearchHelp,Globals.lang("Help on Regular Expression Search"),GUIGlobals.getIconUrl("helpSmall"));
  builder.append(helpAction.getIconButton());
  builder.nextLine();
  builder.append(new JPanel());
  builder.append(runAutoFileSearch,3);
  builder.nextLine();
  builder.append(new JPanel());
  builder.append(allowFileAutoOpenBrowse);
  builder.nextLine();
  builder.appendSeparator(Globals.lang("Sending of emails"));
  builder.append(new JPanel());
  lab=new JLabel(Globals.lang("Subject for sending an email with references").concat(":"));
  builder.append(lab);
  emailSubject=new JTextField(25);
  builder.append(emailSubject);
  builder.nextLine();
  builder.append(new JPanel());
  openFoldersOfAttachedFiles=new JCheckBox(Globals.lang("Automatically open folders of attached files"));
  builder.append(openFoldersOfAttachedFiles);
  builder.nextLine();
  builder.appendSeparator(Globals.lang("Legacy file fields"));
  pan=new JPanel();
  builder.append(pan);
  builder.append(new JLabel("<html>" + Globals.lang("Note that these settings are used for the legacy " + "<b>pdf</b> and <b>ps</b> fields only.<br>For most users, setting the <b>Main file directory</b> " + "above should be sufficient.") + "</html>"),5);
  builder.nextLine();
  pan=new JPanel();
  builder.append(pan);
  lab=new JLabel(Globals.lang("Main PDF directory") + ":");
  builder.append(lab);
  builder.append(pdfDir);
  browse=BrowseAction.buildForDir(_frame,pdfDir);
  builder.append(new JButton(browse));
  builder.nextLine();
  pan=new JPanel();
  builder.append(pan);
  lab=new JLabel(Globals.lang("Main PS directory") + ":");
  builder.append(lab);
  builder.append(psDir);
  browse=BrowseAction.buildForDir(_frame,psDir);
  builder.append(new JButton(browse));
  builder.nextLine();
  builder.appendSeparator(Globals.lang("External programs"));
  builder.nextLine();
  JPanel butpan=new JPanel();
  butpan.setLayout(new GridLayout(2,3));
  addSettingsButton(new PushToLyx(),butpan);
  addSettingsButton(new PushToEmacs(),butpan);
  addSettingsButton(new PushToWinEdt(),butpan);
  addSettingsButton(new PushToVim(),butpan);
  addSettingsButton(new PushToLatexEditor(),butpan);
  addSettingsButton(new PushToTeXstudio(),butpan);
  builder.append(new JPanel());
  builder.append(butpan,3);
  builder.nextLine();
  builder.append(pan);
  builder.append(editFileTypes);
  pan=builder.getPanel();
  pan.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  add(pan,BorderLayout.CENTER);
}
