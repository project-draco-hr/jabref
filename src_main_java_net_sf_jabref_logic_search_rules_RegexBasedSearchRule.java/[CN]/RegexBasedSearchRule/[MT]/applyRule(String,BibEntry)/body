{
  Pattern pattern;
  try {
    pattern=Pattern.compile(query,caseSensitive ? 0 : Pattern.CASE_INSENSITIVE);
  }
 catch (  PatternSyntaxException ex) {
    return false;
  }
  for (  String field : bibEntry.getFieldNames()) {
    if (bibEntry.hasField(field)) {
      String fieldContent=RegexBasedSearchRule.REMOVE_LATEX_COMMANDS.format(bibEntry.getFieldOptional(field).get());
      String fieldContentNoBrackets=RegexBasedSearchRule.REMOVE_LATEX_COMMANDS.format(fieldContent);
      Matcher m=pattern.matcher(fieldContentNoBrackets);
      if (m.find()) {
        return true;
      }
    }
  }
  return false;
}
