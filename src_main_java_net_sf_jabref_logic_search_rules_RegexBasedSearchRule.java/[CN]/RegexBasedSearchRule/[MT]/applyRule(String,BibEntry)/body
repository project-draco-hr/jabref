{
  String searchString=query;
  if (!caseSensitive) {
    searchString=searchString.toLowerCase();
  }
  List<String> words=new SentenceAnalyzer(searchString).getWords();
  List<Pattern> patterns=new ArrayList<>();
  try {
    for (    String word : words) {
      patterns.add(Pattern.compile(word,caseSensitive ? 0 : Pattern.CASE_INSENSITIVE));
    }
  }
 catch (  PatternSyntaxException ex) {
    return false;
  }
  boolean[] matchFound=new boolean[words.size()];
  for (  String field : bibEntry.getFieldNames()) {
    if (bibEntry.hasField(field)) {
      String fieldContent=RegexBasedSearchRule.REMOVE_LATEX_COMMANDS.format(bibEntry.getField(field));
      if (!caseSensitive) {
        fieldContent=fieldContent.toLowerCase();
      }
      int index=0;
      for (      Pattern pattern : patterns) {
        String fieldContentNoBrackets=RegexBasedSearchRule.REMOVE_LATEX_COMMANDS.format(fieldContent);
        Matcher m=pattern.matcher(fieldContentNoBrackets);
        matchFound[index]=matchFound[index] || m.find();
        index++;
      }
    }
  }
  for (  boolean aMatchFound : matchFound) {
    if (!aMatchFound) {
      return false;
    }
  }
  return true;
}
