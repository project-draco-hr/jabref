{
  Path file=Paths.get(OvidImporter.class.getResource("OvidImporterTest1.txt").toURI());
  List<BibEntry> entries=importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries();
  Assert.assertEquals(5,entries.size());
  BibEntry entry=entries.get(0);
  Assert.assertEquals("misc",entry.getType());
  Assert.assertEquals(Optional.of("Mustermann and Musterfrau"),entry.getField("author"));
  Assert.assertEquals(Optional.of("Short abstract"),entry.getField("abstract"));
  Assert.assertEquals(Optional.of("Musterbuch"),entry.getField("title"));
  Assert.assertEquals(Optional.of("Einleitung"),entry.getField("chaptertitle"));
  entry=entries.get(1);
  Assert.assertEquals("inproceedings",entry.getType());
  Assert.assertEquals(Optional.of("Max"),entry.getField("editor"));
  Assert.assertEquals(Optional.of("Max the Editor"),entry.getField("title"));
  Assert.assertEquals(Optional.of("Very Long Title"),entry.getField("journal"));
  Assert.assertEquals(Optional.of("28"),entry.getField("volume"));
  Assert.assertEquals(Optional.of("2"),entry.getField("issue"));
  Assert.assertEquals(Optional.of("2015"),entry.getField("year"));
  Assert.assertEquals(Optional.of("103--106"),entry.getField("pages"));
  entry=entries.get(2);
  Assert.assertEquals("incollection",entry.getType());
  Assert.assertEquals(Optional.of("Max"),entry.getField("author"));
  Assert.assertEquals(Optional.of("Test"),entry.getField("title"));
  Assert.assertEquals(Optional.of("Very Long Title"),entry.getField("journal"));
  Assert.assertEquals(Optional.of("28"),entry.getField("volume"));
  Assert.assertEquals(Optional.of("2"),entry.getField("issue"));
  Assert.assertEquals(Optional.of("April"),entry.getField("month"));
  Assert.assertEquals(Optional.of("2015"),entry.getField("year"));
  Assert.assertEquals(Optional.of("103--106"),entry.getField("pages"));
  entry=entries.get(3);
  Assert.assertEquals("book",entry.getType());
  Assert.assertEquals(Optional.of("Max"),entry.getField("author"));
  Assert.assertEquals(Optional.of("2015"),entry.getField("year"));
  Assert.assertEquals(Optional.of("Editor"),entry.getField("editor"));
  Assert.assertEquals(Optional.of("Very Long Title"),entry.getField("booktitle"));
  Assert.assertEquals(Optional.of("103--106"),entry.getField("pages"));
  Assert.assertEquals(Optional.of("Address"),entry.getField("address"));
  Assert.assertEquals(Optional.of("Publisher"),entry.getField("publisher"));
  entry=entries.get(4);
  Assert.assertEquals("article",entry.getType());
  Assert.assertEquals(Optional.of("2014"),entry.getField("year"));
  Assert.assertEquals(Optional.of("58"),entry.getField("pages"));
  Assert.assertEquals(Optional.of("Test"),entry.getField("address"));
  Assert.assertEquals(Optional.empty(),entry.getField("title"));
  Assert.assertEquals(Optional.of("TestPublisher"),entry.getField("publisher"));
}
