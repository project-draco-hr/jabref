{
  setTitle(GUIGlobals.frameTitle);
  setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
  addWindowListener(new WindowAdapter(){
    public void windowClosing(    WindowEvent e){
      (new CloseAction()).actionPerformed(null);
    }
  }
);
  initLabelMaker();
  setupLayout();
  setSize(new Dimension(prefs.getInt("sizeX"),prefs.getInt("sizeY")));
  setLocation(new Point(prefs.getInt("posX"),prefs.getInt("posY")));
  if (prefs.getBoolean("openLastEdited") && (prefs.get("lastEdited") != null)) {
    String[] names=prefs.getStringArray("lastEdited");
    for (int i=0; i < names.length; i++) {
      fileToOpen=new File(names[i]);
      if (fileToOpen.exists()) {
        openDatabaseAction.openIt();
      }
    }
  }
  setVisible(true);
  if (tabbedPane.getTabCount() > 0) {
    tabbedPane.setSelectedIndex(0);
    new FocusRequester(((BasePanel)tabbedPane.getComponentAt(0)).entryTable);
  }
}
