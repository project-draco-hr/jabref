{
  macOSXRegistration();
  MyGlassPane glassPane=new MyGlassPane();
  setGlassPane(glassPane);
  setTitle(GUIGlobals.frameTitle);
  setIconImage(GUIGlobals.getImage("jabrefIcon").getImage());
  setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
  addWindowListener(new WindowAdapter(){
    public void windowClosing(    WindowEvent e){
      (new CloseAction()).actionPerformed(null);
    }
  }
);
  initLabelMaker();
  initSidePane();
  initLayout();
  initActions();
  if (Globals.prefs.getBoolean("rememberWindowLocation")) {
    setSize(new Dimension(prefs.getInt("sizeX"),prefs.getInt("sizeY")));
    setLocation(new Point(prefs.getInt("posX"),prefs.getInt("posY")));
  }
  tabbedPane.setBorder(null);
  tabbedPane.setForeground(GUIGlobals.inActiveTabbed);
  tabbedPane.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      markActiveBasePanel();
      BasePanel bp=basePanel();
      if (bp != null) {
        groupToggle.setSelected(sidePaneManager.isComponentVisible("groups"));
        searchToggle.setSelected(sidePaneManager.isComponentVisible("search"));
        previewToggle.setSelected(Globals.prefs.getBoolean("previewEnabled"));
        highlightAny.setSelected(Globals.prefs.getBoolean("highlightGroupsMatchingAny"));
        highlightAll.setSelected(Globals.prefs.getBoolean("highlightGroupsMatchingAll"));
        Globals.focusListener.setFocused(bp.mainTable);
        new FocusRequester(bp.mainTable);
      }
    }
  }
);
}
