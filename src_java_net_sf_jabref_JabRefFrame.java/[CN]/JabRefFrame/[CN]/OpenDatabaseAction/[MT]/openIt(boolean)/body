{
  if ((fileToOpen != null) && (fileToOpen.exists())) {
    try {
      String fileName=fileToOpen.getPath();
      prefs.put("workingDirectory",fileToOpen.getPath());
      String encoding=Globals.prefs.get("defaultEncoding");
      ParserResult pr=ImportFormatReader.loadDatabase(fileToOpen,encoding);
      BibtexDatabase db=pr.getDatabase();
      HashMap meta=pr.getMetaData();
      if (pr.hasWarnings()) {
        final String[] wrns=pr.warnings();
        (new Thread(){
          public void run(){
            StringBuffer wrn=new StringBuffer();
            for (int i=0; i < wrns.length; i++)             wrn.append((i + 1) + ". " + wrns[i]+ "\n");
            if (wrn.length() > 0)             wrn.deleteCharAt(wrn.length() - 1);
            JOptionPane.showMessageDialog(ths,wrn.toString(),Globals.lang("Warnings"),JOptionPane.WARNING_MESSAGE);
          }
        }
).start();
      }
      BasePanel bp=new BasePanel(ths,db,fileToOpen,meta,prefs);
      bp.encoding=pr.getEncoding();
      SwingUtilities.invokeLater(new openItSwingHelper(bp,raisePanel));
      output(Globals.lang("Opened database") + " '" + fileName+ "' "+ Globals.lang("with")+ " "+ db.getEntryCount()+ " "+ Globals.lang("entries")+ ".");
    }
 catch (    Throwable ex) {
      JOptionPane.showMessageDialog(ths,ex.getMessage(),Globals.lang("Open database"),JOptionPane.ERROR_MESSAGE);
    }
  }
}
