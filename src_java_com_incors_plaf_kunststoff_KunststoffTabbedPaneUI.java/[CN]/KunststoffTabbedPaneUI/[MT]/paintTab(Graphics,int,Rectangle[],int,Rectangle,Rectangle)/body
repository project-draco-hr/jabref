{
  super.paintTab(g,tabPlacement,rects,tabIndex,iconRect,textRect);
  Graphics2D g2D=(Graphics2D)g;
  Rectangle tabRect=rects[tabIndex];
  Color colorShadow=KunststoffLookAndFeel.getComponentGradientColorShadow();
  Color colorShadowFaded=KunststoffUtilities.getTranslucentColor(colorShadow,0);
  Color colorReflection=KunststoffLookAndFeel.getComponentGradientColorReflection();
  Color colorReflectionFaded=KunststoffUtilities.getTranslucentColor(colorReflection,0);
  int selectedIndex=tabPane.getSelectedIndex();
  if (this.lastTabInRun(tabPane.getTabCount(),this.selectedRun) != selectedIndex) {
    if (tabPlacement == JTabbedPane.TOP || tabPlacement == JTabbedPane.BOTTOM) {
      if (tabIndex == selectedIndex + 1) {
        Rectangle gradientRect=new Rectangle((int)tabRect.getX(),(int)tabRect.getY(),SHADOW_WIDTH,(int)tabRect.getHeight());
        KunststoffUtilities.drawGradient(g,colorShadow,colorShadowFaded,gradientRect,false);
      }
    }
 else {
      if (tabIndex == selectedIndex + 1) {
        Rectangle gradientRect=new Rectangle((int)tabRect.getX(),(int)tabRect.getY(),(int)tabRect.getWidth(),SHADOW_WIDTH);
        KunststoffUtilities.drawGradient(g,colorShadow,colorShadowFaded,gradientRect,true);
      }
    }
  }
  if (tabPlacement == JTabbedPane.TOP) {
    Rectangle gradientRect=new Rectangle((int)tabRect.getX(),(int)tabRect.getY(),(int)tabRect.getWidth(),(int)SHADOW_WIDTH);
    KunststoffUtilities.drawGradient(g,colorReflection,colorReflectionFaded,gradientRect,true);
  }
 else   if (tabPlacement == JTabbedPane.BOTTOM) {
    if (tabIndex != selectedIndex) {
      Rectangle gradientRect=new Rectangle((int)tabRect.getX(),(int)tabRect.getY(),(int)tabRect.getWidth(),SHADOW_WIDTH);
      KunststoffUtilities.drawGradient(g,colorShadow,colorShadowFaded,gradientRect,true);
    }
  }
 else   if (tabPlacement == JTabbedPane.RIGHT) {
    if (tabIndex != selectedIndex) {
      Rectangle gradientRect=new Rectangle((int)tabRect.getX(),(int)tabRect.getY(),(int)SHADOW_WIDTH,(int)tabRect.getHeight());
      KunststoffUtilities.drawGradient(g,colorShadow,colorShadowFaded,gradientRect,false);
    }
  }
}
