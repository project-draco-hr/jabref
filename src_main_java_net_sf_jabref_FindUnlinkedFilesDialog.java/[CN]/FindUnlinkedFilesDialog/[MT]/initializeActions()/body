{
  actionSelectAll=new AbstractAction(Globals.lang("Select all")){
    private static final long serialVersionUID=9153126361571985383L;
    @Override public void actionPerformed(    ActionEvent e){
      CheckableTreeNode rootNode=(CheckableTreeNode)tree.getModel().getRoot();
      rootNode.setSelected(true);
      tree.invalidate();
      tree.repaint();
    }
  }
;
  actionUnselectAll=new AbstractAction(Globals.lang("Unselect all")){
    private static final long serialVersionUID=-9012913268030356450L;
    @Override public void actionPerformed(    ActionEvent e){
      CheckableTreeNode rootNode=(CheckableTreeNode)tree.getModel().getRoot();
      rootNode.setSelected(false);
      tree.invalidate();
      tree.repaint();
    }
  }
;
  actionExpandTree=new AbstractAction(Globals.lang("Expand all")){
    private static final long serialVersionUID=-4794088095435302433L;
    @Override public void actionPerformed(    ActionEvent e){
      CheckableTreeNode rootNode=(CheckableTreeNode)tree.getModel().getRoot();
      expandTree(tree,new TreePath(rootNode),true);
    }
  }
;
  actionCollapseTree=new AbstractAction(Globals.lang("Collapse all")){
    private static final long serialVersionUID=6007246730370326456L;
    @Override public void actionPerformed(    ActionEvent e){
      CheckableTreeNode rootNode=(CheckableTreeNode)tree.getModel().getRoot();
      expandTree(tree,new TreePath(rootNode),false);
    }
  }
;
  dialogPositionListener=new ComponentAdapter(){
    @Override public void componentResized(    ComponentEvent e){
      storeSizeOfDialog();
    }
    @Override public void componentMoved(    ComponentEvent e){
      storeSizeOfDialog();
    }
  }
;
}
