{
  if (state == null || state.length < 1 || state[0] != 1) {
    return null;
  }
  if (directory == null || !directory.exists() || !directory.isDirectory()) {
    return null;
  }
  File[] files=directory.listFiles(ff);
  CheckableTreeNode root=new CheckableTreeNode(null);
  int filesCount=0;
  File[] subDirectories=directory.listFiles(directoryFilter);
  for (int i=0; i < subDirectories.length; i++) {
    CheckableTreeNode subRoot=searchDirectory(subDirectories[i],ff,state,changeListener);
    if (subRoot != null && subRoot.getChildCount() > 0) {
      filesCount+=((FileNodeWrapper)subRoot.getUserObject()).fileCount;
      root.add(subRoot);
    }
  }
  root.setUserObject(new FileNodeWrapper(directory,files.length + filesCount));
  for (int i=0; i < files.length; i++) {
    root.add(new CheckableTreeNode(new FileNodeWrapper(files[i])));
    if (changeListener != null)     changeListener.stateChanged(new ChangeEvent(this));
  }
  return root;
}
