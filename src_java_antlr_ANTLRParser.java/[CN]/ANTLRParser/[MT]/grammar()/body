{
  Token n=null;
  Token h=null;
  try {
{
      _loop4:       do {
        if ((LA(1) == LITERAL_header)) {
          match(LITERAL_header);
{
switch (LA(1)) {
case STRING_LITERAL:
{
                n=LT(1);
                match(STRING_LITERAL);
                break;
              }
case ACTION:
{
              break;
            }
default :
{
            throw new NoViableAltException(LT(1),getFilename());
          }
      }
    }
    h=LT(1);
    match(ACTION);
    if (inputState.guessing == 0) {
      behavior.refHeaderAction(n,h);
    }
  }
 else {
    break _loop4;
  }
}
 while (true);
}
{
switch (LA(1)) {
case OPTIONS:
{
    fileOptionsSpec();
    break;
  }
case EOF:
case ACTION:
case DOC_COMMENT:
case LITERAL_lexclass:
case LITERAL_class:
{
  break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
{
_loop7: do {
if (((LA(1) >= ACTION && LA(1) <= LITERAL_class))) {
classDef();
}
 else {
break _loop7;
}
}
 while (true);
}
match(Token.EOF_TYPE);
}
 catch (RecognitionException ex) {
if (inputState.guessing == 0) {
reportError("rule grammar trapped: " + ex.toString());
consumeUntil(EOF);
}
 else {
throw ex;
}
}
}
