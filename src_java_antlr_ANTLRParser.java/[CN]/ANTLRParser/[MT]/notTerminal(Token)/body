{
  Token cl=null;
  Token tr=null;
  int autoGen=GrammarElement.AUTO_GEN_NONE;
switch (LA(1)) {
case CHAR_LITERAL:
{
      cl=LT(1);
      match(CHAR_LITERAL);
{
switch (LA(1)) {
case BANG:
{
            match(BANG);
            if (inputState.guessing == 0) {
              autoGen=GrammarElement.AUTO_GEN_BANG;
            }
            break;
          }
case STRING_LITERAL:
case ACTION:
case SEMI:
case CHAR_LITERAL:
case OR:
case TOKEN_REF:
case OPEN_ELEMENT_OPTION:
case LPAREN:
case RULE_REF:
case RPAREN:
case LITERAL_exception:
case NOT_OP:
case SEMPRED:
case TREE_BEGIN:
case WILDCARD:
{
          break;
        }
default :
{
        throw new NoViableAltException(LT(1),getFilename());
      }
  }
}
if (inputState.guessing == 0) {
  behavior.refCharLiteral(cl,label,true,autoGen,lastInRule());
}
break;
}
case TOKEN_REF:
{
tr=LT(1);
match(TOKEN_REF);
autoGen=ast_type_spec();
if (inputState.guessing == 0) {
behavior.refToken(null,tr,label,null,true,autoGen,lastInRule());
}
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
