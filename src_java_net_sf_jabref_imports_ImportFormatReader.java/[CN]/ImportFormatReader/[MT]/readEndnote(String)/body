{
  String ENDOFRECORD="__EOREOR__";
  ArrayList bibitems=new ArrayList();
  File f=checkAndCreateFile(filename);
  if (f == null)   return null;
  StringBuffer sb=new StringBuffer();
  try {
    BufferedReader in=new BufferedReader(new FileReader(filename));
    String str;
    boolean first=true;
    while ((str=in.readLine()) != null) {
      str=str.trim();
      if (str.indexOf("%0") == 0) {
        if (first) {
          first=false;
        }
 else {
          sb.append(ENDOFRECORD);
        }
        sb.append(str);
      }
 else       sb.append(str);
      sb.append("\n");
    }
    in.close();
  }
 catch (  IOException e) {
    return null;
  }
  String[] entries=sb.toString().split(ENDOFRECORD);
  HashMap hm=new HashMap();
  String Author="", Type="", Editor="";
  for (int i=0; i < entries.length; i++) {
    hm.clear();
    Author="";
    Type="";
    Editor="";
    String[] fields=entries[i].substring(1).split("\n%");
    for (int j=0; j < fields.length; j++) {
      if (fields[j].length() < 3)       continue;
      String prefix=fields[j].substring(0,1);
      String val=fields[j].substring(2);
      if (prefix.equals("A")) {
        if (Author.equals(""))         Author=val;
 else         Author+=" and " + val;
      }
 else       if (prefix.equals("Y")) {
        if (Editor.equals(""))         Editor=val;
 else         Editor+=" and " + val;
      }
 else       if (prefix.equals("T"))       hm.put("title",Globals.putBracesAroundCapitals(val));
 else       if (prefix.equals("0")) {
        if (val.indexOf("Journal") == 0)         Type="article";
 else         if ((val.indexOf("Book") == 0) || (val.indexOf("Edited Book") == 0))         Type="book";
 else         if (val.indexOf("Conference") == 0)         Type="inproceedings";
 else         if (val.indexOf("Report") == 0)         Type="techreport";
 else         Type="misc";
      }
 else       if (prefix.equals("7"))       hm.put("edition",val);
 else       if (prefix.equals("C"))       hm.put("address",val);
 else       if (prefix.equals("D"))       hm.put("year",val);
 else       if (prefix.equals("8"))       hm.put("date",val);
 else       if (prefix.equals("J")) {
        if (hm.get("journal") == null)         hm.put("journal",val);
      }
 else       if (prefix.equals("B")) {
        if (Type.equals("article"))         hm.put("journal",val);
 else         if (Type.equals("book") || Type.equals("inbook"))         hm.put("series",val);
 else         hm.put("booktitle",val);
      }
 else       if (prefix.equals("I"))       hm.put("publisher",val);
 else       if (prefix.equals("P"))       hm.put("pages",val);
 else       if (prefix.equals("V"))       hm.put("volume",val);
 else       if (prefix.equals("N"))       hm.put("number",val);
 else       if (prefix.equals("U"))       hm.put("url",val);
 else       if (prefix.equals("O"))       hm.put("note",val);
 else       if (prefix.equals("K"))       hm.put("keywords",val);
 else       if (prefix.equals("X"))       hm.put("abstract",val);
 else       if (prefix.equals("9")) {
        if (val.indexOf("Ph.D.") == 0)         Type="phdthesis";
      }
 else       if (prefix.equals("F"))       hm.put(Globals.KEY_FIELD,Util.checkLegalKey(val));
    }
    if (!Author.equals(""))     hm.put("author",fixAuthor(Author));
    if (!Editor.equals(""))     hm.put("editor",fixAuthor(Editor));
    BibtexEntry b=new BibtexEntry(Globals.DEFAULT_BIBTEXENTRY_ID,Globals.getEntryType(Type));
    b.setField(hm);
    if (b.getAllFields().length > 0)     bibitems.add(b);
  }
  return bibitems;
}
