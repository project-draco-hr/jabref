{
  int commaPos=name.indexOf(',');
  if (commaPos == -1) {
    String[] parts=name.split(" ");
    int piv=parts.length - 1;
    if (piv < 0)     return name;
    StringBuffer sb=new StringBuffer();
    while (Globals.JUNIOR_PARTICLES.contains(parts[piv])) {
      if (sb.length() > 0)       sb.insert(0,' ');
      sb.insert(0,parts[piv]);
      piv--;
    }
    if (sb.length() > 0)     sb.insert(0,' ');
    sb.insert(0,parts[piv]);
    piv--;
    while ((piv > 0) && isVonParticle(parts[piv])) {
      sb.insert(0,' ');
      sb.insert(0,parts[piv]);
      piv--;
    }
    if (piv >= 0)     sb.append(",");
    for (int i=0; i <= piv; i++) {
      sb.append(' ');
      sb.append(parts[i]);
    }
    return sb.toString();
  }
 else {
    int splitPos=Math.min(name.length() - 1,commaPos + 1);
    StringBuffer sb=new StringBuffer(name.substring(0,splitPos));
    String[] restParts=name.substring(splitPos).trim().split(" ");
    int piv=restParts.length - 1;
    while ((piv > 0) && isVonParticle(restParts[piv])) {
      sb.insert(0,' ');
      sb.insert(0,restParts[piv]);
      piv--;
    }
    for (int i=0; i <= piv; i++) {
      sb.append(' ');
      sb.append(restParts[i]);
    }
    return sb.toString();
  }
}
