{
  processDML(out,"DROP TABLE IF EXISTS entry_types;");
  processDML(out,"DROP TABLE IF EXISTS entries;");
  processDML(out,"DROP TABLE IF EXISTS groups;");
  processDML(out,"DROP TABLE IF EXISTS entry_group;");
  processDML(out,"CREATE TABLE entry_types ( \n" + "entry_types_id    INT UNSIGNED  NOT NULL AUTO_INCREMENT, \n" + "label			 TEXT, \n" + dml1 + ", \n"+ "PRIMARY KEY (entry_types_id) \n"+ ");");
  processDML(out,"CREATE TABLE entries ( \n" + "entries_id      INTEGER         NOT NULL AUTO_INCREMENT, \n" + "jabref_eid      VARCHAR(" + Util.getMinimumIntegerDigits() + ")   DEFAULT NULL, \n"+ "entry_types_id  INTEGER         DEFAULT NULL, \n"+ "cite_key        VARCHAR(30)     DEFAULT NULL, \n"+ dml2+ ",\n"+ "PRIMARY KEY (entries_id), \n"+ "FOREIGN KEY (entry_types_id) REFERENCES entry_type(entry_types_id) \n"+ ");");
  processDML(out,"CREATE TABLE groups ( \n" + "groups_id       INTEGER         NOT NULL AUTO_INCREMENT, \n" + "label           VARCHAR(100)     DEFAULT NULL, \n"+ "parent_id       INTEGER          DEFAULT NULL, \n"+ "PRIMARY KEY (groups_id) \n"+ ");");
  processDML(out,"CREATE TABLE entry_group ( \n" + "entries_id       INTEGER        NOT NULL AUTO_INCREMENT, \n" + "groups_id        INTEGER        DEFAULT NULL, \n"+ "FOREIGN KEY (entries_id) REFERENCES entry_fields(entries_id), \n"+ "FOREIGN KEY (groups_id)  REFERENCES groups(groups_id) \n"+ ");");
  return;
}
