{
  if (fields == null) {
    refreshFields();
  }
  String dml1="", dml2="";
switch (dbtype) {
case MYSQL:
    processDML(out,"DROP TABLE IF EXISTS entry_types;");
  processDML(out,"DROP TABLE IF EXISTS entries;");
processDML(out,"DROP TABLE IF EXISTS strings;");
processDML(out,"DROP TABLE IF EXISTS group_types;");
processDML(out,"DROP TABLE IF EXISTS groups;");
processDML(out,"DROP TABLE IF EXISTS entry_group;");
dml1=SQLutil.fieldsAsCols(fields," VARCHAR(3) DEFAULT NULL");
dml2=SQLutil.fieldsAsCols(fields," TEXT DEFAULT NULL");
dmlTable_mysql(dml1,dml2,out);
break;
case POSTGRESQL:
processDML(out,"DROP TABLE IF EXISTS entry_types CASCADE;");
processDML(out,"DROP TABLE IF EXISTS entries CASCADE;");
processDML(out,"DROP TABLE IF EXISTS strings;");
processDML(out,"DROP TABLE IF EXISTS group_types;");
processDML(out,"DROP TABLE IF EXISTS groups CASCADE;");
processDML(out,"DROP TABLE IF EXISTS entry_group;");
dml1=SQLutil.fieldsAsCols(fields," VARCHAR(3) DEFAULT NULL");
dml2=SQLutil.fieldsAsCols(fields," TEXT DEFAULT NULL");
dmlTable_postgresql(dml1,dml2,out);
break;
case DERBY:
if (out instanceof Connection) {
Connection conn=(Connection)out;
boolean commitNow=conn.getAutoCommit();
conn.setAutoCommit(true);
conn.setAutoCommit(commitNow);
}
dml1=SQLutil.fieldsAsCols(fields," VARCHAR(3) DEFAULT NULL");
dml2=SQLutil.fieldsAsCols(fields," LONG VARCHAR DEFAULT NULL");
dmlTable_derby(dml1,dml2,out);
break;
default :
System.err.println("Error: Do not recognize database enumeration.");
System.exit(0);
}
return;
}
