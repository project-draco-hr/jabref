{
  String bibAddr="";
  String ID="";
  try {
    Matcher idMatcher=idPattern.matcher(fullCitation);
    if (idMatcher.find()) {
      ID=idMatcher.group(1);
    }
 else {
      System.out.println("Did not find ID in: " + fullCitation);
      return null;
    }
    bibAddr=bibtexUrl + ID + bibtexUrlEnd;
    URL bibtexUrl=new URL(startUrl + bibAddr);
    BufferedReader in=new BufferedReader(new InputStreamReader(bibtexUrl.openStream()));
    ParserResult result=BibtexParser.parse(in);
    in.close();
    Collection<BibtexEntry> item=result.getDatabase().getEntries();
    if (item.size() == 0)     return null;
    BibtexEntry entry=item.iterator().next();
    Thread.sleep(WAIT_TIME);
    if (abs) {
      URL url=new URL(startUrl + abstractUrl + ID);
      String page=getResults(url);
      entry.setField("abstract",convertHTMLChars(page).trim());
      Thread.sleep(WAIT_TIME);
    }
    return entry;
  }
 catch (  NoSuchElementException e) {
    System.out.println("Bad Bibtex record read at: " + startUrl + bibAddr);
    System.out.println("link read was: " + fullCitation);
    e.printStackTrace();
    return null;
  }
catch (  MalformedURLException e) {
    e.printStackTrace();
    return null;
  }
catch (  ConnectException e) {
    e.printStackTrace();
    return null;
  }
catch (  IOException e) {
    e.printStackTrace();
    return null;
  }
catch (  InterruptedException e) {
    e.printStackTrace();
    return null;
  }
}
