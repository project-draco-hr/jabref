{
  final TreePath path=groupsTree.getPathForLocation(e.getPoint().x,e.getPoint().y);
  addGroupAction.setEnabled(true);
  addSubgroupAction.setEnabled(path != null);
  editGroupAction.setEnabled(path != null);
  removeGroupAndSubgroupsAction.setEnabled(path != null);
  removeGroupKeepSubgroupsAction.setEnabled(path != null);
  moveSubmenu.setEnabled(path != null);
  expandSubtreeAction.setEnabled(path != null);
  collapseSubtreeAction.setEnabled(path != null);
  removeSubgroupsAction.setEnabled(path != null);
  sortSubmenu.setEnabled(path != null);
  if (path != null) {
    groupsTree.setSelectionPath(path);
    GroupTreeNode node=(GroupTreeNode)path.getLastPathComponent();
    AbstractGroup group=node.getGroup();
    if (group instanceof AllEntriesGroup) {
      editGroupAction.setEnabled(false);
      addGroupAction.setEnabled(false);
      removeGroupAndSubgroupsAction.setEnabled(false);
      removeGroupKeepSubgroupsAction.setEnabled(false);
    }
 else {
      editGroupAction.setEnabled(true);
      addGroupAction.setEnabled(true);
      removeGroupAndSubgroupsAction.setEnabled(true);
      removeGroupKeepSubgroupsAction.setEnabled(true);
    }
    expandSubtreeAction.setEnabled(!node.isLeaf());
    collapseSubtreeAction.setEnabled(!node.isLeaf());
    sortSubmenu.setEnabled(!node.isLeaf());
    removeSubgroupsAction.setEnabled(!node.isLeaf());
    moveNodeUpAction.setEnabled(node.canMoveUp());
    moveNodeDownAction.setEnabled(node.canMoveDown());
    moveNodeLeftAction.setEnabled(node.canMoveLeft());
    moveNodeRightAction.setEnabled(node.canMoveRight());
    moveSubmenu.setEnabled(moveNodeUpAction.isEnabled() || moveNodeDownAction.isEnabled() || moveNodeLeftAction.isEnabled()|| moveNodeRightAction.isEnabled());
  }
  groupsContextMenu.show(groupsTree,e.getPoint().x,e.getPoint().y);
}
