{
  moveNodeUpAction.putValue(Action.ACCELERATOR_KEY,KeyStroke.getKeyStroke(KeyEvent.VK_UP,KeyEvent.CTRL_MASK));
  moveNodeDownAction.putValue(Action.ACCELERATOR_KEY,KeyStroke.getKeyStroke(KeyEvent.VK_DOWN,KeyEvent.CTRL_MASK));
  moveNodeLeftAction.putValue(Action.ACCELERATOR_KEY,KeyStroke.getKeyStroke(KeyEvent.VK_LEFT,KeyEvent.CTRL_MASK));
  moveNodeRightAction.putValue(Action.ACCELERATOR_KEY,KeyStroke.getKeyStroke(KeyEvent.VK_RIGHT,KeyEvent.CTRL_MASK));
  groupsContextMenu.add(editGroupAction);
  groupsContextMenu.add(addGroupAction);
  groupsContextMenu.add(addSubgroupAction);
  groupsContextMenu.addSeparator();
  groupsContextMenu.add(removeGroupAndSubgroupsAction);
  groupsContextMenu.add(removeGroupKeepSubgroupsAction);
  groupsContextMenu.add(removeSubgroupsAction);
  groupsContextMenu.addSeparator();
  groupsContextMenu.add(expandSubtreeAction);
  groupsContextMenu.add(collapseSubtreeAction);
  groupsContextMenu.addSeparator();
  groupsContextMenu.add(moveSubmenu);
  sortSubmenu.add(sortDirectSubgroups);
  sortSubmenu.add(sortAllSubgroups);
  groupsContextMenu.add(sortSubmenu);
  moveSubmenu.add(moveNodeUpAction);
  moveSubmenu.add(moveNodeDownAction);
  moveSubmenu.add(moveNodeLeftAction);
  moveSubmenu.add(moveNodeRightAction);
  groupsTree.addMouseListener(new MouseAdapter(){
    public void mousePressed(    MouseEvent e){
      if (e.isPopupTrigger())       showPopup(e);
    }
    public void mouseReleased(    MouseEvent e){
      if (e.isPopupTrigger())       showPopup(e);
    }
    public void mouseClicked(    MouseEvent e){
      TreePath path=groupsTree.getPathForLocation(e.getPoint().x,e.getPoint().y);
      if (path == null)       return;
      GroupTreeNode node=(GroupTreeNode)path.getLastPathComponent();
      if (node.isRoot())       return;
      if (e.getClickCount() == 2 && e.getButton() == MouseEvent.BUTTON1) {
        editGroupAction.actionPerformed(null);
      }
    }
  }
);
}
