{
  int _ttype;
  Token _token=null;
  int _begin=text.length();
  _ttype=TREE;
  int _saveIndex;
  Token t=null;
  Token t2=null;
  StringBuffer buf=new StringBuffer();
  int n=0;
  Vector terms=new Vector(10);
  _saveIndex=text.length();
  match('(');
  text.setLength(_saveIndex);
{
switch (LA(1)) {
case '\t':
case '\n':
case '\r':
case ' ':
{
        _saveIndex=text.length();
        mWS(false);
        text.setLength(_saveIndex);
        break;
      }
case '"':
case '#':
case '(':
case 'A':
case 'B':
case 'C':
case 'D':
case 'E':
case 'F':
case 'G':
case 'H':
case 'I':
case 'J':
case 'K':
case 'L':
case 'M':
case 'N':
case 'O':
case 'P':
case 'Q':
case 'R':
case 'S':
case 'T':
case 'U':
case 'V':
case 'W':
case 'X':
case 'Y':
case 'Z':
case '[':
case '_':
case 'a':
case 'b':
case 'c':
case 'd':
case 'e':
case 'f':
case 'g':
case 'h':
case 'i':
case 'j':
case 'k':
case 'l':
case 'm':
case 'n':
case 'o':
case 'p':
case 'q':
case 'r':
case 's':
case 't':
case 'u':
case 'v':
case 'w':
case 'x':
case 'y':
case 'z':
{
      break;
    }
default :
{
    throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
  }
}
}
_saveIndex=text.length();
mTREE_ELEMENT(true);
text.setLength(_saveIndex);
t=_returnToken;
terms.appendElement(generator.processStringForASTConstructor(t.getText()));
{
switch (LA(1)) {
case '\t':
case '\n':
case '\r':
case ' ':
{
  _saveIndex=text.length();
  mWS(false);
  text.setLength(_saveIndex);
  break;
}
case ')':
case ',':
{
break;
}
default :
{
throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
}
}
}
{
_loop649: do {
if ((LA(1) == ',')) {
_saveIndex=text.length();
match(',');
text.setLength(_saveIndex);
{
switch (LA(1)) {
case '\t':
case '\n':
case '\r':
case ' ':
{
  _saveIndex=text.length();
  mWS(false);
  text.setLength(_saveIndex);
  break;
}
case '"':
case '#':
case '(':
case 'A':
case 'B':
case 'C':
case 'D':
case 'E':
case 'F':
case 'G':
case 'H':
case 'I':
case 'J':
case 'K':
case 'L':
case 'M':
case 'N':
case 'O':
case 'P':
case 'Q':
case 'R':
case 'S':
case 'T':
case 'U':
case 'V':
case 'W':
case 'X':
case 'Y':
case 'Z':
case '[':
case '_':
case 'a':
case 'b':
case 'c':
case 'd':
case 'e':
case 'f':
case 'g':
case 'h':
case 'i':
case 'j':
case 'k':
case 'l':
case 'm':
case 'n':
case 'o':
case 'p':
case 'q':
case 'r':
case 's':
case 't':
case 'u':
case 'v':
case 'w':
case 'x':
case 'y':
case 'z':
{
break;
}
default :
{
throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
}
}
}
_saveIndex=text.length();
mTREE_ELEMENT(true);
text.setLength(_saveIndex);
t2=_returnToken;
terms.appendElement(generator.processStringForASTConstructor(t2.getText()));
{
switch (LA(1)) {
case '\t':
case '\n':
case '\r':
case ' ':
{
_saveIndex=text.length();
mWS(false);
text.setLength(_saveIndex);
break;
}
case ')':
case ',':
{
break;
}
default :
{
throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
}
}
}
}
 else {
break _loop649;
}
}
 while (true);
}
text.setLength(_begin);
text.append(generator.getASTCreateString(terms));
_saveIndex=text.length();
match(')');
text.setLength(_saveIndex);
if (_createToken && _token == null && _ttype != Token.SKIP) {
_token=makeToken(_ttype);
_token.setText(new String(text.getBuffer(),_begin,text.length() - _begin));
}
_returnToken=_token;
}
