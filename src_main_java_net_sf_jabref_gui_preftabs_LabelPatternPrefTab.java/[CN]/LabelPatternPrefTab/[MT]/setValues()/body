{
  super.setValues(prefs.getKeyPattern());
  defaultPat.setText(Globals.prefs.get(JabRefPreferences.DEFAULT_LABEL_PATTERN));
  dontOverwrite.setSelected(Globals.prefs.getBoolean(JabRefPreferences.AVOID_OVERWRITING_KEY));
  generateOnSave.setSelected(Globals.prefs.getBoolean(JabRefPreferences.GENERATE_KEYS_BEFORE_SAVING));
  autoGenerateOnImport.setSelected(Globals.prefs.getBoolean(JabRefPreferences.GENERATE_KEYS_AFTER_INSPECTION));
  warnBeforeOverwriting.setSelected(Globals.prefs.getBoolean(JabRefPreferences.WARN_BEFORE_OVERWRITING_KEY));
  boolean alwaysAddLetter=Globals.prefs.getBoolean(JabRefPreferences.KEY_GEN_ALWAYS_ADD_LETTER);
  boolean firstLetterA=Globals.prefs.getBoolean(JabRefPreferences.KEY_GEN_FIRST_LETTER_A);
  if (alwaysAddLetter) {
    this.alwaysAddLetter.setSelected(true);
  }
 else   if (firstLetterA) {
    this.letterStartA.setSelected(true);
  }
 else {
    this.letterStartB.setSelected(true);
  }
  warnBeforeOverwriting.setEnabled(!dontOverwrite.isSelected());
  KeyPatternRegex.setText(Globals.prefs.get("KeyPatternRegex"));
  KeyPatternReplacement.setText(Globals.prefs.get("KeyPatternReplacement"));
}
