{
  Globals.prefs.put(JabRefPreferences.DEFAULT_LABEL_PATTERN,defaultPat.getText());
  Globals.prefs.putBoolean(JabRefPreferences.WARN_BEFORE_OVERWRITING_KEY,warnBeforeOverwriting.isSelected());
  Globals.prefs.putBoolean(JabRefPreferences.AVOID_OVERWRITING_KEY,dontOverwrite.isSelected());
  Globals.prefs.put(JabRefPreferences.KEY_PATTERN_REGEX,keyPatternRegex.getText());
  Globals.prefs.put(JabRefPreferences.KEY_PATTERN_REPLACEMENT,keyPatternReplacement.getText());
  Globals.prefs.putBoolean(JabRefPreferences.GENERATE_KEYS_AFTER_INSPECTION,autoGenerateOnImport.isSelected());
  Globals.prefs.putBoolean(JabRefPreferences.GENERATE_KEYS_BEFORE_SAVING,generateOnSave.isSelected());
  if (alwaysAddLetter.isSelected()) {
    Globals.prefs.putBoolean(JabRefPreferences.KEY_GEN_ALWAYS_ADD_LETTER,true);
  }
 else   if (letterStartA.isSelected()) {
    Globals.prefs.putBoolean(JabRefPreferences.KEY_GEN_FIRST_LETTER_A,true);
    Globals.prefs.putBoolean(JabRefPreferences.KEY_GEN_ALWAYS_ADD_LETTER,false);
  }
 else {
    Globals.prefs.putBoolean(JabRefPreferences.KEY_GEN_FIRST_LETTER_A,false);
    Globals.prefs.putBoolean(JabRefPreferences.KEY_GEN_ALWAYS_ADD_LETTER,false);
  }
  LabelPatternUtil.updateDefaultPattern();
  GlobalLabelPattern keypatterns=getLabelPatternAsGlobalLabelPattern();
  prefs.putKeyPattern(keypatterns);
}
