{
  try (InputStream is=MedlinePlainImporter.class.getResourceAsStream("MedlinePlainImporterTestMultipleEntries.txt")){
    List<BibEntry> entries=importer.importDatabase(is).getDatabase().getEntries();
    Assert.assertEquals(7,entries.size());
    BibEntry testEntry=entries.get(0);
    Assert.assertEquals("article",testEntry.getType());
    Assert.assertNull(testEntry.getField("month"));
    Assert.assertEquals("Long, Vicky and Marland, Hilary",testEntry.getField("author"));
    Assert.assertEquals("From danger and motherhood to health and beauty: health advice for the factory girl in early twentieth-century Britain.",testEntry.getField("title"));
    testEntry=entries.get(1);
    Assert.assertEquals("conference",testEntry.getType());
    Assert.assertEquals("06",testEntry.getField("month"));
    Assert.assertNull(testEntry.getField("author"));
    Assert.assertNull(testEntry.getField("title"));
    testEntry=entries.get(2);
    Assert.assertEquals("book",testEntry.getType());
    Assert.assertEquals("This is a Testtitle: This title should be appended: This title should also be appended. Another append to the Title? LastTitle",testEntry.getField("title"));
    testEntry=entries.get(3);
    Assert.assertEquals("techreport",testEntry.getType());
    Assert.assertNotNull(testEntry.getField("doi"));
    testEntry=entries.get(4);
    Assert.assertEquals("inproceedings",testEntry.getType());
    Assert.assertEquals("Inproceedings book title",testEntry.getField("booktitle"));
    BibEntry expectedEntry5=new BibEntry();
    expectedEntry5.setType("proceedings");
    expectedEntry5.setField("keywords","Female");
    BibtexEntryAssert.assertEquals(expectedEntry5,entries.get(5));
    BibEntry expectedEntry6=new BibEntry();
    expectedEntry6.setType("misc");
    expectedEntry6.setField("keywords","Female");
    BibtexEntryAssert.assertEquals(expectedEntry6,entries.get(6));
  }
 }
