{
  Objects.requireNonNull(file);
  try {
    ParserResult pr=OpenDatabaseAction.loadDatabase(file.toFile(),Globals.prefs.getDefaultEncoding());
    if (pr.getDatabase().hasEntries() || !pr.getDatabase().hasNoStrings()) {
      pr.setFile(file.toFile());
      return new UnknownFormatImport(ImportFormatReader.BIBTEX_FORMAT,pr);
    }
  }
 catch (  IOException ignore) {
  }
  List<BibEntry> bestResult=null;
  int bestResultCount=0;
  String bestFormatName=null;
  for (  ImportFormat imFo : getImportFormats()) {
    try {
      if (!imFo.isRecognizedFormat(file,Globals.prefs.getDefaultEncoding())) {
        continue;
      }
      ParserResult parserResult=importFromFile(imFo,file);
      List<BibEntry> entries=parserResult.getDatabase().getEntries();
      BibDatabases.purgeEmptyEntries(entries);
      int entryCount=entries.size();
      if (entryCount > bestResultCount) {
        bestResult=entries;
        bestResultCount=bestResult.size();
        bestFormatName=imFo.getFormatName();
      }
    }
 catch (    IOException ex) {
    }
  }
  if (bestResult != null) {
    ParserResult parserResult=new ParserResult(bestResult);
    return new UnknownFormatImport(bestFormatName,parserResult);
  }
  return null;
}
