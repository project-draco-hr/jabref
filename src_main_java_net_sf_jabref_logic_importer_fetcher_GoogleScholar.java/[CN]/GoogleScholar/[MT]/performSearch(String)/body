{
  try {
    obtainAndModifyCookie();
    List<BibEntry> foundEntries=new ArrayList<>(10);
    URIBuilder uriBuilder=new URIBuilder(BASIC_SEARCH_URL);
    uriBuilder.addParameter("hl","en");
    uriBuilder.addParameter("btnG","Search");
    uriBuilder.addParameter("q",query);
    addHitsFromQuery(foundEntries,uriBuilder.toString());
    if (foundEntries.size() == 10) {
      uriBuilder.addParameter("start","10");
      addHitsFromQuery(foundEntries,uriBuilder.toString());
    }
    return foundEntries;
  }
 catch (  URISyntaxException e) {
    throw new FetcherException("Error while fetching from " + getName(),e);
  }
catch (  IOException e) {
    if (e.getMessage().contains("Server returned HTTP response code: 503 for URL")) {
      throw new FetcherException("Fetching from Google Scholar failed.",Localization.lang("This might be caused by reaching the traffic limitation of Google Scholar (see 'Help' for details)."),e);
    }
 else {
      throw new FetcherException("Error while fetching from " + getName(),e);
    }
  }
}
