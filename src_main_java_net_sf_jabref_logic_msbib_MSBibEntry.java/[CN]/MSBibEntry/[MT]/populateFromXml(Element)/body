{
  for (int i=0; i < entry.getChildNodes().getLength(); i++) {
    Node node=entry.getChildNodes().item(i);
    if (node.getNodeType() == Node.ELEMENT_NODE) {
      String key=node.getLocalName();
      String value=node.getTextContent();
      if ("SourceType".equals(key)) {
        this.bibtexEntryType=value;
      }
      fields.put(key,value);
    }
  }
  String temp=getXmlElementTextContent("Pages",entry);
  if (temp != null) {
    pages=new PageNumbers(temp);
  }
  standardNumber=getXmlElementTextContent("StandardNumber",entry);
  conferenceName=getXmlElementTextContent("ConferenceName",entry);
  String city=getXmlElementTextContent("City",entry);
  String state=getXmlElementTextContent("StateProvince",entry);
  String country=getXmlElementTextContent("CountryRegion",entry);
  StringBuilder addressBuffer=new StringBuilder();
  if (city != null) {
    addressBuffer.append(city);
  }
  if (((state != null) && !state.isEmpty()) && ((city != null) && !city.isEmpty())) {
    addressBuffer.append(",").append(' ');
    addressBuffer.append(state);
  }
  if ((country != null) && !country.isEmpty()) {
    addressBuffer.append(",").append(' ');
    addressBuffer.append(country);
  }
  address=addressBuffer.toString().trim();
  if (address.isEmpty() || ",".equals(address)) {
    address=null;
  }
  if ("Patent".equalsIgnoreCase(bibtexEntryType)) {
    number=getXmlElementTextContent("PatentNumber",entry);
  }
  journalName=getXmlElementTextContent("JournalName",entry);
  month=getXmlElementTextContent("Month",entry);
  internetSiteTitle=getXmlElementTextContent("InternetSiteTitle",entry);
  String monthAccessed=getXmlElementTextContent("MonthAccessed",entry);
  String dayAccessed=getXmlElementTextContent("DayAccessed",entry);
  String yearAccessed=getXmlElementTextContent("YearAccessed",entry);
  StringBuilder sbDateAccesed=new StringBuilder();
  if (monthAccessed != null) {
    sbDateAccesed.append(monthAccessed);
    sbDateAccesed.append(' ');
  }
  if (dayAccessed != null) {
    sbDateAccesed.append(dayAccessed);
    sbDateAccesed.append(", ");
  }
  if (yearAccessed != null) {
    sbDateAccesed.append(yearAccessed);
  }
  dateAccessed=sbDateAccesed.toString().trim();
  if (dateAccessed.isEmpty() || ",".equals(dateAccessed)) {
    dateAccessed=null;
  }
  NodeList nodeLst=entry.getElementsByTagNameNS("*","Author");
  if (nodeLst.getLength() > 0) {
    getAuthors((Element)nodeLst.item(0));
  }
}
