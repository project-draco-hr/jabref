{
  Element msbibEntry=document.createElement(B_COLON + "Source");
  addField(document,msbibEntry,"SourceType",sourceType);
  addField(document,msbibEntry,BIBTEX + "Entry",bibTexEntry);
  addField(document,msbibEntry,"Tag",tag);
  addField(document,msbibEntry,"GUID",GUID);
  if (LCID >= 0) {
    addField(document,msbibEntry,"LCID",Integer.toString(LCID));
  }
  addField(document,msbibEntry,"Title",title);
  addField(document,msbibEntry,"Year",year);
  addField(document,msbibEntry,"ShortTitle",shortTitle);
  addField(document,msbibEntry,"Comments",comments);
  Element allAuthors=document.createElement(B_COLON + "Author");
  addAuthor(document,allAuthors,"Author",authors);
  String bookAuthor="BookAuthor";
  addAuthor(document,allAuthors,bookAuthor,bookAuthors);
  addAuthor(document,allAuthors,"Editor",editors);
  addAuthor(document,allAuthors,"Translator",translators);
  addAuthor(document,allAuthors,"ProducerName",producerNames);
  addAuthor(document,allAuthors,"Composer",composers);
  addAuthor(document,allAuthors,"Conductor",conductors);
  addAuthor(document,allAuthors,"Performer",performers);
  addAuthor(document,allAuthors,"Writer",writers);
  addAuthor(document,allAuthors,"Director",directors);
  addAuthor(document,allAuthors,"Compiler",compilers);
  addAuthor(document,allAuthors,"Interviewer",interviewers);
  addAuthor(document,allAuthors,"Interviewee",interviewees);
  addAuthor(document,allAuthors,"Inventor",inventors);
  addAuthor(document,allAuthors,"Counsel",counsels);
  msbibEntry.appendChild(allAuthors);
  if (pages != null) {
    addField(document,msbibEntry,"Pages",pages.toString("-"));
  }
  addField(document,msbibEntry,"Volume",volume);
  addField(document,msbibEntry,"NumberVolumes",numberOfVolumes);
  addField(document,msbibEntry,"Edition",edition);
  addField(document,msbibEntry,"StandardNumber",standardNumber);
  addField(document,msbibEntry,"Publisher",publisher);
  addAddress(document,msbibEntry,address);
  addField(document,msbibEntry,"BookTitle",bookTitle);
  addField(document,msbibEntry,"ChapterNumber",chapterNumber);
  addField(document,msbibEntry,"JournalName",journalName);
  addField(document,msbibEntry,"Issue",issue);
  addField(document,msbibEntry,"PeriodicalTitle",periodicalTitle);
  addField(document,msbibEntry,"ConferenceName",conferenceName);
  addField(document,msbibEntry,"Department",department);
  addField(document,msbibEntry,"Institution",institution);
  addField(document,msbibEntry,"ThesisType",thesisType);
  addField(document,msbibEntry,"InternetSiteTitle",internetSiteTitle);
  addDate(document,msbibEntry,dateAccessed,"Accessed");
  addField(document,msbibEntry,"Month",month);
  addField(document,msbibEntry,"DOI",doi);
  addField(document,msbibEntry,"URL",url);
  addField(document,msbibEntry,"ProductionCompany",productionCompany);
  addField(document,msbibEntry,"PublicationTitle",publicationTitle);
  addField(document,msbibEntry,"Medium",medium);
  addField(document,msbibEntry,"AlbumTitle",albumTitle);
  addField(document,msbibEntry,"RecordingNumber",recordingNumber);
  addField(document,msbibEntry,"Theater",theater);
  addField(document,msbibEntry,"Distributor",distributor);
  addField(document,msbibEntry,"BroadcastTitle",broadcastTitle);
  addField(document,msbibEntry,"Broadcaster",broadcaster);
  addField(document,msbibEntry,"Station",station);
  addField(document,msbibEntry,"Type",type);
  addField(document,msbibEntry,"PatentNumber",patentNumber);
  addField(document,msbibEntry,"Court",court);
  addField(document,msbibEntry,"Reporter",reporter);
  addField(document,msbibEntry,"CaseNumber",caseNumber);
  addField(document,msbibEntry,"AbbreviatedCaseNumber",abbreviatedCaseNumber);
  addField(document,msbibEntry,BIBTEX + "Series",bibTexSeries);
  addField(document,msbibEntry,BIBTEX + "Abstract",bibTexAbstract);
  addField(document,msbibEntry,BIBTEX + "KeyWords",bibTexKeyWords);
  addField(document,msbibEntry,BIBTEX + "CrossRef",bibTexCrossRef);
  addField(document,msbibEntry,BIBTEX + "HowPublished",bibTex_HowPublished);
  addField(document,msbibEntry,BIBTEX + "Affiliation",bibTexAffiliation);
  addField(document,msbibEntry,BIBTEX + "Contents",bibTexContents);
  addField(document,msbibEntry,BIBTEX + "Copyright",bibTexCopyright);
  addField(document,msbibEntry,BIBTEX + "Price",bibTexPrice);
  addField(document,msbibEntry,BIBTEX + "Size",bibTexSize);
  addField(document,msbibEntry,BIBTEX + "InType",bibTexInType);
  addField(document,msbibEntry,BIBTEX + "Paper",bibTexPaper);
  return msbibEntry;
}
