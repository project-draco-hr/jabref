{
  if (!fileOk) {
    return;
  }
  List<ImportFormatReader.UnknownFormatImport> imports=new ArrayList<ImportFormatReader.UnknownFormatImport>();
  for (  String filename : filenames) {
    try {
      if (importer != null) {
        ParserResult pr=new ParserResult(Globals.importFormatReader.importFromFile(importer,filename,frame));
        imports.add(new ImportFormatReader.UnknownFormatImport(importer.getFormatName(),pr));
      }
 else {
        frame.output(Globals.lang("Importing in unknown format") + "...");
        imports.add(Globals.importFormatReader.importUnknownFormat(filename));
      }
    }
 catch (    IOException e) {
      importError=e;
    }
  }
  bibtexResult=mergeImportResults(imports);
  for (  ImportFormatReader.UnknownFormatImport p : imports) {
    if (p != null) {
      ParserResult pr=p.parserResult;
      if (pr.hasWarnings()) {
        if (Globals.prefs.getBoolean(JabRefPreferences.DISPLAY_KEY_WARNING_DIALOG_AT_STARTUP) && pr.hasWarnings()) {
          String[] wrns=pr.warnings();
          StringBuilder wrn=new StringBuilder();
          for (int j=0; j < wrns.length; j++) {
            wrn.append(j + 1).append(". ").append(wrns[j]).append("\n");
          }
          if (wrn.length() > 0) {
            wrn.deleteCharAt(wrn.length() - 1);
          }
          JOptionPane.showMessageDialog(frame,wrn.toString(),Globals.lang("Warnings"),JOptionPane.WARNING_MESSAGE);
        }
      }
    }
  }
}
