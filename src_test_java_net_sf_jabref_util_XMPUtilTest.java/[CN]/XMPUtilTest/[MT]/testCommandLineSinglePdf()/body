{
{
    BibtexEntry e=t1BibtexEntry();
    XMPUtil.writeXMP(pdfFile,e,null);
    try (ByteArrayOutputStream s=new ByteArrayOutputStream()){
      PrintStream oldOut=System.out;
      System.setOut(new PrintStream(s));
      XMPUtil.main(new String[]{pdfFile.getAbsolutePath()});
      System.setOut(oldOut);
      String bibtex=s.toString();
      ParserResult result=BibtexParser.parse(new StringReader(bibtex));
      Collection<BibtexEntry> c=result.getDatabase().getEntries();
      Assert.assertEquals(1,c.size());
      BibtexEntry x=c.iterator().next();
      assertEqualsBibtexEntry(e,x);
    }
   }
  BibtexEntry e=t1BibtexEntry();
  XMPUtil.writeXMP(pdfFile,e,null);
  try (ByteArrayOutputStream s=new ByteArrayOutputStream()){
    PrintStream oldOut=System.out;
    System.setOut(new PrintStream(s));
    XMPUtil.main(new String[]{"-x",pdfFile.getAbsolutePath()});
    System.setOut(oldOut);
    s.close();
    String xmp=s.toString();
    Assert.assertTrue(xmp.indexOf("xpacket") > 0);
    Assert.assertTrue(xmp.indexOf("adobe:ns:meta") > 0);
    Assert.assertTrue((xmp.indexOf("<bibtex:bibtexkey>canh05</bibtex:bibtexkey>") > 0) || (xmp.indexOf("bibtex:bibtexkey=") > 0));
    Assert.assertTrue(xmp.indexOf("<rdf:li>K. Crowston</rdf:li>") > 0);
    Assert.assertTrue((xmp.indexOf("id='W5M0MpCehiHzreSzNTczkc9d'?>") > 0) || (xmp.indexOf("id=\"W5M0MpCehiHzreSzNTczkc9d\"?>") > 0));
    Assert.assertTrue((xmp.indexOf("xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'") > 0) || (xmp.indexOf("xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"") > 0));
    Assert.assertTrue(xmp.indexOf("<rdf:Description") > 0);
    Assert.assertTrue((xmp.indexOf("<?xpacket end='w'?>") > 0) || (xmp.indexOf("<?xpacket end=\"w\"?>") > 0));
    writeManually(pdfFile,xmp);
    List<BibtexEntry> l=XMPUtil.readXMP(pdfFile);
    Assert.assertEquals(1,l.size());
    assertEqualsBibtexEntry(t1BibtexEntry(),l.get(0));
  }
 }
