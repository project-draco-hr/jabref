{
{
    BibtexEntry e=t1BibtexEntry();
    XMPUtil.writeXMP(pdfFile,e,null);
    ByteArrayOutputStream s=new ByteArrayOutputStream();
    PrintStream oldOut=System.out;
    System.setOut(new PrintStream(s));
    XMPUtil.main(new String[]{pdfFile.getAbsolutePath()});
    System.setOut(oldOut);
    s.close();
    String bibtex=s.toString();
    ParserResult result=BibtexParser.parse(new StringReader(bibtex));
    Collection<BibtexEntry> c=result.getDatabase().getEntries();
    Assert.assertEquals(1,c.size());
    BibtexEntry x=c.iterator().next();
    assertEqualsBibtexEntry(e,x);
  }
{
    BibtexEntry e=t1BibtexEntry();
    XMPUtil.writeXMP(pdfFile,e,null);
    ByteArrayOutputStream s=new ByteArrayOutputStream();
    PrintStream oldOut=System.out;
    System.setOut(new PrintStream(s));
    XMPUtil.main(new String[]{"-x",pdfFile.getAbsolutePath()});
    System.setOut(oldOut);
    s.close();
    String xmp=s.toString();
    Assert.assertTrue(0 < xmp.indexOf("xpacket"));
    Assert.assertTrue(0 < xmp.indexOf("adobe:ns:meta"));
    Assert.assertTrue((0 < xmp.indexOf("<bibtex:bibtexkey>canh05</bibtex:bibtexkey>")) || (0 < xmp.indexOf("bibtex:bibtexkey=")));
    Assert.assertTrue(0 < xmp.indexOf("<rdf:li>K. Crowston</rdf:li>"));
    Assert.assertTrue((0 < xmp.indexOf("id='W5M0MpCehiHzreSzNTczkc9d'?>")) || (0 < xmp.indexOf("id=\"W5M0MpCehiHzreSzNTczkc9d\"?>")));
    Assert.assertTrue((0 < xmp.indexOf("xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'")) || (0 < xmp.indexOf("xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"")));
    Assert.assertTrue(0 < xmp.indexOf("<rdf:Description"));
    Assert.assertTrue((0 < xmp.indexOf("<?xpacket end='w'?>")) || (0 < xmp.indexOf("<?xpacket end=\"w\"?>")));
    writeManually(pdfFile,xmp);
    List<BibtexEntry> l=XMPUtil.readXMP(pdfFile);
    Assert.assertEquals(1,l.size());
    assertEqualsBibtexEntry(t1BibtexEntry(),l.get(0));
  }
}
