{
  diag=new JDialog(frame,Localization.lang("Manage citations"),true);
  this.ooBase=ooBase;
  list=new BasicEventList<>();
  XNameAccess nameAccess=ooBase.getReferenceMarks();
  String[] names=ooBase.getJabRefReferenceMarks(nameAccess);
  for (  String name : names) {
    List<String> keys=ooBase.parseRefMarkName(name);
    list.add(new CitEntry(name,keys,"<html>..." + ooBase.getCitationContext(nameAccess,name,30,30,true) + "...</html>",ooBase.getCustomProperty(name)));
  }
  tableModel=new EventTableModel<>(list,new CitEntryFormat());
  table=new JTable(tableModel);
  diag.add(new JScrollPane(table),BorderLayout.CENTER);
  ButtonBarBuilder bb=new ButtonBarBuilder();
  bb.addGlue();
  bb.addButton(ok);
  bb.addButton(cancel);
  bb.addGlue();
  bb.getPanel().setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  diag.add(bb.getPanel(),BorderLayout.SOUTH);
  diag.pack();
  diag.setSize(700,400);
  Action okAction=new AbstractAction(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      try {
        storeSettings();
      }
 catch (      Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(frame,Localization.lang("Problem modifying citation"));
      }
      diag.dispose();
    }
  }
;
  ok.addActionListener(okAction);
  Action cancelAction=new AbstractAction(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      diag.dispose();
    }
  }
;
  cancel.addActionListener(cancelAction);
  bb.getPanel().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(Globals.prefs.getKey("Close dialog"),"close");
  bb.getPanel().getActionMap().put("close",cancelAction);
  table.getColumnModel().getColumn(0).setPreferredWidth(600);
  table.getColumnModel().getColumn(1).setPreferredWidth(90);
  table.setPreferredScrollableViewportSize(new Dimension(700,500));
  table.addMouseListener(new TableClickListener());
}
