{
  diag=new JDialog(frame,Localization.lang("Set/clear/rename fields"),true);
  field=new JTextField();
  text=new JTextField();
  text.setEnabled(false);
  renameTo=new JTextField();
  renameTo.setEnabled(false);
  JButton ok=new JButton(Localization.lang("Ok"));
  JButton cancel=new JButton(Localization.lang("Cancel"));
  all=new JRadioButton(Localization.lang("All entries"));
  selected=new JRadioButton(Localization.lang("Selected entries"));
  clear=new JRadioButton(Localization.lang("Clear fields"));
  set=new JRadioButton(Localization.lang("Set fields"));
  rename=new JRadioButton(Localization.lang("Rename field to:"));
  rename.setToolTipText(Localization.lang("Move contents of a field into a field with a different name"));
  set.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      text.setEnabled(set.isSelected());
    }
  }
);
  clear.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent event){
      overwrite.setEnabled(!clear.isSelected());
    }
  }
);
  rename.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      renameTo.setEnabled(rename.isSelected());
    }
  }
);
  overwrite=new JCheckBox(Localization.lang("Overwrite existing field values"),true);
  ButtonGroup bg=new ButtonGroup();
  bg.add(all);
  bg.add(selected);
  bg=new ButtonGroup();
  bg.add(clear);
  bg.add(set);
  bg.add(rename);
  DefaultFormBuilder builder=new DefaultFormBuilder(new FormLayout("left:pref, 4dlu, fill:100dlu",""));
  builder.appendSeparator(Localization.lang("Field name"));
  builder.append(Localization.lang("Field name"));
  builder.append(field);
  builder.nextLine();
  builder.appendSeparator(Localization.lang("Include entries"));
  builder.append(all,3);
  builder.nextLine();
  builder.append(selected,3);
  builder.nextLine();
  builder.appendSeparator(Localization.lang("New field value"));
  builder.append(set);
  builder.append(text);
  builder.nextLine();
  builder.append(clear);
  builder.nextLine();
  builder.append(rename);
  builder.append(renameTo);
  builder.nextLine();
  builder.append(overwrite,3);
  ButtonBarBuilder bb=new ButtonBarBuilder();
  bb.addGlue();
  bb.addButton(ok);
  bb.addButton(cancel);
  bb.addGlue();
  builder.getPanel().setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  bb.getPanel().setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  diag.getContentPane().add(builder.getPanel(),BorderLayout.CENTER);
  diag.getContentPane().add(bb.getPanel(),BorderLayout.SOUTH);
  diag.pack();
  ok.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (rename.isSelected()) {
        String[] fields=getFieldNames(field.getText());
        if (fields.length > 1) {
          JOptionPane.showMessageDialog(diag,Localization.lang("You can only rename one field at a time"),"",JOptionPane.ERROR_MESSAGE);
          return;
        }
      }
      cancelled=false;
      diag.dispose();
    }
  }
);
  AbstractAction cancelAction=new AbstractAction(){
    @Override public void actionPerformed(    ActionEvent e){
      cancelled=true;
      diag.dispose();
    }
  }
;
  cancel.addActionListener(cancelAction);
  ActionMap am=builder.getPanel().getActionMap();
  InputMap im=builder.getPanel().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
  im.put(Globals.prefs.getKey("Close dialog"),"close");
  am.put("close",cancelAction);
}
