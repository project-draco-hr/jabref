{
  boolean changedFieldSet=false;
  for (  String fieldName : removedFields) {
    metaData.remove(Globals.SELECTOR_META_PREFIX + fieldName);
    changedFieldSet=true;
  }
  for (  String fieldName : wordListModels.keySet()) {
    if ((fieldName == null) || FIELD_FIRST_LINE.equals(fieldName)) {
      continue;
    }
    DefaultListModel lm=wordListModels.get(fieldName);
    int start=0;
    if (lm.size() > 0) {
      while ((start < lm.size()) && (lm.get(start)).equals(WORD_FIRSTLINE_TEXT)) {
        start++;
      }
    }
    Vector<String> data=metaData.getData(Globals.SELECTOR_META_PREFIX + fieldName);
    boolean newField=false;
    if (data == null) {
      newField=true;
      data=new Vector<String>();
      changedFieldSet=true;
    }
 else {
      data.clear();
    }
    for (int wrd=start; wrd < lm.size(); wrd++) {
      String word=(String)lm.get(wrd);
      data.add(word);
    }
    if (newField) {
      metaData.putData(Globals.SELECTOR_META_PREFIX + fieldName,data);
    }
  }
  panel.markNonUndoableBaseChanged();
  if (changedFieldSet) {
    panel.rebuildAllEntryEditors();
  }
 else {
    panel.updateAllContentSelectors();
  }
  panel.getAutoCompleters().addContentSelectorValuesToAutoCompleters(panel.metaData);
}
