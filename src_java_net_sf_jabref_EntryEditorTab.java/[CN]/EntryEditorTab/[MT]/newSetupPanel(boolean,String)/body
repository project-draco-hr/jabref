{
  panel.setName(title);
  String colSpec="fill:pref, 2dlu, fill:pref:grow, 2dlu, fill:pref, 2dlu";
  StringBuffer sb=new StringBuffer();
  for (int i=0; i < fields.length; i++) {
    sb.append("fill:pref:grow, ");
  }
  if (addKeyField)   sb.append("4dlu, pref");
 else   sb.delete(sb.length() - 2,sb.length());
  String rowSpec=sb.toString();
  DefaultFormBuilder builder=new DefaultFormBuilder(panel,new FormLayout(colSpec,rowSpec));
  for (int i=0; i < fields.length; i++) {
    final FieldTextArea ta=new FieldTextArea(fields[i],null);
    JComponent ex=parent.getExtra(fields[i],ta);
    setupJTextComponent(ta);
    editors.put(fields[i],ta);
    if (i == 0)     activeField=ta;
    ta.getPane().setPreferredSize(new Dimension(100,(int)(50.0 * BibtexFields.getFieldWeight(fields[i]))));
    builder.append(ta.getLabel());
    if (ex == null)     builder.append(ta.getPane(),3);
 else {
      builder.append(ta.getPane());
      JPanel pan=new JPanel();
      pan.setLayout(new BorderLayout());
      pan.add(ex,BorderLayout.NORTH);
      builder.append(pan);
    }
    builder.nextLine();
  }
  if (addKeyField) {
    final FieldTextField tf=new FieldTextField(BibtexFields.KEY_FIELD,(String)parent.getEntry().getField(BibtexFields.KEY_FIELD),true);
    setupJTextComponent(tf);
    editors.put("bibtexkey",tf);
    if (editors.size() == 1)     activeField=tf;
    builder.nextLine();
    builder.append(tf.getLabel());
    builder.append(tf,3);
  }
}
