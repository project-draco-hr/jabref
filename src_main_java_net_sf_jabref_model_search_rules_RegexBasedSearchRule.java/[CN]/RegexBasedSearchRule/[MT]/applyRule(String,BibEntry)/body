{
  Pattern pattern;
  try {
    pattern=Pattern.compile(query,caseSensitive ? 0 : Pattern.CASE_INSENSITIVE);
  }
 catch (  PatternSyntaxException ex) {
    return false;
  }
  for (  String field : bibEntry.getFieldNames()) {
    Optional<String> fieldOptional=bibEntry.getField(field);
    if (fieldOptional.isPresent()) {
      String fieldContentNoBrackets=bibEntry.getLatexFreeField(field).get();
      Matcher m=pattern.matcher(fieldContentNoBrackets);
      if (m.find()) {
        return true;
      }
    }
  }
  return false;
}
