{
  if ((!e.isActionKey()) && Character.isLetterOrDigit(e.getKeyChar())) {
    int sortingColumn=table.getSortingColumn(0);
    if (sortingColumn < 0)     return;
    Comparator<BibtexEntry> comp=table.getComparatorForColumn(sortingColumn);
    int piv=1;
    while (((sortingColumn=table.getSortingColumn(piv)) >= 0) && ((comp=table.getComparatorForColumn(sortingColumn)) != null) && !(comp instanceof FieldComparator)) {
      piv++;
    }
    if ((comp == null) || !(comp instanceof FieldComparator))     return;
    String field=((FieldComparator)comp).getFieldName();
    System.out.println(String.valueOf(e.getKeyChar()) + " " + field);
    SortedList<BibtexEntry> list=table.getSortedForTable();
    BibtexEntry testEntry=new BibtexEntry("0");
    testEntry.setField(field,String.valueOf(e.getKeyChar()));
    int i=list.sortIndex(testEntry);
    System.out.println(i);
  }
}
