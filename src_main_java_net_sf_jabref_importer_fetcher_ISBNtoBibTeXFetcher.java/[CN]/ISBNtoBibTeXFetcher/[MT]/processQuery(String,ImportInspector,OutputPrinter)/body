{
  String q;
  try {
    q=URLEncoder.encode(query,StandardCharsets.UTF_8.name());
  }
 catch (  UnsupportedEncodingException e) {
    status.setStatus(Localization.lang("Error"));
    LOGGER.warn("Shouldn't happen...",e);
    return false;
  }
  String urlString=String.format(ISBNtoBibTeXFetcher.URL_PATTERN,q);
  URL url;
  try {
    url=new URL(urlString);
  }
 catch (  MalformedURLException e) {
    LOGGER.warn("Bad URL when fetching ISBN info",e);
    return false;
  }
  try (InputStream source=url.openStream()){
    String bibtexString;
    try (Scanner scan=new Scanner(source)){
      bibtexString=scan.useDelimiter("\\A").next();
    }
     BibEntry entry=BibtexParser.singleFromString(bibtexString);
    if (entry != null) {
      String title=entry.getField("title");
      if (title != null) {
        if (Globals.prefs.getBoolean(JabRefPreferences.USE_UNIT_FORMATTER_ON_SEARCH)) {
          title=unitsToLatexFormatter.format(title);
        }
        if (Globals.prefs.getBoolean(JabRefPreferences.USE_CASE_KEEPER_ON_SEARCH)) {
          title=protectTermsFormatter.format(title);
        }
        entry.setField("title",title);
      }
      inspector.addEntry(entry);
      return true;
    }
    return false;
  }
 catch (  FileNotFoundException e) {
    status.showMessage(Localization.lang("No entry found for ISBN %0 at www.ebook.de",query));
    LOGGER.debug("No ISBN info found",e);
    return false;
  }
catch (  UnknownHostException e) {
    status.showMessage(Localization.lang("No_internet_connection."));
    LOGGER.debug("No internet connection",e);
    return false;
  }
catch (  Exception e) {
    status.showMessage(e.toString());
    LOGGER.warn("Problem getting info for ISBN",e);
    return false;
  }
}
