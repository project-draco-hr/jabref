{
  if (citeSeerFetcher.activateImportFetcher()) {
    (new Thread(){
      BibtexEntry entry;
class Update implements ImportInspectionDialog.CallBack {
        public void done(        int entriesImported){
          if (entriesImported > 0)           panel.output(Globals.lang("Completed import from CiteSeer."));
 else           panel.output(Globals.lang("No entries imported."));
        }
        public void cancelled(){
          panel.output(Globals.lang("%0 import cancelled.","CiteSeer"));
        }
        public void stopFetching(){
        }
      }
      public void run(){
        ImportInspectionDialog diag=null;
        if (Globals.prefs.getBoolean("useImportInspectionDialog")) {
          diag=new ImportInspectionDialog(panel.frame(),panel,GUIGlobals.DEFAULT_INSPECTION_FIELDS,Globals.lang("Fetch CiteSeer"),false);
          diag.addCallBack(new Update());
          Util.placeDialog(diag,panel.frame());
          diag.setVisible(true);
          diag.setProgress(0,1);
        }
        NamedCompound undoEdit=new NamedCompound(Globals.lang("CiteSeer import entries")), dummyCompound=new NamedCompound(Globals.lang("Ok"));
        BooleanAssign overwriteAll=new BooleanAssign(true), overwriteNone=new BooleanAssign(false), newValue=new BooleanAssign(false);
        Hashtable rejectedEntries=new Hashtable();
        String text=tf.getText().replaceAll(",",";");
        String[] ids=text.split(";");
        BibtexEntry[] entries=new BibtexEntry[ids.length];
        citeSeerFetcher.activateImportFetcher();
        for (int i=0; i < entries.length; i++) {
          entries[i]=new BibtexEntry(Util.createNeutralId(),BibtexEntryType.getType("article"));
          entries[i].setField("citeseerurl",ids[i].trim());
          boolean newValues=citeSeerFetcher.importCiteSeerEntry(entries[i],dummyCompound,overwriteAll,overwriteNone,newValue,rejectedEntries);
          if (diag != null) {
            diag.addEntry(entries[i]);
            diag.setProgress(i + 1,entries.length);
          }
 else {
          }
        }
        citeSeerFetcher.deactivateImportFetcher();
        if (diag != null) {
          diag.entryListComplete();
        }
 else {
          panel.frame().addBibEntries(Arrays.asList(entries),null,false);
          (new Update()).done(entries.length);
        }
      }
    }
).start();
  }
 else {
    JOptionPane.showMessageDialog(panel.frame(),Globals.lang("A CiteSeer import operation is currently in progress.") + "  " + Globals.lang("Please wait until it has finished."),Globals.lang("CiteSeer Import Error"),JOptionPane.WARNING_MESSAGE);
  }
}
