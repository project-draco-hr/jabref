{
  try {
    Transferable transferable=dtde.getTransferable();
    Point p=dtde.getLocation();
    TreePath path=getPathForLocation(p.x,p.y);
    if (path == null) {
      dtde.rejectDrop();
      return;
    }
    GroupTreeNode target=(GroupTreeNode)path.getLastPathComponent();
    if (transferable.isDataFlavorSupported(GroupTreeNode.flavor)) {
      GroupTreeNode source=(GroupTreeNode)transferable.getTransferData(GroupTreeNode.flavor);
      if (source == target) {
        dtde.rejectDrop();
        return;
      }
      if (source.isNodeDescendant(target)) {
        dtde.rejectDrop();
        return;
      }
      Enumeration expandedPaths=groupSelector.getExpandedPaths();
      UndoableMoveGroup undo=new UndoableMoveGroup(groupSelector,groupSelector.getGroupTreeRoot(),source,target,target.getChildCount());
      target.add(source);
      dtde.getDropTargetContext().dropComplete(true);
      groupSelector.revalidateGroups(new TreePath[]{new TreePath(source.getPath())},refreshPaths(expandedPaths));
      groupSelector.concludeMoveGroup(undo,source);
    }
 else     if (transferable.isDataFlavorSupported(TransferableEntrySelection.flavorInternal)) {
      if (!target.getGroup().supportsAdd()) {
        dtde.rejectDrop();
        return;
      }
      TransferableEntrySelection selection=(TransferableEntrySelection)transferable.getTransferData(TransferableEntrySelection.flavorInternal);
      target.getGroup().addSelection(selection.getSelection());
      dtde.getDropTargetContext().dropComplete(true);
      groupSelector.revalidateGroups();
    }
 else {
      dtde.rejectDrop();
      return;
    }
  }
 catch (  IOException ioe) {
  }
catch (  UnsupportedFlavorException e) {
  }
}
