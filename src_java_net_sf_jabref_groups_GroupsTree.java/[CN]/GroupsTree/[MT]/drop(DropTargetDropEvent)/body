{
  try {
    Transferable transferable=dtde.getTransferable();
    if (!transferable.isDataFlavorSupported(GroupTreeNode.flavor)) {
      dtde.rejectDrop();
      return;
    }
    Point p=dtde.getLocation();
    TreePath path=getPathForLocation(p.x,p.y);
    if (path == null) {
      dtde.rejectDrop();
      return;
    }
    GroupTreeNode target=(GroupTreeNode)path.getLastPathComponent();
    GroupTreeNode source=(GroupTreeNode)transferable.getTransferData(GroupTreeNode.flavor);
    if (source == target) {
      dtde.rejectDrop();
      return;
    }
    if (source.isNodeChild(target)) {
      dtde.rejectDrop();
      return;
    }
    Enumeration expandedPaths=groupSelector.getExpandedPaths();
    UndoableMoveGroup undo=new UndoableMoveGroup(groupSelector,groupSelector.getGroupTreeRoot(),source,target,target.getChildCount());
    target.add(source);
    dtde.getDropTargetContext().dropComplete(true);
    groupSelector.revalidateGroups(new TreePath[]{new TreePath(source.getPath())},refreshPaths(expandedPaths));
    groupSelector.concludeMoveGroup(undo,source);
  }
 catch (  IOException ioe) {
  }
catch (  UnsupportedFlavorException e) {
  }
}
