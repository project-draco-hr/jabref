{
  treeMouseListener=new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      int x=e.getX();
      int y=e.getY();
      int row=tree.getRowForLocation(x,y);
      TreePath path=tree.getPathForRow(row);
      if (path != null) {
        CheckableTreeNode node=(CheckableTreeNode)path.getLastPathComponent();
        if (e.getClickCount() == 2) {
          Object userObject=node.getUserObject();
          if ((userObject instanceof FileNodeWrapper) && node.isLeaf()) {
            FileNodeWrapper fnw=(FileNodeWrapper)userObject;
            try {
              JabRefDesktop.openExternalViewer(JabRef.jrf.getCurrentBasePanel().metaData(),fnw.file.getAbsolutePath(),"pdf");
            }
 catch (            IOException e1) {
              LOGGER.info("Error opening file",e1);
            }
          }
        }
 else {
          node.check();
          tree.invalidate();
          tree.repaint();
        }
      }
    }
  }
;
  CheckableTreeNode startNode=new CheckableTreeNode("ROOT");
  DefaultTreeModel model=new DefaultTreeModel(startNode);
  tree.setModel(model);
  tree.setRootVisible(false);
  DefaultTreeCellRenderer renderer=new CheckboxTreeCellRenderer();
  tree.setCellRenderer(renderer);
  tree.addMouseListener(treeMouseListener);
}
