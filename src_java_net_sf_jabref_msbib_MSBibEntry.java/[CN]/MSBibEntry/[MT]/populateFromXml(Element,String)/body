{
  String temp=null;
  sourceType=getFromXml(_bcol + "SourceType",entry);
  tag=getFromXml(_bcol + "Tag",entry);
  temp=getFromXml(_bcol + "LCID",entry);
  if (temp != null) {
    try {
      LCID=Integer.parseInt(temp);
    }
 catch (    Exception e) {
      LCID=-1;
    }
  }
  title=getFromXml(_bcol + "Title",entry);
  year=getFromXml(_bcol + "Year",entry);
  month=getFromXml(_bcol + "Month",entry);
  day=getFromXml(_bcol + "Day",entry);
  shortTitle=getFromXml(_bcol + "ShortTitle",entry);
  comments=getFromXml(_bcol + "Comments",entry);
  temp=getFromXml(_bcol + "Pages",entry);
  if (temp != null)   pages=new PageNumbers(temp);
  volume=getFromXml(_bcol + "Volume",entry);
  numberOfVolumes=getFromXml(_bcol + "NumberVolumes",entry);
  edition=getFromXml(_bcol + "Edition",entry);
  standardNumber=getFromXml(_bcol + "StandardNumber",entry);
  publisher=getFromXml(_bcol + "Publisher",entry);
  String city=getFromXml(_bcol + "City",entry);
  String state=getFromXml(_bcol + "StateProvince",entry);
  String country=getFromXml(_bcol + "CountryRegion",entry);
  address="";
  if (city != null)   address+=city + ", ";
  if (state != null)   address+=state + " ";
  if (country != null)   address+=country;
  address=address.trim();
  if (address.equals("") || address.equals(","))   address=null;
  bookTitle=getFromXml(_bcol + "BookTitle",entry);
  chapterNumber=getFromXml(_bcol + "ChapterNumber",entry);
  journalName=getFromXml(_bcol + "JournalName",entry);
  issue=getFromXml(_bcol + "Issue",entry);
  periodicalTitle=getFromXml(_bcol + "PeriodicalTitle",entry);
  conferenceName=getFromXml(_bcol + "ConferenceName",entry);
  department=getFromXml(_bcol + "Department",entry);
  institution=getFromXml(_bcol + "Institution",entry);
  thesisType=getFromXml(_bcol + "ThesisType",entry);
  internetSiteTitle=getFromXml(_bcol + "InternetSiteTitle",entry);
  String month=getFromXml(_bcol + "MonthAccessed",entry);
  String day=getFromXml(_bcol + "DayAccessed",entry);
  String year=getFromXml(_bcol + "YearAccessed",entry);
  dateAccessed="";
  if (month != null)   dateAccessed+=month + " ";
  if (day != null)   dateAccessed+=day + ", ";
  if (year != null)   dateAccessed+=year;
  dateAccessed=dateAccessed.trim();
  if (dateAccessed.equals("") || dateAccessed.equals(","))   dateAccessed=null;
  url=getFromXml(_bcol + "URL",entry);
  productionCompany=getFromXml(_bcol + "ProductionCompany",entry);
  publicationTitle=getFromXml(_bcol + "PublicationTitle",entry);
  medium=getFromXml(_bcol + "Medium",entry);
  albumTitle=getFromXml(_bcol + "AlbumTitle",entry);
  recordingNumber=getFromXml(_bcol + "RecordingNumber",entry);
  theater=getFromXml(_bcol + "Theater",entry);
  distributor=getFromXml(_bcol + "Distributor",entry);
  broadcastTitle=getFromXml(_bcol + "BroadcastTitle",entry);
  broadcaster=getFromXml(_bcol + "Broadcaster",entry);
  station=getFromXml(_bcol + "Station",entry);
  type=getFromXml(_bcol + "Type",entry);
  patentNumber=getFromXml(_bcol + "PatentNumber",entry);
  court=getFromXml(_bcol + "Court",entry);
  reporter=getFromXml(_bcol + "Reporter",entry);
  caseNumber=getFromXml(_bcol + "CaseNumber",entry);
  abbreviatedCaseNumber=getFromXml(_bcol + "AbbreviatedCaseNumber",entry);
  bibTex_Series=getFromXml(_bcol + BIBTEX + "Series",entry);
  bibTex_Abstract=getFromXml(_bcol + BIBTEX + "Abstract",entry);
  bibTex_KeyWords=getFromXml(_bcol + BIBTEX + "KeyWords",entry);
  bibTex_CrossRef=getFromXml(_bcol + BIBTEX + "CrossRef",entry);
  bibTex_HowPublished=getFromXml(_bcol + BIBTEX + "HowPublished",entry);
  bibTex_Affiliation=getFromXml(_bcol + BIBTEX + "Affiliation",entry);
  bibTex_Contents=getFromXml(_bcol + BIBTEX + "Contents",entry);
  bibTex_Copyright=getFromXml(_bcol + BIBTEX + "Copyright",entry);
  bibTex_Price=getFromXml(_bcol + BIBTEX + "Price",entry);
  bibTex_Size=getFromXml(_bcol + BIBTEX + "Size",entry);
  NodeList nodeLst=entry.getElementsByTagName(_bcol + "Author");
  if (nodeLst.getLength() > 0)   getAuthors((Element)(nodeLst.item(0)),_bcol);
}
