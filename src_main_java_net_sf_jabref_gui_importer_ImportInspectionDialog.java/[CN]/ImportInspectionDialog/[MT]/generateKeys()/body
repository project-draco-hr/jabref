{
  entries.getReadWriteLock().writeLock().lock();
  try {
    BibDatabase database;
    MetaData localMetaData;
    if (panel == null) {
      database=new BibDatabase();
      localMetaData=new MetaData();
    }
 else {
      database=panel.getDatabase();
      localMetaData=panel.getBibDatabaseContext().getMetaData();
    }
    List<Optional<String>> keys=new ArrayList<>(entries.size());
    for (    BibEntry entry : entries) {
      entry.setId(IdGenerator.next());
      database.insertEntry(entry);
      BibtexKeyPatternUtil.makeLabel(localMetaData,database,entry,Globals.prefs.getBibtexKeyPatternPreferences());
      keys.add(entry.getCiteKeyOptional());
    }
    preview.update();
    preview.repaint();
    for (    BibEntry entry : entries) {
      database.removeEntry(entry);
    }
  }
  finally {
    entries.getReadWriteLock().writeLock().unlock();
  }
  glTable.repaint();
}
