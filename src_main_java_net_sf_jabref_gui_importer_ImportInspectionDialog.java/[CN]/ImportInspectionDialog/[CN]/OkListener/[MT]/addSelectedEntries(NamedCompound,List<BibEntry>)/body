{
  if (newDatabase) {
    Defaults defaults=new Defaults(BibDatabaseMode.fromPreference(Globals.prefs.getBoolean(JabRefPreferences.BIBLATEX_DEFAULT_MODE)));
    panel=new BasePanel(frame,new BibDatabaseContext(defaults));
  }
  boolean groupingCanceled=false;
  UpdateField.setAutomaticFields(selected,Globals.prefs.getUpdateFieldPreferences());
  if (EntryMarker.shouldMarkEntries()) {
    for (    BibEntry entry : selected) {
      EntryMarker.markEntry(entry,EntryMarker.IMPORT_MARK_LEVEL,false,new NamedCompound(""));
    }
  }
  if (Globals.prefs.getBoolean(JabRefPreferences.UNMARK_ALL_ENTRIES_BEFORE_IMPORTING)) {
    for (    BibEntry entry : panel.getDatabase().getEntries()) {
      EntryMarker.unmarkEntry(entry,true,panel.getDatabase(),ce);
    }
  }
  for (  BibEntry entry : selected) {
    entry.setSearchHit(false);
    entry.setGroupHit(false);
    Set<GroupTreeNode> groups=groupAdditions.get(entry);
    if (!groupingCanceled && (groups != null)) {
      groupingCanceled=addToGroups(ce,entry,groups);
    }
    entry.setId(IdGenerator.next());
    panel.getDatabase().insertEntry(entry);
    ce.addEdit(new UndoableInsertEntry(panel.getDatabase(),entry,panel));
  }
  ce.end();
  panel.getUndoManager().addEdit(ce);
}
