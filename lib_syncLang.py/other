import sys
import os
import re
if (len(sys.argv) == 1):
    print 'This program must be run from the "src" directory right below the jabref base directory.\n    \nUsage: syncLang.py option   \nOption can be one of the following:\n    -d: Search the language files for empty and duplicate translations. \n        For each duplicate set found, a list will be printed showing the various \n        translations for the same key. There is currently to option to remove duplicates\n        automatically.\n        \n    -s [-u]: Search the Java source files for language keys. All keys that are found in the source files\n        but not in "JabRef_en.properties" are listed. If the -u option is specified, these keys will\n        automatically be added to "JabRef_en.properties".\n        \n        The program will also list "Not terminated" keys. These are keys that are concatenated over \n        more than one line, that the program is not (currently) able to resolve.\n        \n        Finally, the program will list "Possible redundant keys". These are keys that are present in\n        "JabRef_en.properties", but could not be found in the Java source code. Note that the \n        "Not terminated" keys will be likely to appear here, since they were not resolved.\n        \n    -t [-u]: Compare the contents of "JabRef_en.properties" and "Menu_en.properties" against the other \n        language files. The program will list for all the other files which keys from the English\n        file are missing. Additionally, the program will list keys in the other files which are\n        not present in the English file - possible redundant keys.\n        \n        If the -u option is specified, all missing keys will automatically be added to the files.\n        There is currently no option to remove redundant keys automatically.\n'
elif ((len(sys.argv) >= 2) and (sys.argv[1] == '-s')):
    if ((len(sys.argv) >= 3) and (sys.argv[2] == '-u')):
        update = 1
    else:
        update = 0
    findNewKeysInJavaCode('resource/JabRef_en.properties', '.', update)
elif ((len(sys.argv) >= 2) and (sys.argv[1] == '-t')):
    if ((len(sys.argv) >= 3) and (sys.argv[2] == '-u')):
        changeFiles = 1
    else:
        changeFiles = 0
    handleFileSet('resource/JabRef_en.properties', ('resource/JabRef_de.properties', 'resource/JabRef_fr.properties', 'resource/JabRef_it.properties', 'resource/JabRef_nl.properties', 'resource/JabRef_da.properties', 'resource/JabRef_no.properties', 'resource/JabRef_tr.properties'), changeFiles)
    handleFileSet('resource/Menu_en.properties', ('resource/Menu_de.properties', 'resource/Menu_fr.properties', 'resource/Menu_it.properties', 'resource/Menu_nl.properties', 'resource/Menu_da.properties', 'resource/Menu_no.properties', 'resource/Menu_tr.properties'), changeFiles)
elif ((len(sys.argv) >= 2) and (sys.argv[1] == '-d')):
    files = ('resource/JabRef_en.properties', 'resource/JabRef_de.properties', 'resource/JabRef_fr.properties', 'resource/JabRef_it.properties', 'resource/JabRef_no.properties', 'resource/JabRef_nl.properties', 'resource/JabRef_da.properties', 'resource/JabRef_tr.properties', 'resource/Menu_en.properties', 'resource/Menu_de.properties', 'resource/Menu_fr.properties', 'resource/Menu_it.properties', 'resource/Menu_no.properties', 'resource/Menu_nl.properties', 'resource/Menu_da.properties', 'resource/Menu_tr.properties')
    for file in files:
        lookForDuplicates(file)
