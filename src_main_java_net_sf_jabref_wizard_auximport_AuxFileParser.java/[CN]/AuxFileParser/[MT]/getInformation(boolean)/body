{
  StringBuilder result=new StringBuilder();
  result.append(Localization.lang("keys_in_database")).append(' ').append(masterDatabase.getEntryCount()).append('\n').append(Localization.lang("found_in_aux_file")).append(' ').append(getFoundKeysInAux()).append('\n').append(Localization.lang("resolved")).append(' ').append(getResolvedKeysCount()).append('\n').append(Localization.lang("not_found")).append(' ').append(getNotResolvedKeysCount()).append('\n').append(Localization.lang("crossreferenced entries included")).append(' ').append(getCrossreferencedEntriesCount()).append('\n');
  if (includeMissingEntries && (getNotResolvedKeysCount() > 0)) {
    for (    String entry : unresolvedKeys) {
      result.append(entry).append('\n');
    }
  }
  if (nestedAuxCounter > 0) {
    result.append(Localization.lang("nested_aux_files")).append(' ').append(nestedAuxCounter);
  }
  return result.toString();
}
