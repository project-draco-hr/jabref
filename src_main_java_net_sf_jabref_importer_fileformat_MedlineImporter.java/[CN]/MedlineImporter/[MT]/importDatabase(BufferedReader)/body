{
  Objects.requireNonNull(reader);
  List<BibEntry> bibItems=new ArrayList<>();
  try {
    JAXBContext context=JAXBContext.newInstance("net.sf.jabref.importer.fileformat.medline");
    XMLInputFactory xmlInputFactory=XMLInputFactory.newFactory();
    XMLStreamReader xmlStreamReader=xmlInputFactory.createXMLStreamReader(reader);
    while (!xmlStreamReader.isStartElement()) {
      xmlStreamReader.next();
    }
    Unmarshaller unmarshaller=context.createUnmarshaller();
    Object unmarshalledObject=unmarshaller.unmarshal(xmlStreamReader);
    if (unmarshalledObject instanceof PubmedArticleSet) {
      PubmedArticleSet articleSet=(PubmedArticleSet)unmarshalledObject;
      for (      Object article : articleSet.getPubmedArticleOrPubmedBookArticle()) {
        if (article instanceof PubmedArticle) {
          PubmedArticle currentArticle=(PubmedArticle)article;
          parseArticle(currentArticle,bibItems);
        }
        if (article instanceof PubmedBookArticle) {
          PubmedBookArticle currentArticle=(PubmedBookArticle)article;
          parseBookArticle(currentArticle,bibItems);
        }
      }
    }
 else     if (unmarshalledObject instanceof PubmedArticle) {
      PubmedArticle article=(PubmedArticle)unmarshalledObject;
      parseArticle(article,bibItems);
    }
 else     if (unmarshalledObject instanceof PubmedBookArticle) {
      PubmedBookArticle currentArticle=(PubmedBookArticle)unmarshalledObject;
      parseBookArticle(currentArticle,bibItems);
    }
 else {
      PubmedBookArticleSet bookArticleSet=(PubmedBookArticleSet)unmarshalledObject;
      for (      PubmedBookArticle bookArticle : bookArticleSet.getPubmedBookArticle()) {
        parseBookArticle(bookArticle,bibItems);
      }
    }
  }
 catch (  JAXBException|XMLStreamException e) {
    LOGGER.debug("could not parse document",e);
    return ParserResult.fromErrorMessage(e.getLocalizedMessage());
  }
  return new ParserResult(bibItems);
}
