{
  boolean emptyKeys=false;
  for (  BibEntry entry : entries) {
    if (entry.getCiteKey() == null) {
      emptyKeys=true;
      break;
    }
  }
  if (!emptyKeys) {
    return true;
  }
  String[] options={Localization.lang("Generate keys"),Localization.lang("Cancel")};
  int answer=JOptionPane.showOptionDialog(this.frame,Localization.lang("Cannot cite entries without BibTeX keys. Generate keys now?"),Localization.lang("Cite"),JOptionPane.OK_CANCEL_OPTION,JOptionPane.PLAIN_MESSAGE,null,options,null);
  BasePanel panel=frame.getCurrentBasePanel();
  if ((answer == JOptionPane.OK_OPTION) && (panel != null)) {
    LabelPatternPreferences prefs=LabelPatternPreferences.fromPreferences(Globals.prefs);
    NamedCompound undoCompound=new NamedCompound(Localization.lang("Cite"));
    for (    BibEntry entry : entries) {
      if (entry.getCiteKey() == null) {
        LabelPatternUtil.makeLabel(panel.getBibDatabaseContext().getMetaData(),panel.getDatabase(),entry,prefs);
        undoCompound.addEdit(new UndoableKeyChange(panel.getDatabase(),entry,null,entry.getCiteKey()));
      }
    }
    undoCompound.end();
    panel.getUndoManager().addEdit(undoCompound);
    return true;
  }
 else {
    return false;
  }
}
