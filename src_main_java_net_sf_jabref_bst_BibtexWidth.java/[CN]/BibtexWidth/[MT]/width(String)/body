{
  int i=0;
  int n=toMeasure.length();
  int braceLevel=0;
  char[] c=toMeasure.toCharArray();
  int result=0;
  while (i < n) {
    if (c[i] == '{') {
      braceLevel++;
      if ((braceLevel == 1) && ((i + 1) < n) && (c[i + 1] == '\\')) {
        i++;
        while ((i < n) && (braceLevel > 0)) {
          i++;
          int afterBackslash=i;
          while ((i < n) && Character.isLetter(c[i])) {
            i++;
          }
          if ((i < n) && (i == afterBackslash)) {
            i++;
          }
 else {
            if (BibtexCaseChanger.findSpecialChar(c,afterBackslash) != null) {
              result+=BibtexWidth.getSpecialCharWidth(c,afterBackslash);
            }
          }
          while ((i < n) && Character.isWhitespace(c[i])) {
            i++;
          }
          while ((i < n) && (braceLevel > 0) && (c[i] != '\\')) {
            if (c[i] == '}') {
              braceLevel--;
            }
 else             if (c[i] == '{') {
              braceLevel++;
            }
 else {
              result+=BibtexWidth.getCharWidth(c[i]);
            }
            i++;
          }
        }
        continue;
      }
    }
 else     if (c[i] == '}') {
      if (braceLevel > 0) {
        braceLevel--;
      }
 else {
        LOGGER.warn("Too many closing braces in string: " + toMeasure);
      }
    }
    result+=BibtexWidth.getCharWidth(c[i]);
    i++;
  }
  if (braceLevel > 0) {
    LOGGER.warn("No enough closing braces in string: " + toMeasure);
  }
  return result;
}
