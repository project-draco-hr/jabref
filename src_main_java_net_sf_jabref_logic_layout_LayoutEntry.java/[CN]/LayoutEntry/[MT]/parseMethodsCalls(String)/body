{
  List<List<String>> result=new ArrayList<>();
  char[] c=calls.toCharArray();
  int i=0;
  while (i < c.length) {
    int start=i;
    if (Character.isJavaIdentifierStart(c[i])) {
      i++;
      while ((i < c.length) && (Character.isJavaIdentifierPart(c[i]) || (c[i] == '.'))) {
        i++;
      }
      if ((i < c.length) && (c[i] == '(')) {
        String method=calls.substring(start,i);
        i++;
        int bracelevel=0;
        if (i < c.length) {
          if (c[i] == '"') {
            i++;
            int startParam=i;
            i++;
            boolean escaped=false;
            while (((i + 1) < c.length) && !(!escaped && (c[i] == '"') && (c[i + 1] == ')')&& (bracelevel == 0))) {
              if (c[i] == '\\') {
                escaped=!escaped;
              }
 else               if (c[i] == '(') {
                bracelevel++;
              }
 else               if (c[i] == ')') {
                bracelevel--;
              }
 else {
                escaped=false;
              }
              i++;
            }
            String param=calls.substring(startParam,i);
            result.add(Arrays.asList(method,param));
          }
 else {
            int startParam=i;
            while ((i < c.length) && (!((c[i] == ')') && (bracelevel == 0)))) {
              if (c[i] == '(') {
                bracelevel++;
              }
 else               if (c[i] == ')') {
                bracelevel--;
              }
              i++;
            }
            String param=calls.substring(startParam,i);
            result.add(Arrays.asList(method,param));
          }
        }
 else {
          result.add(Collections.singletonList(method));
        }
      }
 else {
        String method=calls.substring(start,i);
        result.add(Collections.singletonList(method));
      }
    }
    i++;
  }
  return result;
}
