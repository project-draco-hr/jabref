{
  List<StringInt> blockEntries=null;
  List<LayoutEntry> tmpEntries=new ArrayList<>();
  LayoutEntry le;
  String blockStart=parsedEntries.get(0).s;
  String blockEnd=parsedEntries.get(parsedEntries.size() - 1).s;
  if (!blockStart.equals(blockEnd)) {
    LOGGER.warn("Field start and end entry must be equal.");
  }
  type=layoutType;
  text=blockEnd;
  for (  StringInt parsedEntry : parsedEntries.subList(1,parsedEntries.size() - 1)) {
    if ((parsedEntry.i == LayoutHelper.IS_LAYOUT_TEXT) || (parsedEntry.i == LayoutHelper.IS_SIMPLE_FIELD)) {
    }
 else     if ((parsedEntry.i == LayoutHelper.IS_FIELD_START) || (parsedEntry.i == LayoutHelper.IS_GROUP_START)) {
      blockEntries=new ArrayList<>();
      blockStart=parsedEntry.s;
    }
 else     if ((parsedEntry.i == LayoutHelper.IS_FIELD_END) || (parsedEntry.i == LayoutHelper.IS_GROUP_END)) {
      if (blockStart.equals(parsedEntry.s)) {
        blockEntries.add(parsedEntry);
        if (parsedEntry.i == LayoutHelper.IS_GROUP_END) {
          le=new LayoutEntry(blockEntries,LayoutHelper.IS_GROUP_START,repository);
        }
 else {
          le=new LayoutEntry(blockEntries,LayoutHelper.IS_FIELD_START,repository);
        }
        tmpEntries.add(le);
        blockEntries=null;
      }
 else {
        LOGGER.warn("Nested field entries are not implemented!");
      }
    }
 else     if (parsedEntry.i == LayoutHelper.IS_OPTION_FIELD) {
    }
    if (blockEntries == null) {
      tmpEntries.add(new LayoutEntry(parsedEntry,repository));
    }
 else {
      blockEntries.add(parsedEntry);
    }
  }
  layoutEntries=new ArrayList<>(tmpEntries);
  for (  LayoutEntry layoutEntry : layoutEntries) {
    invalidFormatter.addAll(layoutEntry.getInvalidFormatters());
  }
}
