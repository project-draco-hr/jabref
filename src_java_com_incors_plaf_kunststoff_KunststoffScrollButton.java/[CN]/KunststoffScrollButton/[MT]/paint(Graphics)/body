{
  super.paint(g);
  int width=getWidth();
  int height=getHeight();
  Rectangle rectReflection;
  Rectangle rectShadow;
  boolean isVertical=(getDirection() == EAST || getDirection() == WEST);
  if (isVertical) {
    rectReflection=new Rectangle(1,1,width,height / 2);
    rectShadow=new Rectangle(1,height / 2,width,height / 2 + 1);
  }
 else {
    rectReflection=new Rectangle(1,1,width / 2,height);
    rectShadow=new Rectangle(width / 2,1,width / 2 + 1,height);
  }
  Color colorReflection=KunststoffLookAndFeel.getComponentGradientColorReflection();
  if (colorReflection != null) {
    Color colorReflectionFaded=KunststoffUtilities.getTranslucentColor(colorReflection,0);
    KunststoffUtilities.drawGradient(g,colorReflection,colorReflectionFaded,rectReflection,isVertical);
  }
  Color colorShadow=KunststoffLookAndFeel.getComponentGradientColorShadow();
  if (colorShadow != null) {
    Color colorShadowFaded=KunststoffUtilities.getTranslucentColor(colorShadow,0);
    KunststoffUtilities.drawGradient(g,colorShadowFaded,colorShadow,rectShadow,isVertical);
  }
}
