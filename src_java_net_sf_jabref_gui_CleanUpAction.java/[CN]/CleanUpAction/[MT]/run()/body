{
  if (cancelled)   return;
  int choice=showCleanUpDialog();
  if (choice != JOptionPane.OK_OPTION) {
    cancelled=true;
    return;
  }
  storeSettings();
  boolean choiceCleanUpSuperscripts=cleanUpSuperscrips.isSelected(), choiceCleanUpDOI=cleanUpDOI.isSelected(), choiceCleanUpMonth=cleanUpMonth.isSelected(), choiceCleanUpPageNumbers=cleanUpPageNumbers.isSelected(), choiceCleanUpUpgradeExternalLinks=cleanUpUpgradeExternalLinks.isSelected(), choiceMakePathsRelative=cleanUpMakePathsRelative.isSelected(), choiceRenamePDF=cleanUpRenamePDF.isSelected(), choiceConvertHTML=cleanUpHTML.isSelected(), choiceConvertCase=cleanUpCase.isSelected(), choiceConvertLaTeX=cleanUpLaTeX.isSelected(), choiceConvertUnits=cleanUpUnits.isSelected();
  if (choiceRenamePDF && Globals.prefs.getBoolean(AKS_AUTO_NAMING_PDFS_AGAIN)) {
    CheckBoxMessage cbm=new CheckBoxMessage(Globals.lang("Auto-generating PDF-Names does not support undo. Continue?"),Globals.lang("Disable this confirmation dialog"),false);
    int answer=JOptionPane.showConfirmDialog(frame,cbm,Globals.lang("Autogenerate PDF Names"),JOptionPane.YES_NO_OPTION);
    if (cbm.isSelected())     Globals.prefs.putBoolean(AKS_AUTO_NAMING_PDFS_AGAIN,false);
    if (answer == JOptionPane.NO_OPTION) {
      cancelled=true;
      return;
    }
  }
  if (choiceCleanUpUpgradeExternalLinks) {
    NamedCompound ce=Util.upgradePdfPsToFile(Arrays.asList(panel.getSelectedEntries()),new String[]{"pdf","ps"});
    if (ce.hasEdits()) {
      panel.undoManager.addEdit(ce);
      panel.markBaseChanged();
      panel.updateEntryEditorIfShowing();
      panel.output(Globals.lang("Upgraded links."));
    }
  }
  for (  BibtexEntry entry : panel.getSelectedEntries()) {
    NamedCompound ce=new NamedCompound(Globals.lang("Cleanup entry"));
    if (choiceCleanUpSuperscripts)     doCleanUpSuperscripts(entry,ce);
    if (choiceCleanUpDOI)     doCleanUpDOI(entry,ce);
    if (choiceCleanUpMonth)     doCleanUpMonth(entry,ce);
    if (choiceCleanUpPageNumbers)     doCleanUpPageNumbers(entry,ce);
    fixWrongFileEntries(entry,ce);
    if (choiceMakePathsRelative)     doMakePathsRelative(entry,ce);
    if (choiceRenamePDF)     doRenamePDFs(entry,ce);
    if (choiceConvertHTML)     doConvertHTML(entry,ce);
    if (choiceConvertUnits)     doConvertUnits(entry,ce);
    if (choiceConvertCase)     doConvertCase(entry,ce);
    if (choiceConvertLaTeX)     doConvertLaTeX(entry,ce);
    ce.end();
    if (ce.hasEdits()) {
      modifiedEntriesCount++;
      panel.undoManager.addEdit(ce);
    }
  }
}
