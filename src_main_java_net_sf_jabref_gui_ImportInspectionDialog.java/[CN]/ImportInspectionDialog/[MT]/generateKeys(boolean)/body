{
  entries.getReadWriteLock().writeLock().lock();
  BibtexDatabase database;
  MetaData metaData;
  if (panel != null) {
    database=panel.database();
    metaData=panel.metaData();
  }
 else {
    database=new BibtexDatabase();
    metaData=new MetaData();
  }
  List<String> keys=new ArrayList<String>(entries.size());
  for (  BibtexEntry entry : entries) {
    try {
      entry.setId(IdGenerator.next());
      database.insertEntry(entry);
    }
 catch (    KeyCollisionException ex) {
      ex.printStackTrace();
    }
    LabelPatternUtil.makeLabel(metaData,database,entry);
    keys.add(entry.getCiteKey());
  }
  for (  BibtexEntry entry : entries) {
    database.removeEntry(entry.getId());
  }
  entries.getReadWriteLock().writeLock().lock();
  glTable.repaint();
}
