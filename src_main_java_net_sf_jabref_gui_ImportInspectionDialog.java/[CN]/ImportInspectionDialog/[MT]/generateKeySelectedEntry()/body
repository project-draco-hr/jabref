{
  if (selectionModel.getSelected().size() != 1) {
    return;
  }
  BibEntry entry=selectionModel.getSelected().get(0);
  entries.getReadWriteLock().writeLock().lock();
  try {
    BibDatabase database;
    MetaData localMetaData;
    if (panel == null) {
      database=new BibDatabase();
      localMetaData=new MetaData();
    }
 else {
      database=panel.getDatabase();
      localMetaData=panel.getBibDatabaseContext().getMetaData();
    }
    entry.setId(IdGenerator.next());
    database.insertEntry(entry);
    LabelPatternUtil.makeLabel(localMetaData,database,entry,LabelPatternPreferences.fromPreferences(Globals.prefs));
    database.removeEntry(entry);
  }
  finally {
    entries.getReadWriteLock().writeLock().unlock();
  }
  glTable.repaint();
}
