{
  if (connectToDB) {
    try {
      frame.output(Globals.lang("Attempting SQL import..."));
      DBExporterAndImporterFactory factory=new DBExporterAndImporterFactory();
      DBImporter importer=factory.getImporter(dbs.getServerType());
      Connection conn=importer.connectToDB(dbs);
      ResultSet rs=SQLUtil.queryAllFromTable(conn,"jabref_database");
      Vector<String> v;
      Vector<Vector<String>> matrix=new Vector<>();
      while (rs.next()) {
        v=new Vector<>();
        v.add(rs.getString("database_name"));
        matrix.add(v);
      }
      if (!matrix.isEmpty()) {
        DBImportExportDialog dialogo=new DBImportExportDialog(frame,matrix,DBImportExportDialog.DialogType.IMPORTER);
        if (dialogo.removeAction) {
          String dbName=dialogo.selectedDB;
          importer.removeDB(dialogo,dbName,conn,metaData);
          performImport();
        }
 else {
          if (dialogo.moreThanOne) {
            databases=importer.performImport(null,dbs,dialogo.listOfDBs);
            for (            Object[] res : databases) {
              database=(BibtexDatabase)res[0];
              metaData=(MetaData)res[1];
              dbs.isConfigValid(true);
            }
            frame.output(Globals.lang("%0 databases will be imported",Integer.toString(databases.size())));
          }
 else {
            frame.output(Globals.lang("Importing cancelled"));
          }
        }
      }
 else {
        JOptionPane.showMessageDialog(frame,Globals.lang("There are no available databases to be imported"),Globals.lang("Import from SQL database"),JOptionPane.INFORMATION_MESSAGE);
      }
    }
 catch (    Exception ex) {
      String preamble="Could not import from SQL database for the following reason:";
      String errorMessage=SQLUtil.getExceptionMessage(ex);
      dbs.isConfigValid(false);
      JOptionPane.showMessageDialog(frame,Globals.lang(preamble) + '\n' + errorMessage,Globals.lang("Import from SQL database"),JOptionPane.ERROR_MESSAGE);
      frame.output(Globals.lang("Error importing from database"));
      ex.printStackTrace();
    }
  }
}
