{
  if (prog != null)   SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      prog.setMaximum(files.size());
      prog.setValue(0);
      prog.setIndeterminate(false);
    }
  }
);
  Set<String> fileNames=new HashSet<String>();
  int i=0;
  for (Iterator<FileListEntry> iterator=files.iterator(); iterator.hasNext(); ) {
    FileListEntry entry=iterator.next();
    File file=new File(entry.getLink());
    String name=file.getName();
    int pos=name.lastIndexOf('.');
    String extension=((pos >= 0) && (pos < name.length() - 1)) ? name.substring(pos + 1).trim().toLowerCase() : null;
    String dir=metaData.getFileDirectory(extension);
    String fileDir=metaData.getFileDirectory(GUIGlobals.FILE_FIELD);
    String databaseDir=metaData.getFile().getParent();
    File tmp=Util.expandFilename(entry.getLink(),new String[]{dir,fileDir,databaseDir});
    if (tmp != null)     file=tmp;
    if (file.exists()) {
      if (fileNames.contains(name)) {
      }
 else {
        fileNames.add(name);
        File destination=new File(toDir,name);
        if (!destination.equals(file)) {
          try {
            Util.copyFile(file,destination,false);
            if (deleteOriginalFiles)             file.delete();
          }
 catch (          IOException ex) {
            ex.printStackTrace();
          }
        }
 else {
        }
        i++;
        final int j=i;
        if (prog != null)         SwingUtilities.invokeLater(new Runnable(){
          public void run(){
            prog.setValue(j);
          }
        }
);
      }
    }
 else {
    }
  }
  if (callback != null) {
    callback.actionPerformed(null);
  }
}
