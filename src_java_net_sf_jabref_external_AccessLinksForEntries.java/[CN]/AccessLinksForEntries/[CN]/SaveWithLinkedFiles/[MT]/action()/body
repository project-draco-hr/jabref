{
  ArrayList<BibtexEntry> entries=new ArrayList<BibtexEntry>();
  BibtexEntry[] sel=panel.getSelectedEntries();
  for (int i=0; i < sel.length; i++) {
    BibtexEntry bibtexEntry=sel[i];
    entries.add(bibtexEntry);
  }
  final List<FileListEntry> links=AccessLinksForEntries.getExternalLinksForEntries(entries);
  for (Iterator<FileListEntry> iterator=links.iterator(); iterator.hasNext(); ) {
    FileListEntry entry=iterator.next();
    System.out.println("Link: " + entry.getLink());
  }
  final JProgressBar prog=new JProgressBar();
  prog.setIndeterminate(true);
  final JDialog diag=new JDialog(panel.frame(),false);
  diag.getContentPane().add(prog,BorderLayout.CENTER);
  diag.pack();
  diag.setLocationRelativeTo(panel.frame());
  diag.setVisible(true);
  Thread t=new Thread(new Runnable(){
    public void run(){
      AccessLinksForEntries.copyExternalLinksToDirectory(links,new File("/home/alver/tmp"),panel.metaData(),prog,false,new ActionListener(){
        public void actionPerformed(        ActionEvent actionEvent){
          diag.dispose();
        }
      }
);
    }
  }
);
  t.start();
}
