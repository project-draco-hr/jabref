{
  StringBuffer sb=new StringBuffer();
switch (mismatchType) {
case CHAR:
    sb.append("expecting ");
  appendCharName(sb,expecting);
sb.append(", found ");
appendCharName(sb,foundChar);
break;
case NOT_CHAR:
sb.append("expecting anything but '");
appendCharName(sb,expecting);
sb.append("'; got it anyway");
break;
case RANGE:
case NOT_RANGE:
sb.append("expecting token ");
if (mismatchType == NOT_RANGE) sb.append("NOT ");
sb.append("in range: ");
appendCharName(sb,expecting);
sb.append("..");
appendCharName(sb,upper);
sb.append(", found ");
appendCharName(sb,foundChar);
break;
case SET:
case NOT_SET:
sb.append("expecting " + (mismatchType == NOT_SET ? "NOT " : "") + "one of (");
int[] elems=set.toArray();
for (int i=0; i < elems.length; i++) {
appendCharName(sb,elems[i]);
}
sb.append("), found ");
appendCharName(sb,foundChar);
break;
default :
sb.append(super.getMessage());
break;
}
return sb.toString();
}
