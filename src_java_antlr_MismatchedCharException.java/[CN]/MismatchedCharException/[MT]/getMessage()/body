{
  StringBuffer sb=new StringBuffer();
switch (mismatchType) {
case CHAR:
    sb.append("expecting '" + (char)expecting + "', found '"+ (char)foundChar+ "'");
  break;
case NOT_CHAR:
sb.append("expecting anything but '" + (char)expecting + "'; got it anyway");
break;
case RANGE:
sb.append("expecting token in range: '" + (char)expecting + "'..'"+ (char)upper+ "', found '"+ (char)foundChar+ "'");
break;
case NOT_RANGE:
sb.append("expecting token NOT in range: " + (char)expecting + "'..'"+ (char)upper+ "', found '"+ (char)foundChar+ "'");
break;
case SET:
case NOT_SET:
sb.append("expecting " + (mismatchType == NOT_SET ? "NOT " : "") + "one of (");
int[] elems=set.toArray();
for (int i=0; i < elems.length; i++) {
sb.append(" '");
sb.append((char)elems[i]);
sb.append("'");
}
sb.append("), found '" + (char)foundChar + "'");
break;
default :
sb.append(super.getMessage());
break;
}
return sb.toString();
}
