{
  if (key.getText().equals("defaultErrorHandler")) {
    if (value.getText().equals("true")) {
      defaultErrorHandler=true;
    }
 else     if (value.getText().equals("false")) {
      defaultErrorHandler=false;
    }
 else {
      grammar.antlrTool.error("Value for defaultErrorHandler must be true or false",grammar.getFilename(),key.getLine(),key.getColumn());
    }
  }
 else   if (key.getText().equals("testLiterals")) {
    if (!(grammar instanceof LexerGrammar)) {
      grammar.antlrTool.error("testLiterals option only valid for lexer rules",grammar.getFilename(),key.getLine(),key.getColumn());
    }
 else {
      if (value.getText().equals("true")) {
        testLiterals=true;
      }
 else       if (value.getText().equals("false")) {
        testLiterals=false;
      }
 else {
        grammar.antlrTool.error("Value for testLiterals must be true or false",grammar.getFilename(),key.getLine(),key.getColumn());
      }
    }
  }
 else   if (key.getText().equals("ignore")) {
    if (!(grammar instanceof LexerGrammar)) {
      grammar.antlrTool.error("ignore option only valid for lexer rules",grammar.getFilename(),key.getLine(),key.getColumn());
    }
 else {
      ignoreRule=value.getText();
    }
  }
 else   if (key.getText().equals("paraphrase")) {
    if (!(grammar instanceof LexerGrammar)) {
      grammar.antlrTool.error("paraphrase option only valid for lexer rules",grammar.getFilename(),key.getLine(),key.getColumn());
    }
 else {
      TokenSymbol ts=grammar.tokenManager.getTokenSymbol(ruleName);
      if (ts == null) {
        grammar.antlrTool.panic("cannot find token associated with rule " + ruleName);
      }
      ts.setParaphrase(value.getText());
    }
  }
 else   if (key.getText().equals("generateAmbigWarnings")) {
    if (value.getText().equals("true")) {
      generateAmbigWarnings=true;
    }
 else     if (value.getText().equals("false")) {
      generateAmbigWarnings=false;
    }
 else {
      grammar.antlrTool.error("Value for generateAmbigWarnings must be true or false",grammar.getFilename(),key.getLine(),key.getColumn());
    }
  }
 else {
    grammar.antlrTool.error("Invalid rule option: " + key.getText(),grammar.getFilename(),key.getLine(),key.getColumn());
  }
}
