{
  if (e.getSource() == escape) {
    incSearch=false;
    if (frame.basePanel() != null)     frame.basePanel().stopShowingSearchResults();
  }
 else   if ((e.getSource() == searchField) && !increment.isSelected() && (frame.basePanel() != null)) {
    updatePrefs();
    if (searchField.getText().equals("")) {
      frame.stopShowingSearchResults();
      return;
    }
    Hashtable searchOptions=new Hashtable();
    searchOptions.put("option",searchField.getText());
    SearchRuleSet searchRules=new SearchRuleSet();
    SearchRule rule1;
    if (prefs.getBoolean("regExpSearch"))     rule1=new RegExpRule(prefs);
 else     rule1=new SimpleSearchRule(prefs);
    try {
      rule1=new SearchExpression(prefs,searchOptions);
    }
 catch (    Exception ex) {
    }
    searchRules.addRule(rule1);
    if (reorder.isSelected()) {
      DatabaseSearch search=new DatabaseSearch(searchOptions,searchRules,frame.basePanel(),Globals.SEARCH,true);
      search.start();
    }
 else     if (select.isSelected()) {
      DatabaseSearch search=new DatabaseSearch(searchOptions,searchRules,frame.basePanel(),Globals.SEARCH,false);
      search.start();
    }
    searchField.select(0,searchField.getText().length());
  }
}
