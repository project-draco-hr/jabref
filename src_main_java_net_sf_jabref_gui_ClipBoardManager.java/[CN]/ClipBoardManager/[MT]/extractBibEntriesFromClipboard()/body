{
  Transferable content=CLIPBOARD.getContents(null);
  List<BibEntry> result=new ArrayList<>();
  if (content.isDataFlavorSupported(TransferableBibtexEntry.entryFlavor)) {
    try {
      result=(List<BibEntry>)content.getTransferData(TransferableBibtexEntry.entryFlavor);
    }
 catch (    UnsupportedFlavorException|ClassCastException ex) {
      LOGGER.warn("Could not paste this type",ex);
    }
catch (    IOException ex) {
      LOGGER.warn("Could not paste",ex);
    }
  }
 else   if (content.isDataFlavorSupported(DataFlavor.stringFlavor)) {
    try {
      String data=(String)content.getTransferData(DataFlavor.stringFlavor);
      if (DOI.build(data).isPresent()) {
        LOGGER.info("Found DOI in clipboard");
        BibEntry entry=new DOItoBibTeXFetcher().getEntryFromDOI(new DOI(data).getDOI());
        if (entry != null) {
          result.add(entry);
        }
      }
 else {
        BibtexParser bp=new BibtexParser(new StringReader(data));
        BibDatabase db=bp.parse().getDatabase();
        LOGGER.info("Parsed " + db.getEntryCount() + " entries from clipboard text");
        if (db.hasEntries()) {
          result=db.getEntries();
        }
      }
    }
 catch (    UnsupportedFlavorException ex) {
      LOGGER.warn("Could not parse this type",ex);
    }
catch (    IOException ex) {
      LOGGER.warn("Data is no longer available in the requested flavor",ex);
    }
  }
  return result;
}
