{
  comp=new JPanel();
  comp.setLayout(new BorderLayout());
  menuButton=new JButton(new ImageIcon(ARROW_ICON));
  menuButton.setMargin(new Insets(0,0,0,0));
  menuButton.setPreferredSize(new Dimension(menuButton.getIcon().getIconWidth(),menuButton.getIcon().getIconHeight()));
  menuButton.addActionListener(new MenuButtonActionListener());
  menuButton.setToolTipText(Globals.lang("Select external application"));
  pushButton=new JButton();
  if (Globals.prefs.hasKey("pushToApplication")) {
    String appSelected=Globals.prefs.get("pushToApplication");
    for (int i=0; i < pushActions.size(); i++) {
      PushToApplication toApp=pushActions.get(i);
      if (toApp.getName().equals(appSelected)) {
        selected=i;
        break;
      }
    }
  }
  setSelected(selected);
  pushButton.addActionListener(this);
  pushButton.addMouseListener(new PushButtonMouseListener());
  pushButton.setOpaque(false);
  menuButton.setOpaque(false);
  comp.setOpaque(false);
  comp.add(pushButton,BorderLayout.CENTER);
  comp.add(menuButton,BorderLayout.EAST);
  comp.setMaximumSize(comp.getPreferredSize());
  optPopup.add(settings);
  settings.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event){
      PushToApplication toApp=pushActions.get(selected);
      JPanel options=toApp.getSettingsPanel();
      if (options != null) {
        showSettingsDialog(frame,toApp,options);
      }
    }
  }
);
  buildPopupMenu();
}
