{
  SQLUtil.processQuery(out,"CREATE TABLE IF NOT EXISTS jabref_database ( \n" + "database_id INT UNSIGNED NOT NULL AUTO_INCREMENT, \n" + "database_name VARCHAR(64) NOT NULL, \n"+ "md5_path VARCHAR(32) NOT NULL, \n"+ "PRIMARY KEY (database_id)\n );");
  SQLUtil.processQuery(out,"CREATE TABLE IF NOT EXISTS entry_types ( \n" + "entry_types_id    INT UNSIGNED  NOT NULL AUTO_INCREMENT, \n" + "label			 TEXT, \n" + SQLUtil.fieldsAsCols(SQLUtil.getAllFields()," VARCHAR(3) DEFAULT NULL") + ", \n"+ "PRIMARY KEY (entry_types_id) \n"+ ");");
  SQLUtil.processQuery(out,"CREATE TABLE IF NOT EXISTS entries ( \n" + "entries_id      INTEGER         NOT NULL AUTO_INCREMENT, \n" + "jabref_eid      VARCHAR(" + IdGenerator.getMinimumIntegerDigits() + ")   DEFAULT NULL, \n"+ "database_id INT UNSIGNED, \n"+ "entry_types_id  INT UNSIGNED         DEFAULT NULL, \n"+ "cite_key        VARCHAR(100)     DEFAULT NULL, \n"+ SQLUtil.fieldsAsCols(SQLUtil.getAllFields()," TEXT DEFAULT NULL")+ ",\n"+ "PRIMARY KEY (entries_id), \n"+ "INDEX(entry_types_id), \n"+ "FOREIGN KEY (entry_types_id) REFERENCES entry_types(entry_types_id), \n"+ "FOREIGN KEY (database_id) REFERENCES jabref_database(database_id) \n);");
  SQLUtil.processQuery(out,"CREATE TABLE IF NOT EXISTS strings ( \n" + "strings_id      INTEGER         NOT NULL AUTO_INCREMENT, \n" + "label      VARCHAR(100)  DEFAULT NULL, \n"+ "content    VARCHAR(200)  DEFAULT NULL, \n"+ "database_id INT UNSIGNED, \n"+ "FOREIGN KEY (database_id) REFERENCES jabref_database(database_id), \n"+ "PRIMARY KEY (strings_id) \n"+ ");");
  SQLUtil.processQuery(out,"CREATE TABLE IF NOT EXISTS group_types ( \n" + "group_types_id  INTEGER     NOT NULL AUTO_INCREMENT, \n" + "label   VARCHAR(100)    DEFAULT NULL, \n"+ "PRIMARY KEY (group_types_id) \n"+ ");");
  SQLUtil.processQuery(out,"CREATE TABLE IF NOT EXISTS groups ( \n" + "groups_id       INTEGER         NOT NULL AUTO_INCREMENT, \n" + "group_types_id  INTEGER         DEFAULT NULL, \n"+ "label           VARCHAR(100)    DEFAULT NULL, \n"+ "database_id INT UNSIGNED, \n"+ "parent_id       INTEGER         DEFAULT NULL, \n"+ "search_field       VARCHAR(100)          DEFAULT NULL, \n"+ "search_expression  VARCHAR(200)          DEFAULT NULL, \n"+ "case_sensitive  BOOL          DEFAULT NULL, \n"+ "reg_exp BOOL DEFAULT NULL, \n"+ "hierarchical_context INTEGER DEFAULT NULL, \n"+ "FOREIGN KEY (database_id) REFERENCES jabref_database(database_id), \n"+ "PRIMARY KEY (groups_id) \n"+ ");");
  SQLUtil.processQuery(out,"CREATE TABLE IF NOT EXISTS entry_group ( \n" + "entries_id       INTEGER        NOT NULL AUTO_INCREMENT, \n" + "groups_id        INTEGER        DEFAULT NULL, \n"+ "INDEX(entries_id), \n"+ "INDEX(groups_id), \n"+ "FOREIGN KEY (entries_id) REFERENCES entries(entries_id) ON DELETE CASCADE, \n"+ "FOREIGN KEY (groups_id)  REFERENCES groups(groups_id), \n"+ "PRIMARY KEY (groups_id, entries_id) \n"+ ");");
}
