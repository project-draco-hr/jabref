{
  super(p0,IconTheme.JabRefIcon.WWW.getSmallIcon(),Localization.lang("Web search"));
  this.sidePaneManager=p0;
  this.frame=frame;
  List<EntryFetcher> fetchers=EntryFetchers.INSTANCE.getEntryFetchers();
  fetcherArray=fetchers.toArray(new EntryFetcher[fetchers.size()]);
  Arrays.sort(fetcherArray,new EntryFetcherComparator());
  String[] choices=new String[fetcherArray.length];
  for (int i=0; i < fetcherArray.length; i++) {
    choices[i]=fetcherArray[i].getTitle();
  }
  fetcherChoice=new JComboBox<>(choices);
  int defaultFetcher=Globals.prefs.getInt(JabRefPreferences.SELECTED_FETCHER_INDEX);
  if (defaultFetcher >= fetcherArray.length) {
    defaultFetcher=0;
  }
  this.activeFetcher=fetcherArray[defaultFetcher];
  fetcherChoice.setSelectedIndex(defaultFetcher);
  if (this.activeFetcher.getOptionsPanel() != null) {
    optPanel.add(this.activeFetcher.getOptionsPanel(),BorderLayout.CENTER);
  }
  help=new HelpAction(activeFetcher.getHelpPage());
  helpBut=help.getHelpButton();
  helpBut.setEnabled(activeFetcher.getHelpPage() != null);
  fetcherChoice.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent actionEvent){
      activeFetcher=fetcherArray[fetcherChoice.getSelectedIndex()];
      Globals.prefs.putInt(JabRefPreferences.SELECTED_FETCHER_INDEX,fetcherChoice.getSelectedIndex());
      if (activeFetcher.getHelpPage() == null) {
        helpBut.setEnabled(false);
      }
 else {
        help.setHelpFile(activeFetcher.getHelpPage());
        helpBut.setEnabled(true);
      }
      optionsCards.show(optionsPanel,String.valueOf(fetcherChoice.getSelectedIndex()));
      optPanel.removeAll();
      if (activeFetcher.getOptionsPanel() != null) {
        optPanel.add(activeFetcher.getOptionsPanel(),BorderLayout.CENTER);
      }
      revalidate();
    }
  }
);
  action=new FetcherAction();
  helpBut.setMargin(new Insets(0,0,0,0));
  tf.setPreferredSize(new Dimension(1,tf.getPreferredSize().height));
  tf.setName("tf");
  JButton reset=new JButton(Localization.lang("Reset"));
  reset.addActionListener(new AbstractAction(){
    @Override public void actionPerformed(    ActionEvent event){
      tf.setText("");
      new FocusRequester(tf);
    }
  }
);
  JPanel main=new JPanel();
  GridBagLayout gbl=new GridBagLayout();
  main.setLayout(gbl);
  GridBagConstraints con=new GridBagConstraints();
  con.fill=GridBagConstraints.BOTH;
  con.insets=new Insets(0,0,2,0);
  con.gridwidth=GridBagConstraints.REMAINDER;
  con.weightx=1;
  con.weighty=1;
  con.insets=new Insets(1,0,1,0);
  con.fill=GridBagConstraints.BOTH;
  gbl.setConstraints(fetcherChoice,con);
  main.add(fetcherChoice);
  con.insets=new Insets(0,0,0,0);
  gbl.setConstraints(tf,con);
  main.add(tf);
  con.weighty=0;
  con.gridwidth=1;
  JButton go=new JButton(Localization.lang("Fetch"));
  gbl.setConstraints(go,con);
  main.add(go);
  reset.setName("reset");
  gbl.setConstraints(reset,con);
  main.add(reset);
  con.gridwidth=GridBagConstraints.REMAINDER;
  gbl.setConstraints(helpBut,con);
  main.add(helpBut);
  JPanel pan=new JPanel();
  if (pan != null) {
    gbl.setConstraints(optPanel,con);
    main.add(optPanel);
  }
  main.setBorder(BorderFactory.createEmptyBorder(1,1,1,1));
  add(main,BorderLayout.CENTER);
  go.addActionListener(this);
  tf.addActionListener(this);
}
