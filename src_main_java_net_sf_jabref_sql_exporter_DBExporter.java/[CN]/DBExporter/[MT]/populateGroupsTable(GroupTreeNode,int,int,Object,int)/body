{
  AbstractGroup group=cursor.getGroup();
  String searchField=null;
  String searchExpr=null;
  String caseSens=null;
  String regExp=null;
  GroupHierarchyType hierContext=group.getHierarchicalContext();
  if (group instanceof KeywordGroup) {
    searchField=((KeywordGroup)group).getSearchField();
    searchExpr=((KeywordGroup)group).getSearchExpression();
    caseSens=((KeywordGroup)group).isCaseSensitive() ? "1" : "0";
    regExp=((KeywordGroup)group).isRegExp() ? "1" : "0";
  }
 else   if (group instanceof SearchGroup) {
    searchExpr=((SearchGroup)group).getSearchExpression();
    caseSens=((SearchGroup)group).isCaseSensitive() ? "1" : "0";
    regExp=((SearchGroup)group).isRegExp() ? "1" : "0";
  }
  if (searchField != null) {
    searchField=EntryUtil.quote(searchField,"'",'\\');
  }
  if (searchExpr != null) {
    searchExpr=EntryUtil.quote(searchExpr,"'",'\\');
  }
  SQLUtil.processQuery(out,"INSERT INTO groups (label, parent_id, group_types_id, search_field, " + "search_expression, case_sensitive, reg_exp, hierarchical_context, database_id) " + "VALUES ('" + group.getName() + "', "+ parentID+ ", (SELECT group_types_id FROM group_types where label='"+ group.getTypeId()+ "')"+ ", "+ (searchField != null ? '\'' + searchField + '\'' : "NULL")+ ", "+ (searchExpr != null ? '\'' + searchExpr + '\'' : "NULL")+ ", "+ (caseSens != null ? '\'' + caseSens + '\'' : "NULL")+ ", "+ (regExp != null ? '\'' + regExp + '\'' : "NULL")+ ", "+ hierContext.ordinal()+ ", '"+ database_id+ "');");
  try (AutoCloseable response=SQLUtil.processQueryWithResults(out,"SELECT groups_id FROM groups WHERE label='" + cursor.getGroup().getName() + "' AND database_id='"+ database_id+ "' AND parent_id='"+ parentID+ "';")){
    int myID=currentID;
    if (response instanceof Statement) {
      try (ResultSet rs=((Statement)response).getResultSet()){
        rs.next();
        myID=rs.getInt("groups_id");
      }
  finally {
        ((Statement)response).close();
      }
    }
    for (Enumeration<GroupTreeNode> e=cursor.children(); e.hasMoreElements(); ) {
      ++currentID;
      currentID=populateGroupsTable(e.nextElement(),myID,currentID,out,database_id);
    }
  }
 catch (  Exception e) {
    LOGGER.warn("Cannot close resource",e);
  }
  return currentID;
}
