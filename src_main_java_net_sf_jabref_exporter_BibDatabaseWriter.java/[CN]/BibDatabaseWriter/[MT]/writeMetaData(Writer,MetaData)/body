{
  if (metaData == null) {
    return;
  }
  for (  String key : metaData) {
    StringBuilder stringBuilder=new StringBuilder();
    stringBuilder.append(Globals.NEWLINE);
    stringBuilder.append(COMMENT_PREFIX + "{").append(MetaData.META_FLAG).append(key).append(":");
    for (    String metaItem : metaData.getData(key)) {
      stringBuilder.append(StringUtil.quote(metaItem,";",'\\')).append(";");
    }
    stringBuilder.append("}");
    stringBuilder.append(Globals.NEWLINE);
    out.write(stringBuilder.toString());
  }
  GroupTreeNode groupsRoot=metaData.getGroups();
  if ((groupsRoot != null) && (groupsRoot.getNumberOfChildren() > 0)) {
    StringBuilder sb=new StringBuilder();
    sb.append(Globals.NEWLINE);
    sb.append(COMMENT_PREFIX).append("{").append(MetaData.META_FLAG).append(MetaData.GROUPSVERSION).append(":");
    sb.append(VersionHandling.CURRENT_VERSION).append(";");
    sb.append("}");
    sb.append(Globals.NEWLINE);
    sb.append(Globals.NEWLINE);
    sb.append(COMMENT_PREFIX).append("{").append(MetaData.META_FLAG).append(MetaData.GROUPSTREE).append(":");
    sb.append(Globals.NEWLINE);
    for (    String groupNode : groupsRoot.getTreeAsString()) {
      sb.append(StringUtil.quote(groupNode,";",'\\'));
      sb.append(";");
      sb.append(Globals.NEWLINE);
    }
    sb.append("}");
    sb.append(Globals.NEWLINE);
    out.write(sb.toString());
  }
}
