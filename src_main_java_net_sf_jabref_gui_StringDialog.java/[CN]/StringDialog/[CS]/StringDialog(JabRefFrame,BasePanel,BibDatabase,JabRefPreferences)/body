{
  super(frame);
  this.frame=frame;
  this.panel=panel;
  this.base=base;
  sortStrings();
  helpAction=new HelpAction(frame.helpDiag,GUIGlobals.stringEditorHelp,Localization.lang("Help"));
  addWindowListener(new WindowAdapter(){
    @Override public void windowClosing(    WindowEvent e){
      closeAction.actionPerformed(null);
    }
  }
);
  setFocusTraversalPolicy(new LayoutFocusTraversalPolicy(){
    @Override protected boolean accept(    Component c){
      return super.accept(c) && (c instanceof StringTable);
    }
  }
);
  JPanel pan=new JPanel();
  GridBagLayout gbl=new GridBagLayout();
  pan.setLayout(gbl);
  GridBagConstraints con=new GridBagConstraints();
  con.fill=GridBagConstraints.BOTH;
  con.weighty=1;
  con.weightx=1;
  StringTableModel stm=new StringTableModel(this,base);
  table=new StringTable(stm);
  if (base.getStringCount() > 0) {
    table.setRowSelectionInterval(0,0);
  }
  gbl.setConstraints(table.getPane(),con);
  pan.add(table.getPane());
  JToolBar tlb=new JToolBar();
  InputMap im=tlb.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
  ActionMap am=tlb.getActionMap();
  im.put(prefs.getKey(KeyBinds.STRING_DIALOG_ADD_STRING),"add");
  NewStringAction newStringAction=new NewStringAction(this);
  am.put("add",newStringAction);
  im.put(prefs.getKey(KeyBinds.STRING_DIALOG_REMOVE_STRING),"remove");
  RemoveStringAction removeStringAction=new RemoveStringAction(this);
  am.put("remove",removeStringAction);
  im.put(prefs.getKey(KeyBinds.SAVE_DATABASE),"save");
  am.put("save",saveAction);
  im.put(prefs.getKey(KeyBinds.CLOSE_DIALOG),"close");
  am.put("close",closeAction);
  im.put(prefs.getKey(KeyBinds.HELP),"help");
  am.put("help",helpAction);
  im.put(prefs.getKey(KeyBinds.UNDO),"undo");
  UndoAction undoAction=new UndoAction();
  am.put("undo",undoAction);
  im.put(prefs.getKey(KeyBinds.REDO),"redo");
  RedoAction redoAction=new RedoAction();
  am.put("redo",redoAction);
  tlb.add(newStringAction);
  tlb.add(removeStringAction);
  tlb.addSeparator();
  tlb.add(helpAction);
  Container conPane=getContentPane();
  conPane.add(tlb,BorderLayout.NORTH);
  conPane.add(pan,BorderLayout.CENTER);
  if (panel.getDatabaseFile() != null) {
    setTitle(GUIGlobals.stringsTitle + ": " + panel.getDatabaseFile().getName());
  }
 else {
    setTitle(GUIGlobals.stringsTitle + ": " + GUIGlobals.untitledTitle);
  }
  pw=new PositionWindow(this,JabRefPreferences.STRINGS_POS_X,JabRefPreferences.STRINGS_POS_Y,JabRefPreferences.STRINGS_SIZE_X,JabRefPreferences.STRINGS_SIZE_Y);
  pw.setWindowPosition();
  addComponentListener(new ComponentAdapter(){
    @Override public void componentResized(    ComponentEvent e){
      pw.storeWindowPosition();
    }
    @Override public void componentMoved(    ComponentEvent e){
      pw.storeWindowPosition();
    }
  }
);
}
