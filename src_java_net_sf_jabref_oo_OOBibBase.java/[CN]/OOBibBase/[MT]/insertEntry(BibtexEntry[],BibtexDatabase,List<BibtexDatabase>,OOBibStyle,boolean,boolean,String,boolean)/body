{
  try {
    XTextViewCursor xViewCursor=xViewCursorSupplier.getViewCursor();
    if (entries.length > 1) {
      if (style.getBooleanCitProperty("MultiCiteChronological"))       Arrays.sort(entries,yearComparator);
 else       Arrays.sort(entries,entryComparator);
    }
    StringBuilder sb=new StringBuilder();
    for (int i=0; i < entries.length; i++) {
      BibtexEntry entry=entries[i];
      if (i > 0)       sb.append(",");
      sb.append(entry.getCiteKey());
    }
    String keyString=sb.toString();
    String bName=getUniqueReferenceMarkName(keyString,withText ? (inParenthesis ? AUTHORYEAR_PAR : AUTHORYEAR_INTEXT) : INVISIBLE_CIT);
    if (pageInfo != null) {
      System.out.println("Storing page info: " + pageInfo);
      setCustomProperty(bName,pageInfo);
    }
    String citeText=style.isNumberEntries() ? "-" : style.getCitationMarker(entries,database,inParenthesis,null,null);
    xViewCursor.getText().insertString(xViewCursor," ",false);
    if (style.isFormatCitations()) {
      XPropertySet xCursorProps=(XPropertySet)UnoRuntime.queryInterface(XPropertySet.class,xViewCursor);
      String charStyle=style.getCitationCharacterFormat();
      try {
        xCursorProps.setPropertyValue("CharStyleName",charStyle);
      }
 catch (      Throwable ex) {
        xViewCursor.goLeft((short)1,true);
        xViewCursor.setString("");
        throw new UndefinedCharacterFormatException(charStyle);
      }
    }
    xViewCursor.goLeft((short)1,false);
    insertReferenceMark(bName,citeText,xViewCursor,withText,style);
    xViewCursor.collapseToEnd();
    xViewCursor.goRight((short)1,false);
    XTextRange position=xViewCursor.getEnd();
    if (sync) {
      updateSortedReferenceMarks();
      refreshCiteMarkers(allBases,style);
      rebuildBibTextSection(allBases,style);
    }
    try {
      xViewCursor.gotoRange(position,false);
    }
 catch (    Exception ex) {
      System.out.println("Catch");
      ex.printStackTrace();
    }
  }
 catch (  DisposedException ex) {
    throw new ConnectionLostException(ex.getMessage());
  }
}
