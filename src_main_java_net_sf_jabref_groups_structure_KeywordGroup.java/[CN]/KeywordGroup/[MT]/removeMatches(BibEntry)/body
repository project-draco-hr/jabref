{
  String content=entry.getField(searchField);
  if (content == null) {
    return;
  }
  StringBuffer sbOrig=new StringBuffer(content);
  StringBuffer sbLower=new StringBuffer(content.toLowerCase());
  StringBuffer haystack=caseSensitive ? sbOrig : sbLower;
  String needle=caseSensitive ? searchExpression : searchExpression.toLowerCase();
  int i;
  int j;
  int k;
  final String separator=Globals.prefs.get(JabRefPreferences.GROUP_KEYWORD_SEPARATOR);
  while ((i=haystack.indexOf(needle)) >= 0) {
    sbOrig.replace(i,i + needle.length(),"");
    sbLower.replace(i,i + needle.length(),"");
    j=i;
    k=i;
    while (((j - 1) >= 0) && (separator.indexOf(haystack.charAt(j - 1)) >= 0)) {
      --j;
    }
    while ((k < haystack.length()) && (separator.indexOf(haystack.charAt(k)) >= 0)) {
      ++k;
    }
    sbOrig.replace(j,k,(j >= 0) && (k < sbOrig.length()) ? separator : "");
    sbLower.replace(j,k,(j >= 0) && (k < sbOrig.length()) ? separator : "");
  }
  String result=sbOrig.toString().trim();
  if (result.isEmpty()) {
    entry.clearField(searchField);
  }
 else {
    entry.setField(searchField,result);
  }
}
