{
  ok=new JButton(Globals.lang("Store"));
  cancel=new JButton(Globals.lang("Close"));
  delete=new JButton(Globals.lang("Delete custom"));
  genFields=new JButton(Globals.lang("Set general fields"));
  buttonPanel.add(ok);
  buttonPanel.add(delete);
  buttonPanel.add(genFields);
  buttonPanel.add(cancel);
  ok.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      save();
    }
  }
);
  cancel.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      dispose();
    }
  }
);
  genFields.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      GenFieldsCustomizer gf=new GenFieldsCustomizer(parent);
      Util.placeDialog(gf,parent);
      gf.show();
    }
  }
);
  delete.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      BibtexEntryType type=BibtexEntryType.getType(name.getText());
      if (type == null)       messageLabel.setText(Globals.lang("There is no entry type") + " '" + Util.nCase(name.getText())+ "' "+ Globals.lang("defined."));
 else       if (!(type instanceof CustomEntryType))       messageLabel.setText("'" + type.getName() + "' "+ Globals.lang("is a standard type."));
 else {
        String nm=name.getText();
        if (BibtexEntryType.getStandardType(nm) == null) {
          int reply=JOptionPane.showConfirmDialog(parent,Globals.lang("All entries of this " + "type will be declared " + "typeless. Continue?"),Globals.lang("Delete custom format") + " '" + Util.nCase(nm)+ "'",JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
          if (reply != JOptionPane.YES_OPTION)           return;
        }
        BibtexEntryType.removeType(nm);
        setTypeSelection();
        updateTypesForEntries(Util.nCase(nm));
        messageLabel.setText(Globals.lang("Removed entry type."));
      }
    }
  }
);
}
