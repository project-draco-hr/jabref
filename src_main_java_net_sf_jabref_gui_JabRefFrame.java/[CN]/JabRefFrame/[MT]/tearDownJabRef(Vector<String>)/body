{
  JabRefExecutorService.INSTANCE.shutdownEverything();
  dispose();
  if (getCurrentBasePanel() != null) {
    getCurrentBasePanel().saveDividerLocation();
  }
  prefs.putBoolean(JabRefPreferences.WINDOW_MAXIMISED,getExtendedState() == Frame.MAXIMIZED_BOTH);
  prefs.putBoolean(JabRefPreferences.TOOLBAR_VISIBLE,tlb.isVisible());
  int width=contentPane.getDividerLocation();
  if (width > 0) {
    prefs.putInt(JabRefPreferences.SIDE_PANE_WIDTH,width);
  }
  if (prefs.getBoolean(JabRefPreferences.OPEN_LAST_EDITED)) {
    if (filenames.isEmpty()) {
      prefs.remove(JabRefPreferences.LAST_EDITED);
    }
 else {
      String[] names=new String[filenames.size()];
      for (int i=0; i < filenames.size(); i++) {
        names[i]=filenames.elementAt(i);
      }
      prefs.putStringArray(JabRefPreferences.LAST_EDITED,names);
      String focusedDatabase=getCurrentBasePanel().getDatabaseFile().getAbsolutePath();
      prefs.put(JabRefPreferences.LAST_FOCUSED,focusedDatabase);
    }
  }
  fileHistory.storeHistory();
  prefs.customExports.store();
  prefs.customImports.store();
  CustomEntryTypesManager.saveCustomEntryTypes(prefs);
  if (Globals.autoSaveManager != null) {
    Globals.autoSaveManager.clearAutoSaves();
  }
  prefs.flush();
  for (  Window window : Window.getWindows()) {
    window.dispose();
  }
  if (Globals.autoSaveManager != null) {
    Globals.stopAutoSaveManager();
  }
}
