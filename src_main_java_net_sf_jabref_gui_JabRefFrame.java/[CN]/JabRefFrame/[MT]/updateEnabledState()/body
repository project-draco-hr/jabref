{
  int tabCount=tabbedPane.getTabCount();
  if (tabCount != previousTabCount) {
    previousTabCount=tabCount;
    setEnabled(openDatabaseOnlyActions,tabCount > 0);
    setEnabled(severalDatabasesOnlyActions,tabCount > 1);
  }
  if (tabCount == 0) {
    getBackAction().setEnabled(false);
    getForwardAction().setEnabled(false);
    setEnabled(openAndSavedDatabasesOnlyActions,false);
    setEnabled(sharedDatabaseOnlyActions,false);
  }
  if (tabCount > 0) {
    BasePanel current=getCurrentBasePanel();
    boolean saved=current.getBibDatabaseContext().getDatabaseFile().isPresent();
    setEnabled(openAndSavedDatabasesOnlyActions,saved);
    boolean isShared=current.getBibDatabaseContext().getLocation() == DatabaseLocation.SHARED;
    setEnabled(sharedDatabaseOnlyActions,isShared);
    setEnabled(noSharedDatabaseActions,!isShared);
    boolean oneEntrySelected=current.getSelectedEntries().size() == 1;
    setEnabled(oneEntryOnlyActions,oneEntrySelected);
    setEnabled(oneEntryWithFileOnlyActions,isExistFile(current.getSelectedEntries()));
    setEnabled(oneEntryWithURLorDOIOnlyActions,isExistURLorDOI(current.getSelectedEntries()));
    boolean twoEntriesSelected=current.getSelectedEntries().size() == 2;
    setEnabled(twoEntriesOnlyActions,twoEntriesSelected);
  }
}
