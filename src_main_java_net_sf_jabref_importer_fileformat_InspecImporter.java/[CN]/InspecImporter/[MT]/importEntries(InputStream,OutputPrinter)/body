{
  ArrayList<BibtexEntry> bibitems=new ArrayList<>();
  StringBuilder sb=new StringBuilder();
  BufferedReader in=new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream));
  String str;
  while ((str=in.readLine()) != null) {
    if (str.length() < 2) {
      continue;
    }
    if (str.indexOf("Record") == 0) {
      sb.append("__::__").append(str);
    }
 else {
      sb.append("__NEWFIELD__").append(str);
    }
  }
  in.close();
  String[] entries=sb.toString().split("__::__");
  String Type="";
  HashMap<String,String> h=new HashMap<>();
  for (  String entry : entries) {
    if (entry.indexOf("Record") != 0) {
      continue;
    }
    h.clear();
    String[] fields=entry.split("__NEWFIELD__");
    for (    String s : fields) {
      String f3=s.substring(0,2);
      String frest=s.substring(5);
      if (f3.equals("TI")) {
        h.put("title",frest);
      }
 else       if (f3.equals("PY")) {
        h.put("year",frest);
      }
 else       if (f3.equals("AU")) {
        h.put("author",AuthorList.fixAuthor_lastNameFirst(frest.replaceAll(",-",", ").replaceAll(";"," and ")));
      }
 else       if (f3.equals("AB")) {
        h.put("abstract",frest);
      }
 else       if (f3.equals("ID")) {
        h.put("keywords",frest);
      }
 else       if (f3.equals("SO")) {
        int m=frest.indexOf(".");
        if (m >= 0) {
          String jr=frest.substring(0,m);
          h.put("journal",jr.replaceAll("-"," "));
          frest=frest.substring(m);
          m=frest.indexOf(";");
          if (m >= 5) {
            String yr=frest.substring(m - 5,m);
            h.put("year",yr);
            frest=frest.substring(m);
            m=frest.indexOf(":");
            if (m >= 0) {
              String pg=frest.substring(m + 1).trim();
              h.put("pages",pg);
              h.put("volume",frest.substring(1,m));
            }
          }
        }
      }
 else       if (f3.equals("RT")) {
        frest=frest.trim();
        if (frest.equals("Journal-Paper")) {
          Type="article";
        }
 else         if (frest.equals("Conference-Paper") || frest.equals("Conference-Paper; Journal-Paper")) {
          Type="inproceedings";
        }
 else {
          Type=frest.replaceAll(" ","");
        }
      }
    }
    BibtexEntry b=new BibtexEntry(DEFAULT_BIBTEXENTRY_ID,BibtexEntryTypes.getEntryType(Type));
    b.setField(h);
    bibitems.add(b);
  }
  return bibitems;
}
