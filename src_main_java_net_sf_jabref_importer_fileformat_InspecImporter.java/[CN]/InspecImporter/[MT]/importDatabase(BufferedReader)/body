{
  List<BibEntry> bibitems=new ArrayList<>();
  StringBuilder sb=new StringBuilder();
  String str;
  while ((str=reader.readLine()) != null) {
    if (str.length() < 2) {
      continue;
    }
    if (str.indexOf("Record") == 0) {
      sb.append("__::__").append(str);
    }
 else {
      sb.append("__NEWFIELD__").append(str);
    }
  }
  String[] entries=sb.toString().split("__::__");
  String type="";
  Map<String,String> h=new HashMap<>();
  for (  String entry : entries) {
    if (entry.indexOf("Record") != 0) {
      continue;
    }
    h.clear();
    String[] fields=entry.split("__NEWFIELD__");
    for (    String s : fields) {
      String f3=s.substring(0,2);
      String frest=s.substring(5);
      if ("TI".equals(f3)) {
        h.put("title",frest);
      }
 else       if ("PY".equals(f3)) {
        h.put("year",frest);
      }
 else       if ("AU".equals(f3)) {
        h.put("author",AuthorList.fixAuthorLastNameFirst(frest.replace(",-",", ").replace(";"," and ")));
      }
 else       if ("AB".equals(f3)) {
        h.put("abstract",frest);
      }
 else       if ("ID".equals(f3)) {
        h.put("keywords",frest);
      }
 else       if ("SO".equals(f3)) {
        int m=frest.indexOf('.');
        if (m >= 0) {
          String jr=frest.substring(0,m);
          h.put("journal",jr.replace("-"," "));
          frest=frest.substring(m);
          m=frest.indexOf(';');
          if (m >= 5) {
            String yr=frest.substring(m - 5,m).trim();
            h.put("year",yr);
            frest=frest.substring(m);
            m=frest.indexOf(':');
            if (m >= 0) {
              String pg=frest.substring(m + 1).trim();
              h.put("pages",pg);
              String vol=frest.substring(1,m).trim();
              h.put("volume",vol);
            }
          }
        }
      }
 else       if ("RT".equals(f3)) {
        frest=frest.trim();
        if ("Journal-Paper".equals(frest)) {
          type="article";
        }
 else         if ("Conference-Paper".equals(frest) || "Conference-Paper; Journal-Paper".equals(frest)) {
          type="inproceedings";
        }
 else {
          type=frest.replace(" ","");
        }
      }
    }
    BibEntry b=new BibEntry(DEFAULT_BIBTEXENTRY_ID,type);
    b.setField(h);
    bibitems.add(b);
  }
  return new ParserResult(bibitems);
}
