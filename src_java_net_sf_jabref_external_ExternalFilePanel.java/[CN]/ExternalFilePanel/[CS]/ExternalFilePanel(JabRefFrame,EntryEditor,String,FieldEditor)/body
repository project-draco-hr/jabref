{
  this.entryEditor=entryEditor;
  setLayout(new GridLayout(3,1));
  browseBut=new JButton(Globals.lang("Browse"));
  download=new JButton(Globals.lang("Download"));
  auto=new JButton(Globals.lang("Auto"));
  browseBut.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String directory=Globals.prefs.get(fieldName + "Directory");
      if ((directory != null) && directory.equals(""))       directory=null;
      String dir=editor.getText();
      if ((directory == null) || !(new File(dir)).isAbsolute()) {
        if (directory != null)         dir=directory;
 else         dir=Globals.prefs.get(fieldName + Globals.FILETYPE_PREFS_EXT,"");
      }
      String chosenFile=Globals.getNewFile(frame,Globals.prefs,new File(dir),"." + fieldName,JFileChooser.OPEN_DIALOG,false);
      if (chosenFile != null) {
        File newFile=new File(chosenFile);
        String position=newFile.getParent();
        if ((directory != null) && position.startsWith(directory)) {
          String relPath=position.substring(directory.length(),position.length()) + File.separator + newFile.getName();
          if (relPath.startsWith(File.separator)) {
            relPath=relPath.substring(File.separator.length(),relPath.length());
          }
          editor.setText(relPath);
        }
 else         editor.setText(newFile.getPath());
        Globals.prefs.put(fieldName + Globals.FILETYPE_PREFS_EXT,newFile.getPath());
        entryEditor.storeFieldAction.actionPerformed(new ActionEvent(editor,0,""));
      }
    }
  }
);
  download.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String res=JOptionPane.showInputDialog((Component)editor,Globals.lang("Enter URL to download"));
      if (res != null) {
class Downloader extends Thread {
          String res;
          public Downloader(          String res){
            this.res=res;
          }
          public void run(){
            URL url;
            try {
              url=new URL(res);
              String plannedName=null;
              if (entryEditor.entry.getField(Globals.KEY_FIELD) != null)               plannedName=entryEditor.entry.getField(Globals.KEY_FIELD) + "." + fieldName;
 else {
                plannedName=JOptionPane.showInputDialog((Component)editor,Globals.lang("BibTeX key not set. Enter a name for the downloaded file"));
                if (plannedName == null)                 return;
                if (!plannedName.substring(4).equals("." + fieldName))                 plannedName+="." + fieldName;
              }
              File file=new File(new File(Globals.prefs.get(fieldName + "Directory")),plannedName);
              URLDownload udl=new URLDownload((Component)editor,url,file);
              frame.output(Globals.lang("Downloading..."));
              try {
                udl.download();
              }
 catch (              IOException e2) {
                JOptionPane.showMessageDialog((Component)editor,Globals.lang("Invalid URL"),Globals.lang("Download file"),JOptionPane.ERROR_MESSAGE);
                Globals.logger("Error while downloading " + url.toString());
              }
              frame.output(Globals.lang("Download completed"));
              String filename=file.getPath();
              System.out.println(filename);
              String directory=Globals.prefs.get(fieldName + "Directory");
              if (filename.startsWith(directory)) {
                String relPath=filename.substring(directory.length(),filename.length());
                if (relPath.startsWith(File.separator)) {
                  relPath=relPath.substring(File.separator.length(),relPath.length());
                }
                filename=relPath;
              }
              editor.setText(filename);
              SwingUtilities.invokeLater(new Thread(){
                public void run(){
                  entryEditor.updateField(editor);
                }
              }
);
            }
 catch (            MalformedURLException e1) {
              JOptionPane.showMessageDialog((Component)editor,"Invalid URL","Download file",JOptionPane.ERROR_MESSAGE);
            }
          }
        }
        ;
        (new Downloader(res)).start();
      }
    }
  }
);
  auto.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      Object o=entryEditor.entry.getField(Globals.KEY_FIELD);
      if ((o == null) || (Globals.prefs.get(fieldName + "Directory") == null)) {
        frame.output(Globals.lang("You must set both bibtex key and %0 directory",fieldName.toUpperCase()) + ".");
        return;
      }
      frame.output(Globals.lang("Searching for %0 file",fieldName.toUpperCase()) + " '" + o+ "."+ fieldName+ "'...");
      (new Thread(){
        public void run(){
          Object o=entryEditor.entry.getField(Globals.KEY_FIELD);
          String found=Util.findPdf((String)o,fieldName,Globals.prefs.get(fieldName + "Directory"));
          if (found != null) {
            editor.setText(found);
            entryEditor.updateField(editor);
            frame.output(Globals.lang("%0 field set",fieldName.toUpperCase()) + ".");
          }
 else {
            frame.output(Globals.lang("No %0 found",fieldName.toUpperCase()) + ".");
          }
        }
      }
).start();
    }
  }
);
  add(browseBut);
  add(auto);
  add(download);
  ((JComponent)editor).setDropTarget(new DropTarget((Component)editor,DnDConstants.ACTION_NONE,new UrlDragDrop(entryEditor,frame,editor)));
}
