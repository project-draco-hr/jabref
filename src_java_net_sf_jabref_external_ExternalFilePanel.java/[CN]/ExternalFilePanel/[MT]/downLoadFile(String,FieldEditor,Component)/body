{
  String res=JOptionPane.showInputDialog(parent,Globals.lang("Enter URL to download"));
  if (res != null) {
class Downloader extends Thread {
      String res;
      BibtexEntry targetEntry=null;
      public Downloader(      String res){
        this.res=res;
        if (entryEditor != null)         targetEntry=entryEditor.getEntry();
      }
      public void run(){
        URL url;
        String textToSet=editor.getText();
        editor.setEnabled(false);
        boolean updateEditor=true;
        try {
          editor.setText(Globals.lang("Downloading..."));
          url=new URL(res);
          String suffix=off.getSuffix(res);
          if (suffix == null)           suffix="." + fieldName.toLowerCase();
          String plannedName=null;
          if (getKey() != null)           plannedName=getKey() + suffix;
 else {
            plannedName=JOptionPane.showInputDialog(parent,Globals.lang("BibTeX key not set. Enter a name for the downloaded file"));
            if (plannedName == null)             return;
            if (!off.accept(plannedName))             plannedName+=suffix;
          }
          String directory=metaData.getFileDirectory(fieldName);
          System.out.println(directory);
          File file=new File(new File(directory),plannedName);
          URLDownload udl=new URLDownload(parent,url,file);
          output(Globals.lang("Downloading..."));
          try {
            udl.download();
          }
 catch (          IOException e2) {
            JOptionPane.showMessageDialog(parent,Globals.lang("Invalid URL: " + e2.getMessage()),Globals.lang("Download file"),JOptionPane.ERROR_MESSAGE);
            Globals.logger("Error while downloading " + url.toString());
          }
          updateEditor=(entryEditor == null) || (entryEditor.getEntry() == targetEntry);
          output(Globals.lang("Download completed"));
          String filename=file.getPath();
          if (filename.startsWith(directory)) {
            String relPath=filename.substring(directory.length(),filename.length());
            if (relPath.startsWith(File.separator)) {
              relPath=relPath.substring(File.separator.length(),relPath.length());
            }
            filename=relPath;
          }
          textToSet=filename;
          if (updateEditor)           SwingUtilities.invokeLater(new Thread(){
            public void run(){
              if (entryEditor != null)               entryEditor.updateField(editor);
            }
          }
);
 else {
            targetEntry.setField(fieldName,textToSet);
          }
        }
 catch (        MalformedURLException e1) {
          JOptionPane.showMessageDialog(parent,"Invalid URL: " + e1.getMessage(),"Download file",JOptionPane.ERROR_MESSAGE);
        }
 finally {
          if (updateEditor) {
            System.out.println("Juuu");
            editor.setText(textToSet);
            editor.setEnabled(true);
          }
        }
      }
    }
    (new Downloader(res)).start();
  }
}
