{
  fileDir.setText(prefs.get(FieldName.FILE + FileDirectoryPreferences.DIR_SUFFIX));
  bibLocAsPrimaryDir.setSelected(prefs.getBoolean(JabRefPreferences.BIB_LOC_AS_PRIMARY_DIR));
  runAutoFileSearch.setSelected(prefs.getBoolean(JabRefPreferences.RUN_AUTOMATIC_FILE_SEARCH));
  allowFileAutoOpenBrowse.setSelected(prefs.getBoolean(JabRefPreferences.ALLOW_FILE_AUTO_OPEN_BROWSE));
  regExpTextField.setText(prefs.get(JabRefPreferences.REG_EXP_SEARCH_EXPRESSION_KEY));
  if (prefs.getBoolean(JabRefPreferences.AUTOLINK_USE_REG_EXP_SEARCH_KEY)) {
    useRegExpComboBox.setSelected(true);
  }
 else   if (prefs.getBoolean(JabRefPreferences.AUTOLINK_EXACT_KEY_ONLY)) {
    matchExactKeyOnly.setSelected(true);
  }
 else {
    matchStartsWithKey.setSelected(true);
  }
  openLast.setSelected(prefs.getBoolean(JabRefPreferences.OPEN_LAST_EDITED));
  backup.setSelected(prefs.getBoolean(JabRefPreferences.BACKUP));
  String newline=prefs.get(JabRefPreferences.NEWLINE);
  if ("\r".equals(newline)) {
    newlineSeparator.setSelectedIndex(0);
  }
 else   if ("\n".equals(newline)) {
    newlineSeparator.setSelectedIndex(2);
  }
 else {
    newlineSeparator.setSelectedIndex(1);
  }
  reformatFileOnSaveAndExport.setSelected(prefs.getBoolean(JabRefPreferences.REFORMAT_FILE_ON_SAVE_AND_EXPORT));
  resolveStringsAll.setSelected(prefs.getBoolean(JabRefPreferences.RESOLVE_STRINGS_ALL_FIELDS));
  resolveStringsStandard.setSelected(!resolveStringsAll.isSelected());
  doNotResolveStringsFor.setText(prefs.get(JabRefPreferences.DO_NOT_RESOLVE_STRINGS_FOR));
  nonWrappableFields.setText(prefs.get(JabRefPreferences.NON_WRAPPABLE_FIELDS));
  localAutoSave.setSelected(prefs.getBoolean(JabRefPreferences.LOCAL_AUTO_SAVE));
}
