{
  this.prefs=prefs;
  this.frame=frame;
  openLast=new JCheckBox(Localization.lang("Open last edited databases at startup"));
  backup=new JCheckBox(Localization.lang("Backup old file when saving"));
  autoSave=new JCheckBox(Localization.lang("Autosave"));
  promptBeforeUsingAutoSave=new JCheckBox(Localization.lang("Prompt before recovering a database from an autosave file"));
  autoSaveInterval=new JSpinner(new SpinnerNumberModel(1,1,60,1));
  valueDelimiter=new JComboBox<>(new String[]{Localization.lang("Quotes") + ": \", \"",Localization.lang("Curly Brackets") + ": {, }"});
  includeEmptyFields=new JCheckBox(Localization.lang("Include empty fields"));
  sameColumn=new JCheckBox(Localization.lang("Start field contents in same column"));
  camelCase=new JCheckBox(Localization.lang("Use camel case for field names (e.g., \"HowPublished\" instead of \"howpublished\")"));
  resolveStringsAll=new JRadioButton(Localization.lang("Resolve strings for all fields except") + ":");
  resolveStringsStandard=new JRadioButton(Localization.lang("Resolve strings for standard BibTeX fields only"));
  ButtonGroup bg=new ButtonGroup();
  bg.add(resolveStringsAll);
  bg.add(resolveStringsStandard);
  userDefinedFieldOrder=new JTextField(this.prefs.get(JabRefPreferences.WRITEFIELD_USERDEFINEDORDER));
  newlineSeparator=new JComboBox<>(new String[]{"CR","CR/LF","LF"});
  bracesAroundCapitalsFields=new JTextField(25);
  nonWrappableFields=new JTextField(25);
  doNotResolveStringsFor=new JTextField(30);
  autoDoubleBraces=new JCheckBox(Localization.lang("Remove double braces around BibTeX fields when loading."));
  autoSave.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent changeEvent){
      autoSaveInterval.setEnabled(autoSave.isSelected());
      promptBeforeUsingAutoSave.setEnabled(autoSave.isSelected());
    }
  }
);
  FormLayout layout=new FormLayout("left:pref, 4dlu, fill:pref","");
  DefaultFormBuilder builder=new DefaultFormBuilder(layout);
  builder.appendSeparator(Localization.lang("General"));
  builder.nextLine();
  builder.append(openLast,3);
  builder.nextLine();
  builder.append(backup,3);
  builder.nextLine();
  builder.append(autoDoubleBraces,3);
  builder.nextLine();
  JLabel label=new JLabel(Localization.lang("Store the following fields with braces around capital letters") + ":");
  builder.append(label);
  builder.append(bracesAroundCapitalsFields);
  builder.nextLine();
  label=new JLabel(Localization.lang("Do not wrap the following fields when saving") + ":");
  builder.append(label);
  builder.append(nonWrappableFields);
  builder.nextLine();
  builder.append(resolveStringsStandard,3);
  builder.nextLine();
  builder.append(resolveStringsAll);
  builder.append(doNotResolveStringsFor);
  builder.nextLine();
  JLabel lab=new JLabel(Localization.lang("Newline separator") + ":");
  builder.append(lab);
  builder.append(newlineSeparator);
  builder.nextLine();
  builder.appendSeparator(Localization.lang("Autosave"));
  builder.append(autoSave,1);
  JButton help=new HelpAction(frame.helpDiag,GUIGlobals.autosaveHelp).getIconButton();
  help.setPreferredSize(new Dimension(24,24));
  JPanel hPan=new JPanel();
  hPan.setLayout(new BorderLayout());
  hPan.add(help,BorderLayout.EAST);
  builder.append(hPan);
  builder.nextLine();
  builder.append(Localization.lang("Autosave interval (minutes)") + ":");
  builder.append(autoSaveInterval);
  builder.nextLine();
  builder.append(promptBeforeUsingAutoSave);
  builder.nextLine();
  builder.appendSeparator(Localization.lang("Field saving options"));
  builder.nextLine();
  builder.append(camelCase);
  builder.nextLine();
  builder.append(sameColumn);
  builder.append(new JPanel());
  builder.nextLine();
  builder.append(includeEmptyFields);
  builder.append(new JPanel());
  builder.nextLine();
  wrapFieldLine=new JCheckBox(Localization.lang("Wrap fields as ver 2.9.2"));
  builder.append(wrapFieldLine);
  builder.nextLine();
  String[] _rbs0={"Save fields sorted in alphabetic order (as in versions 2.10+)","Save fields in unsorted order (as until version 2.9.2)","Save fields in user-defined order"};
  ArrayList<String> _rbs=new ArrayList<>();
  for (  String _rb : _rbs0) {
    _rbs.add(Localization.lang(_rb));
  }
  bgFieldOrderStyle=createRadioBg(_rbs);
  userDefinedFieldOrder=new JTextField(this.prefs.get(JabRefPreferences.WRITEFIELD_USERDEFINEDORDER));
  createAdFieldOrderBg(builder,bgFieldOrderStyle,userDefinedFieldOrder);
  JPanel pan=builder.getPanel();
  pan.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  setLayout(new BorderLayout());
  add(pan,BorderLayout.CENTER);
}
