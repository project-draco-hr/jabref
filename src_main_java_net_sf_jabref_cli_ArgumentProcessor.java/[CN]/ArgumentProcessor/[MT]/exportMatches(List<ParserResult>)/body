{
  String[] data=cli.getExportMatches().split(",");
  String searchTerm=data[0].replace("\\$"," ");
  ParserResult pr=loaded.get(loaded.size() - 1);
  BibDatabase dataBase=pr.getDatabase();
  SearchQuery query=new SearchQuery(searchTerm,Globals.prefs.getBoolean(JabRefPreferences.SEARCH_CASE_SENSITIVE),Globals.prefs.getBoolean(JabRefPreferences.SEARCH_REG_EXP));
  BibDatabase newBase=new DatabaseSearcher(query,dataBase).getDatabaseFromMatches();
  if (newBase.hasEntries()) {
    String formatName;
switch (data.length) {
case 3:
      formatName=data[2];
    break;
case 2:
  formatName="tablerefsabsbib";
break;
default :
System.err.println(Localization.lang("Output file missing").concat(". \n \t ").concat(Localization.lang("Usage")).concat(": ") + JabRefCLI.getExportMatchesSyntax());
noGUINeeded=true;
return false;
}
IExportFormat format=ExportFormats.getExportFormat(formatName);
if (format == null) {
System.err.println(Localization.lang("Unknown export format") + ": " + formatName);
}
 else {
try {
System.out.println(Localization.lang("Exporting") + ": " + data[1]);
BibDatabaseContext databaseContext=new BibDatabaseContext(newBase,pr.getMetaData());
format.performExport(databaseContext,data[1],pr.getEncoding(),newBase.getEntries());
}
 catch (Exception ex) {
System.err.println(Localization.lang("Could not export file") + " '" + data[1]+ "': "+ ex.getMessage());
}
}
}
 else {
System.err.println(Localization.lang("No search matches."));
}
return true;
}
