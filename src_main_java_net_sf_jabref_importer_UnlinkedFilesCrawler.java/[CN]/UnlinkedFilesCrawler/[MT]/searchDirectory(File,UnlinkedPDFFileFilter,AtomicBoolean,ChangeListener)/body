{
  if ((state == null) || !state.get()) {
    return null;
  }
  if ((directory == null) || !directory.exists() || !directory.isDirectory()) {
    return null;
  }
  File[] files=directory.listFiles(ff);
  CheckableTreeNode root=new CheckableTreeNode(null);
  int filesCount=0;
  File[] subDirectories=directory.listFiles(DIRECTORY_FILTER);
  for (  File subDirectory : subDirectories) {
    CheckableTreeNode subRoot=searchDirectory(subDirectory,ff,state,changeListener);
    if ((subRoot != null) && (subRoot.getChildCount() > 0)) {
      filesCount+=((FileNodeWrapper)subRoot.getUserObject()).fileCount;
      root.add(subRoot);
    }
  }
  root.setUserObject(new FileNodeWrapper(directory,files.length + filesCount));
  for (  File file : files) {
    root.add(new CheckableTreeNode(new FileNodeWrapper(file)));
    if (changeListener != null) {
      changeListener.stateChanged(new ChangeEvent(this));
    }
  }
  return root;
}
