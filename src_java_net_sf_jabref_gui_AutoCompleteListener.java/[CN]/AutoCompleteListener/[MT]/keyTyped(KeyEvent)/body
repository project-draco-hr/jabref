{
  char ch=e.getKeyChar();
  if (Character.isLetter(ch)) {
    JTextComponent comp=(JTextComponent)e.getSource();
    if ((toSetIn != null) && (toSetIn.length() > 1) && (ch == toSetIn.charAt(1))) {
      toSetIn=toSetIn.substring(1);
      if (toSetIn.length() > 0) {
        int cp=comp.getCaretPosition();
        comp.select(cp + 1 - toSetIn.length(),cp);
        lastBeginning=lastBeginning + ch;
        e.consume();
        lastCaretPosition=comp.getCaretPosition();
        if (toSetIn.length() < 2)         toSetIn=null;
        return;
      }
    }
    if ((toSetIn != null) && ((toSetIn.length() <= 1) || (ch != toSetIn.charAt(1)))) {
      lastBeginning=lastBeginning + ch;
      Object[] completed=completer.complete(lastBeginning);
      if ((completed != null) && (completed.length > 0)) {
        lastShownCompletion=0;
        lastCompletions=completed;
        String sno=(String)(completed[0]);
        int lastLen=toSetIn.length() - 1;
        toSetIn=sno.substring(lastBeginning.length() - 1);
        String text=comp.getText();
        comp.setText(text.substring(0,lastCaretPosition - lastLen) + toSetIn + text.substring(lastCaretPosition));
        comp.select(lastCaretPosition + 1 - lastLen,lastCaretPosition + toSetIn.length() - lastLen);
        lastCaretPosition=comp.getCaretPosition();
        e.consume();
        return;
      }
 else {
        toSetIn=null;
        return;
      }
    }
    StringBuffer currentword=getCurrentWord(comp);
    if (currentword == null)     return;
    currentword.append(ch);
    Object[] completed=completer.complete(currentword.toString());
    int no=0;
    if ((completed != null) && (completed.length > 0)) {
      lastShownCompletion=0;
      lastCompletions=completed;
      String sno=(String)(completed[no]);
      toSetIn=sno.substring(currentword.length() - 1);
      StringBuffer alltext=new StringBuffer(comp.getText());
      int cp=comp.getCaretPosition();
      alltext.insert(cp,toSetIn);
      comp.setText(alltext.toString());
      comp.setCaretPosition(cp);
      comp.select(cp + 1,cp + 1 + sno.length() - currentword.length());
      e.consume();
      lastCaretPosition=comp.getCaretPosition();
      lastBeginning=currentword.toString();
      return;
    }
  }
  toSetIn=null;
  lastCompletions=null;
}
