{
  super(frame,Globals.lang("Possible duplicate entries"),true);
  p1=new PreviewPanel(one);
  p2=new PreviewPanel(two);
  ta1=new JTextArea();
  ta2=new JTextArea();
  ta1.setEditable(false);
  ta2.setEditable(false);
  try {
    StringWriter sw=new StringWriter();
    one.write(sw,new LatexFieldFormatter());
    ta1.setText(sw.getBuffer().toString());
    sw=new StringWriter();
    two.write(sw,new LatexFieldFormatter());
    ta2.setText(sw.getBuffer().toString());
  }
 catch (  IOException ex) {
  }
  main.setLayout(gbl);
  source.setLayout(gbl);
  con.insets=new Insets(10,10,10,10);
  con.fill=GridBagConstraints.BOTH;
  con.gridwidth=GridBagConstraints.REMAINDER;
  con.weightx=1;
  con.weighty=1;
  JScrollPane sp=new JScrollPane(p1);
  gbl.setConstraints(sp,con);
  main.add(sp);
  sp=new JScrollPane(ta1);
  gbl.setConstraints(sp,con);
  source.add(sp);
  sp=new JScrollPane(p2);
  gbl.setConstraints(sp,con);
  main.add(sp);
  sp=new JScrollPane(ta2);
  gbl.setConstraints(sp,con);
  source.add(sp);
  tabbed.add(Globals.lang("Short form"),main);
  tabbed.add(Globals.lang("Complete record"),source);
  options.add(first);
  options.add(second);
  options.add(both);
  first.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      status=KEEP_UPPER;
      dispose();
    }
  }
);
  second.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      status=KEEP_LOWER;
      dispose();
    }
  }
);
  both.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      status=KEEP_BOTH;
      dispose();
    }
  }
);
  getContentPane().add(tabbed,BorderLayout.CENTER);
  getContentPane().add(options,BorderLayout.SOUTH);
  pack();
  both.requestFocus();
  Util.placeDialog(this,frame);
}
