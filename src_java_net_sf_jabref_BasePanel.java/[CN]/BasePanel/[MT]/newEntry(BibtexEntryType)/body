{
  if (type == null) {
    EntryTypeDialog etd=new EntryTypeDialog(frame);
    Util.placeDialog(etd,frame);
    etd.setVisible(true);
    type=etd.getChoice();
  }
  if (type != null) {
    String id=Util.createNeutralId();
    BibtexEntry be=new BibtexEntry(id,type);
    try {
      database.insertEntry(be);
      if (prefs.getBoolean("useOwner"))       be.setField(Globals.OWNER,prefs.get("defaultOwner"));
      undoManager.addEdit(new UndoableInsertEntry(database,be,BasePanel.this));
      output(Globals.lang("Added new") + " '" + type.getName().toLowerCase()+ "' "+ Globals.lang("entry")+ ".");
      refreshTable();
      final int row=tableModel.getNumberFromName(id);
      highlightEntry(be);
      markBaseChanged();
      if (prefs.getBoolean("autoOpenForm")) {
        showEntry(be);
      }
    }
 catch (    KeyCollisionException ex) {
      Util.pr(ex.getMessage());
    }
  }
}
