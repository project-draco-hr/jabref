{
  tableModel=new EntryTableModel(frame,this,database);
  entryTable=new EntryTable(tableModel,ths,frame.prefs);
  entryTable.getActionMap().put("cut",new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      try {
        runCommand("cut");
      }
 catch (      Throwable ex) {
        ex.printStackTrace();
      }
    }
  }
);
  entryTable.getActionMap().put("copy",new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      try {
        runCommand("copy");
      }
 catch (      Throwable ex) {
        ex.printStackTrace();
      }
    }
  }
);
  entryTable.getActionMap().put("paste",new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      try {
        runCommand("paste");
      }
 catch (      Throwable ex) {
        ex.printStackTrace();
      }
    }
  }
);
  entryTable.addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      final int keyCode=e.getKeyCode();
      final TreePath path=frame.groupSelector.getSelectionPath();
      final GroupTreeNode node=path == null ? null : (GroupTreeNode)path.getLastPathComponent();
      if (e.isControlDown()) {
switch (keyCode) {
case KeyEvent.VK_UP:
          e.consume();
        if (node != null)         frame.groupSelector.moveNodeUp(node);
      break;
case KeyEvent.VK_DOWN:
    e.consume();
  if (node != null)   frame.groupSelector.moveNodeDown(node);
break;
case KeyEvent.VK_LEFT:
e.consume();
if (node != null) frame.groupSelector.moveNodeLeft(node);
break;
case KeyEvent.VK_RIGHT:
e.consume();
if (node != null) frame.groupSelector.moveNodeRight(node);
break;
}
}
 else if (keyCode == KeyEvent.VK_ENTER) {
e.consume();
try {
runCommand("edit");
}
 catch (Throwable ex) {
ex.printStackTrace();
}
}
}
}
);
entryTable.setRightClickMenu(rcm);
int pos=splitPane.getDividerLocation();
splitPane.setTopComponent(entryTable.getPane());
splitPane.setDividerLocation(pos);
}
