{
  ArrayList bibitems=new ArrayList();
  String paperNoStr=null;
  this.line=0;
  try {
    this.in=new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream));
    String prevLine="";
    readLine();
    while (this.lastLine != null) {
      if (this.lastLine.startsWith("-----------------------------")) {
        this.inOverviewSection=prevLine.startsWith("In this issue we have");
      }
      if (isStartOfWorkingPaper()) {
        BibtexEntry be=new BibtexEntry(Util.createNeutralId());
        be.setType(BibtexEntryType.getType("techreport"));
        paperNoStr=this.lastLine.substring(0,this.lastLine.indexOf('.'));
        parseTitleString(be);
        if (startsWithKeyword(recognizedFields)) {
          parseAdditionalFields(be,false);
        }
 else {
          readLine();
          parseAuthors(be);
          readLine();
        }
        if (!startsWithKeyword(recognizedFields)) {
          parseAbstract(be);
        }
        parseAdditionalFields(be,true);
        bibitems.add(be);
        paperNoStr=null;
      }
 else {
        prevLine=this.lastLine;
        readLine();
      }
    }
  }
 catch (  Exception e) {
    String message="Error in REPEC-NEP import on line " + this.line;
    if (paperNoStr != null) {
      message+=", paper no. " + paperNoStr + ": ";
    }
    message+=e.getMessage();
    System.err.println(message);
    if (!(e instanceof IOException)) {
      e.printStackTrace();
      e=new IOException(message);
    }
    throw (IOException)e;
  }
  return bibitems;
}
