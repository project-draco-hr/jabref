{
  final String fieldName=editor.getFieldName();
  String fieldExtras=BibtexFields.getFieldExtras(string);
  if (fieldName.equals(Globals.prefs.get(JabRefPreferences.TIME_STAMP_FIELD)) || fieldExtras != null && fieldExtras.equals("datepicker")) {
    ((JTextArea)editor).addMouseListener(new MouseAdapter(){
      @Override public void mouseClicked(      MouseEvent e){
        if (e.getClickCount() == 2) {
          String date=new EasyDateFormat().getCurrentDate();
          editor.setText(date);
        }
      }
    }
);
    if (fieldExtras != null && fieldExtras.equals("datepicker")) {
      DatePickerButton datePicker=new DatePickerButton(editor);
      return datePicker.getDatePicker();
    }
  }
  if (fieldExtras != null && fieldExtras.equals("external")) {
    ((JComponent)editor).addMouseListener(new ExternalViewerListener());
    return null;
  }
 else   if (fieldExtras != null && fieldExtras.equals("journalNames")) {
    JPanel controls=new JPanel();
    controls.setLayout(new BorderLayout());
    if (panel.metaData.getData(Globals.SELECTOR_META_PREFIX + editor.getFieldName()) != null) {
      FieldContentSelector ws=new FieldContentSelector(frame,panel,frame,editor,panel.metaData,storeFieldAction,false,", ");
      contentSelectors.add(ws);
      controls.add(ws,BorderLayout.NORTH);
    }
    controls.add(JournalAbbreviationsUtil.getNameSwitcher(this,editor,panel.undoManager),BorderLayout.SOUTH);
    return controls;
  }
 else {
    if (panel.metaData.getData(Globals.SELECTOR_META_PREFIX + editor.getFieldName()) != null) {
      FieldContentSelector ws=new FieldContentSelector(frame,panel,frame,editor,panel.metaData,storeFieldAction,false,editor.getFieldName().equals("author") || editor.getFieldName().equals("editor") ? " and " : ", ");
      contentSelectors.add(ws);
      return ws;
    }
 else {
      if (fieldExtras != null && fieldExtras.equals("browse")) {
        JButton but=new JButton(Localization.lang("Browse"));
        ((JComponent)editor).addMouseListener(new ExternalViewerListener());
        but.addActionListener(new ActionListener(){
          @Override public void actionPerformed(          ActionEvent e){
            String dir=editor.getText();
            if (dir.isEmpty()) {
              dir=prefs.get(fieldName + Globals.FILETYPE_PREFS_EXT,"");
            }
            String chosenFile=FileDialogs.getNewFile(frame,new File(dir),'.' + fieldName,JFileChooser.OPEN_DIALOG,false);
            if (chosenFile != null) {
              File newFile=new File(chosenFile);
              editor.setText(newFile.getPath());
              prefs.put(fieldName + Globals.FILETYPE_PREFS_EXT,newFile.getPath());
              updateField(editor);
            }
          }
        }
);
        return but;
      }
 else       if (fieldExtras != null && (fieldExtras.equals("browseDoc") || fieldExtras.equals("browseDocZip"))) {
        final String ext='.' + fieldName.toLowerCase();
        final OpenFileFilter off;
        if (fieldExtras.equals("browseDocZip")) {
          off=new OpenFileFilter(new String[]{ext,ext + ".gz",ext + ".bz2"});
        }
 else {
          off=new OpenFileFilter(new String[]{ext});
        }
        return new ExternalFilePanel(frame,panel.metaData(),this,fieldName,off,editor);
      }
 else       if (fieldExtras != null && fieldExtras.equals("url")) {
        ((JComponent)editor).setDropTarget(new DropTarget((Component)editor,DnDConstants.ACTION_NONE,new SimpleUrlDragDrop(editor,storeFieldAction)));
        return null;
      }
 else       if (fieldExtras != null && fieldExtras.equals("setOwner")) {
        JButton button=new JButton(Localization.lang("Auto"));
        button.addActionListener(new ActionListener(){
          @Override public void actionPerformed(          ActionEvent actionEvent){
            editor.setText(Globals.prefs.get(JabRefPreferences.DEFAULT_OWNER));
            storeFieldAction.actionPerformed(new ActionEvent(editor,0,""));
          }
        }
);
        return button;
      }
 else {
        return null;
      }
    }
  }
}
