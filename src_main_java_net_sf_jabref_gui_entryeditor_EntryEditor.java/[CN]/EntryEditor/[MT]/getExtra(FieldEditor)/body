{
  final String fieldName=editor.getFieldName();
  final Set<FieldProperty> fieldExtras=InternalBibtexFields.getFieldProperties(fieldName);
  if (Globals.prefs.get(JabRefPreferences.TIME_STAMP_FIELD).equals(fieldName) || fieldExtras.contains(FieldProperty.DATE)) {
    return FieldExtraComponents.getDateTimeExtraComponent(editor,fieldExtras.contains(FieldProperty.DATE),fieldExtras.contains(FieldProperty.ISO_DATE));
  }
 else   if (fieldExtras.contains(FieldProperty.EXTERNAL)) {
    return FieldExtraComponents.getExternalExtraComponent(panel,editor);
  }
 else   if (fieldExtras.contains(FieldProperty.JOURNAL_NAME)) {
    return FieldExtraComponents.getJournalExtraComponent(frame,panel,editor,entry,contentSelectors,getStoreFieldAction());
  }
 else   if (!panel.getBibDatabaseContext().getMetaData().getContentSelectors(fieldName).isEmpty()) {
    return FieldExtraComponents.getSelectorExtraComponent(frame,panel,editor,contentSelectors,getStoreFieldAction());
  }
 else   if (fieldExtras.contains(FieldProperty.DOI)) {
    return FieldExtraComponents.getDoiExtraComponent(panel,this,editor);
  }
 else   if (fieldExtras.contains(FieldProperty.EPRINT)) {
    return FieldExtraComponents.getEprintExtraComponent(panel,this,editor);
  }
 else   if (fieldExtras.contains(FieldProperty.ISBN)) {
    return FieldExtraComponents.getIsbnExtraComponent(panel,this,editor);
  }
 else   if (fieldExtras.contains(FieldProperty.OWNER)) {
    return FieldExtraComponents.getSetOwnerExtraComponent(editor,getStoreFieldAction());
  }
 else   if (fieldExtras.contains(FieldProperty.YES_NO)) {
    return FieldExtraComponents.getYesNoExtraComponent(editor,this);
  }
 else   if (fieldExtras.contains(FieldProperty.MONTH)) {
    return FieldExtraComponents.getMonthExtraComponent(editor,this,frame.getCurrentBasePanel().getBibDatabaseContext().getMode());
  }
 else   if (fieldExtras.contains(FieldProperty.GENDER)) {
    return FieldExtraComponents.getGenderExtraComponent(editor,this);
  }
 else   if (fieldExtras.contains(FieldProperty.EDITOR_TYPE)) {
    return FieldExtraComponents.getEditorTypeExtraComponent(editor,this);
  }
 else   if (fieldExtras.contains(FieldProperty.PAGINATION)) {
    return FieldExtraComponents.getPaginationExtraComponent(editor,this);
  }
 else   if (fieldExtras.contains(FieldProperty.TYPE)) {
    return FieldExtraComponents.getTypeExtraComponent(editor,this,"patent".equalsIgnoreCase(entry.getType()));
  }
 else   if (fieldExtras.contains(FieldProperty.CROSSREF)) {
    return FieldExtraComponents.getCrossrefExtraComponent(editor,frame.getCurrentBasePanel());
  }
  return Optional.empty();
}
