{
  String[] attributes=header.split(";");
  String nameValue=attributes[0].trim();
  this.name=nameValue.substring(0,nameValue.indexOf('='));
  this.value=nameValue.substring(nameValue.indexOf('=') + 1);
  this.path="/";
  this.domain=uri.getHost();
  for (int i=1; i < attributes.length; i++) {
    nameValue=attributes[i].trim();
    int equals=nameValue.indexOf('=');
    if (equals == -1) {
      continue;
    }
    String attributeName=nameValue.substring(0,equals);
    String attributeValue=nameValue.substring(equals + 1);
    if ("domain".equalsIgnoreCase(attributeName)) {
      String uriDomain=uri.getHost();
      if (uriDomain.equals(attributeValue)) {
        this.domain=attributeValue;
      }
 else {
        if (!attributeValue.startsWith(".")) {
          attributeValue='.' + attributeValue;
        }
        uriDomain=uriDomain.substring(uriDomain.indexOf('.'));
        if (!uriDomain.equals(attributeValue) && !uriDomain.endsWith(attributeValue) && !attributeValue.endsWith(uriDomain)) {
          throw new IllegalArgumentException("Trying to set foreign cookie");
        }
        this.domain=attributeValue;
      }
    }
 else     if ("path".equalsIgnoreCase(attributeName)) {
      this.path=attributeValue;
    }
 else     if ("expires".equalsIgnoreCase(attributeName)) {
      try {
        this.expires=ZonedDateTime.parse(attributeValue,whiteSpaceFormat);
      }
 catch (      DateTimeParseException e) {
        try {
          this.expires=ZonedDateTime.parse(attributeValue,hyphenFormat);
        }
 catch (        DateTimeParseException e2) {
          try {
            this.expires=ZonedDateTime.parse(attributeValue,hyphenTwoDigitYearFormat);
          }
 catch (          DateTimeParseException e3) {
            throw new IllegalArgumentException("Bad date format in header: " + attributeValue);
          }
        }
      }
    }
  }
}
