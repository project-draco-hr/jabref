{
  content=new StringBuffer(StringUtil.unifyLineBreaks(content.toString()));
  if (multiLineFields.contains(bibtexKey)) {
    return content;
  }
  int i=0;
  while (i < content.length()) {
    int c=content.charAt(i);
    if (c == '\n') {
      if (content.length() > i + 1 && content.charAt(i + 1) == '\t' && (content.length() == i + 2 || !Character.isWhitespace(content.charAt(i + 2)))) {
        content.deleteCharAt(i);
        content.deleteCharAt(i);
        if (i == 0 || !Character.isWhitespace(content.charAt(i - 1))) {
          content.insert(i,' ');
          i++;
        }
      }
 else       if (content.length() > i + 3 && content.charAt(i + 1) == '\t' && content.charAt(i + 2) == ' ' && !Character.isWhitespace(content.charAt(i + 3))) {
        content.deleteCharAt(i);
        content.deleteCharAt(i);
        if (i > 0 && Character.isWhitespace(content.charAt(i - 1))) {
          content.deleteCharAt(i);
        }
      }
 else       if (content.length() > i + 3 && content.charAt(i + 1) == '\t' && content.charAt(i + 2) == '\n' && content.charAt(i + 3) == '\t') {
        content.deleteCharAt(i + 1);
        content.deleteCharAt(i + 1);
        content.deleteCharAt(i + 1);
        i++;
        while (content.length() > i + 1 && content.charAt(i) == '\n' && content.charAt(i + 1) == '\t') {
          content.deleteCharAt(i + 1);
          i++;
        }
      }
 else       if (content.length() > i + 1 && content.charAt(i + 1) != '\n') {
        i++;
      }
 else       if (content.length() > i + 1 && content.charAt(i + 1) == '\n') {
        i++;
        i++;
      }
 else {
        i++;
      }
    }
 else     if (c == ' ') {
      if (i > 0 && content.charAt(i - 1) == ' ') {
        if (bibtexKey != null && bibtexKey.equals(GUIGlobals.FILE_FIELD)) {
          i++;
        }
 else {
          content.deleteCharAt(i);
        }
      }
 else {
        i++;
      }
    }
 else     if (c == '\t') {
      content.deleteCharAt(i);
    }
 else {
      i++;
    }
  }
  return content;
}
