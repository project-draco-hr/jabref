{
  if (database != null) {
    entry=database.resolveForStrings(entry,false);
  }
  JabRefPreferences prefs=JabRefPreferences.getInstance();
  boolean useXmpPrivacyFilter=prefs.getBoolean(JabRefPreferences.USE_XMP_PRIVACY_FILTER);
  TreeSet<String> filters=new TreeSet<>(Arrays.asList(prefs.getStringArray(JabRefPreferences.XMP_PRIVACY_FILTERS)));
  for (  String field : entry.getFieldNames()) {
    if (useXmpPrivacyFilter && filters.contains(field)) {
      continue;
    }
    if (field.equals("editor")) {
      String authors=entry.getField(field);
      AuthorList list=AuthorList.getAuthorList(authors);
      int n=list.size();
      for (int i=0; i < n; i++) {
        dcSchema.addContributor(list.getAuthor(i).getFirstLast(false));
      }
      continue;
    }
    if (field.equals("author")) {
      String authors=entry.getField(field);
      AuthorList list=AuthorList.getAuthorList(authors);
      int n=list.size();
      for (int i=0; i < n; i++) {
        dcSchema.addCreator(list.getAuthor(i).getFirstLast(false));
      }
      continue;
    }
    if (field.equals("month")) {
      continue;
    }
    if (field.equals("year")) {
      String publicationDate=entry.getPublicationDate();
      if (publicationDate != null) {
        dcSchema.addSequenceValue("dc:date",publicationDate);
      }
      continue;
    }
    if (field.equals("abstract")) {
      String o=entry.getField(field);
      dcSchema.setDescription(o);
      continue;
    }
    if (field.equals("doi")) {
      String o=entry.getField(field);
      dcSchema.setIdentifier(o);
      continue;
    }
    if (field.equals("publisher")) {
      String o=entry.getField(field);
      dcSchema.addPublisher(o);
      continue;
    }
    if (field.equals("keywords")) {
      String o=entry.getField(field);
      String[] keywords=o.split(",");
      for (      String keyword : keywords) {
        dcSchema.addSubject(keyword.trim());
      }
      continue;
    }
    if (field.equals("title")) {
      String o=entry.getField(field);
      dcSchema.setTitle(o);
      continue;
    }
    String o=entry.getField(field);
    dcSchema.addRelation("bibtex/" + field + '/'+ o);
  }
  dcSchema.setFormat("application/pdf");
  Object o=entry.getType().getName();
  if (o != null) {
    dcSchema.addType(o.toString());
  }
}
