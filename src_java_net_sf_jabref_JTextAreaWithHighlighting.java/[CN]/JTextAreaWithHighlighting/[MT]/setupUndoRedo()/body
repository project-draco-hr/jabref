{
  undo=new UndoManager();
  Document doc=getDocument();
  doc.addUndoableEditListener(new UndoableEditListener(){
    public void undoableEditHappened(    UndoableEditEvent evt){
      undo.addEdit(evt.getEdit());
    }
  }
);
  getActionMap().put("Undo",new AbstractAction("Undo"){
    public void actionPerformed(    ActionEvent evt){
      try {
        if (undo.canUndo()) {
          undo.undo();
        }
      }
 catch (      CannotUndoException e) {
      }
    }
  }
);
  getInputMap().put(Globals.prefs.getKey("Undo"),"Undo");
  getActionMap().put("Redo",new AbstractAction("Redo"){
    public void actionPerformed(    ActionEvent evt){
      try {
        if (undo.canRedo()) {
          undo.redo();
        }
      }
 catch (      CannotRedoException e) {
      }
    }
  }
);
  boolean bind=true;
  KeyStroke redoKey=Globals.prefs.getKey("Redo");
  if (Globals.prefs.getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS)) {
    Keymap keymap2=getKeymap();
    KeyStroke[] keys=keymap2.getBoundKeyStrokes();
    int i=0;
    while ((i < keys.length) && (!keys[i].equals(redoKey))) {
      i++;
    }
    if (i < keys.length) {
      bind=false;
    }
  }
  if (bind) {
    getInputMap().put(redoKey,"Redo");
  }
}
