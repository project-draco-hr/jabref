{
  EntryTypes bibtexentrytypes=new EntryTypes();
  assertEquals(BibtexEntryTypes.ARTICLE,bibtexentrytypes.getType("article",BibDatabaseMode.BIBTEX).get());
  assertEquals(Optional.empty(),bibtexentrytypes.getType("aaaaarticle",BibDatabaseMode.BIBTEX));
  assertEquals(Optional.empty(),bibtexentrytypes.getStandardType("aaaaarticle",BibDatabaseMode.BIBTEX));
  assertEquals(19,bibtexentrytypes.getAllValues(BibDatabaseMode.BIBTEX).size());
  assertEquals(19,bibtexentrytypes.getAllTypes(BibDatabaseMode.BIBTEX).size());
  ArrayList<String> requiredFields=new ArrayList<>(BibtexEntryTypes.ARTICLE.getRequiredFields());
  requiredFields.add("specialfield");
  CustomEntryType newArticle=new CustomEntryType("article",requiredFields,BibtexEntryTypes.ARTICLE.getOptionalFields());
  bibtexentrytypes.addOrModifyCustomEntryType(newArticle);
  assertNotEquals(BibtexEntryTypes.ARTICLE,bibtexentrytypes.getType("article",BibDatabaseMode.BIBTEX).get());
  bibtexentrytypes.removeType("article",BibDatabaseMode.BIBTEX);
  assertEquals(BibtexEntryTypes.ARTICLE,bibtexentrytypes.getType("article",BibDatabaseMode.BIBTEX).get());
}
