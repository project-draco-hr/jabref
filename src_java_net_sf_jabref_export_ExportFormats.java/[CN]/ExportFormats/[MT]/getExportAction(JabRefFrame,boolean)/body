{
class ExportAction extends MnemonicAwareAction {
    private static final long serialVersionUID=639463604530580554L;
    private JabRefFrame frame;
    private boolean selectedOnly;
    public ExportAction(    JabRefFrame frame,    boolean selectedOnly){
      this.frame=frame;
      this.selectedOnly=selectedOnly;
      putValue(NAME,selectedOnly ? "Export selected entries" : "Export");
    }
    public void actionPerformed(    ActionEvent e){
      ExportFormats.initAllExports();
      JFileChooser fc=ExportFormats.createExportFileChooser(Globals.prefs.get("exportWorkingDirectory"));
      fc.showSaveDialog(frame);
      File file=fc.getSelectedFile();
      if (file == null)       return;
      FileFilter ff=fc.getFileFilter();
      if (ff instanceof ExportFileFilter) {
        try {
          ExportFileFilter eff=(ExportFileFilter)ff;
          String path=file.getPath();
          if (!path.endsWith(eff.getExtension()))           path=path + eff.getExtension();
          file=new File(path);
          if (file.exists()) {
            if (JOptionPane.showConfirmDialog(frame,"'" + file.getName() + "' "+ Globals.lang("exists. Overwrite file?"),Globals.lang("Export"),JOptionPane.OK_CANCEL_OPTION) != JOptionPane.OK_OPTION)             return;
          }
          IExportFormat format=eff.getExportFormat();
          Set<String> entryIds=null;
          if (selectedOnly) {
            BibtexEntry[] selected=frame.basePanel().getSelectedEntries();
            entryIds=new HashSet<String>();
            for (int i=0; i < selected.length; i++) {
              BibtexEntry bibtexEntry=selected[i];
              entryIds.add(bibtexEntry.getId());
            }
          }
          Globals.prefs.put("lastUsedExport",format.getConsoleName());
          Globals.prefs.put("exportWorkingDirectory",file.getParent());
          format.performExport(frame.basePanel().database(),file.getPath(),frame.basePanel().getEncoding(),entryIds);
        }
 catch (        Exception ex) {
          ex.printStackTrace();
          frame.output(Globals.lang("Could not save file") + " - " + ex.getMessage());
          JOptionPane.showMessageDialog(frame,Globals.lang("Could not save file") + ".\n" + ex.getMessage(),Globals.lang("Save database"),JOptionPane.ERROR_MESSAGE);
        }
      }
    }
  }
  return new ExportAction(frame,selectedOnly);
}
