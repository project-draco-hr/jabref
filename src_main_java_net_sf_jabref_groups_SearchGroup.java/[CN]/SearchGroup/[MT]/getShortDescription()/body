{
  StringBuffer sb=new StringBuffer();
  sb.append("<b>");
  if (Globals.prefs.getBoolean("groupShowDynamic"))   sb.append("<i>").append(Util.quoteForHTML(getName())).append("</i>");
 else   sb.append(Util.quoteForHTML(getName()));
  sb.append("</b> - ");
  sb.append(Globals.lang("dynamic group"));
  sb.append(" (");
  sb.append(Globals.lang("search expression"));
  sb.append(" <b>").append(Util.quoteForHTML(m_searchExpression)).append("</b>)");
switch (getHierarchicalContext()) {
case AbstractGroup.INCLUDING:
    sb.append(", ").append(Globals.lang("includes subgroups"));
  break;
case AbstractGroup.REFINING:
sb.append(", ").append(Globals.lang("refines supergroup"));
break;
default :
break;
}
return sb.toString();
}
