{
  boolean res=false;
  this.query=query;
  shouldContinue=true;
  try {
    String address=makeSearchURL();
    URL url=new URL(address);
    String page=readFromURL(url);
    String[] lines=page.split("\n");
    List<String> bibtexUrlList=new ArrayList<String>();
    for (    final String line : lines) {
      if (line.startsWith("\"url\"")) {
        String addr=line.replace("\"url\":\"","");
        addr=addr.substring(0,addr.length() - 2);
        bibtexUrlList.add(addr);
      }
    }
    int count=1;
    for (    String urlStr : bibtexUrlList) {
      if (!shouldContinue) {
        break;
      }
      final URL bibUrl=new URL(urlStr);
      final String bibtexHTMLPage=readFromURL(bibUrl);
      final String[] htmlLines=bibtexHTMLPage.split("\n");
      for (      final String line : htmlLines) {
        if (line.contains("biburl")) {
          int sidx=line.indexOf("{");
          int eidx=line.indexOf("}");
          String bibtexUrl=line.substring(sidx + 1,eidx);
          bibtexUrl=bibtexUrl.replace("dblp.uni-trier.de","www.dblp.org");
          final URL bibFileURL=new URL(bibtexUrl);
          final String bibtexPage=readFromURL(bibFileURL);
          BibtexEntry bibtexEntry=BibtexParser.singleFromString(bibtexPage);
          inspector.addEntry(bibtexEntry);
          inspector.setProgress(count,bibtexUrlList.size());
          count++;
        }
      }
    }
    res=true;
  }
 catch (  IOException e) {
    e.printStackTrace();
    status.showMessage(e.getMessage());
  }
  return res;
}
