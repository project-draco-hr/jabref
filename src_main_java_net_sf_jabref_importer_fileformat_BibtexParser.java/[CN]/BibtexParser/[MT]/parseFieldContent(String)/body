{
  skipWhitespace();
  StringBuilder value=new StringBuilder();
  int character;
  while (((character=peek()) != ',') && (character != '}') && (character != ')')) {
    if (eof) {
      throw new IOException("Error in line " + line + ": EOF in mid-string");
    }
    if (character == '"') {
      StringBuffer text=parseQuotedFieldExactly();
      value.append(fieldContentParser.format(text,key));
    }
 else     if (character == '{') {
      StringBuffer text=parseBracketedTextExactly();
      value.append(fieldContentParser.format(text,key));
    }
 else     if (Character.isDigit((char)character)) {
      String number=parseTextToken();
      value.append(number);
    }
 else     if (character == '#') {
      consume('#');
    }
 else {
      String textToken=parseTextToken();
      if (textToken.isEmpty()) {
        throw new IOException("Error in line " + line + " or above: "+ "Empty text token.\nThis could be caused "+ "by a missing comma between two fields.");
      }
      value.append('#').append(textToken).append('#');
    }
    skipWhitespace();
  }
  return value.toString();
}
