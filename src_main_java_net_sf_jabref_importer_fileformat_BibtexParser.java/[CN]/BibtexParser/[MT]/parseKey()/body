{
  StringBuilder token=new StringBuilder(20);
  while (true) {
    int character=read();
    if (character == -1) {
      eof=true;
      return token.toString();
    }
    if (!Character.isWhitespace((char)character) && (Character.isLetterOrDigit((char)character) || (character == ':') || ((character != '#') && (character != '{') && (character != '}')&& (character != '\uFFFD')&& (character != '~')&& (character != '\uFFFD')&& (character != ',')&& (character != '=')))) {
      token.append((char)character);
    }
 else {
      if (Character.isWhitespace((char)character)) {
        return token + fixKey();
      }
 else       if (character == ',' || character == '}') {
        unread(character);
        return token.toString();
      }
 else       if (character == '=') {
        return token.toString();
      }
 else {
        throw new IOException("Error in line " + line + ":"+ "Character '"+ (char)character+ "' is not "+ "allowed in bibtex keys.");
      }
    }
  }
}
