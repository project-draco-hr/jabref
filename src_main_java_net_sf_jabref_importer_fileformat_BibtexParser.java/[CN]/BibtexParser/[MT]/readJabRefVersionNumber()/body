{
  StringBuilder headerText=new StringBuilder();
  boolean keepOn=true;
  int piv=0;
  int character;
  while (keepOn) {
    character=peek();
    headerText.append((char)character);
    if ((piv == 0) && (Character.isWhitespace((char)character) || (character == '%'))) {
      read();
    }
 else     if (character == Globals.SIGNATURE.charAt(piv)) {
      piv++;
      read();
    }
 else {
      return null;
    }
    if (piv == Globals.SIGNATURE.length()) {
      keepOn=false;
      StringBuilder stringBuilder=new StringBuilder();
      while (((character=read()) != '\n') && (character != -1)) {
        stringBuilder.append((char)character);
      }
      String versionNumber=stringBuilder.toString().trim();
      if (Pattern.compile("[1-9]+\\.[1-9A-Za-z ]+\\.").matcher(versionNumber).matches()) {
        return versionNumber.substring(0,versionNumber.length() - 1);
      }
 else       if (Pattern.compile("[1-9]+\\.[1-9]\\.[1-9A-Za-z ]+\\.").matcher(versionNumber).matches()) {
        return versionNumber.substring(0,versionNumber.length() - 1);
      }
    }
  }
  return null;
}
