{
  _prefs.putBoolean("clearNoteURLifDOIexists",clearNoteURLifDOIexists.isSelected());
  _prefs.putBoolean("useDefaultLookAndFeel",!useDefault.isSelected());
  _prefs.put("lookAndFeel",className.getText());
  _prefs.putBoolean("useNativeFileDialogOnMac",useNativeFileDialogOnMac.isSelected());
  _prefs.putBoolean("filechooserDisableRename",filechooserDisableRename.isSelected());
  UIManager.put("FileChooser.readOnly",filechooserDisableRename.isSelected());
  _prefs.putBoolean("useIEEEAbrv",useIEEEAbrv.isSelected());
  if (useIEEEAbrv.isSelected())   Globals.journalAbbrev=new JournalAbbreviations("/resource/IEEEJournalList.txt");
  try {
    int port=Integer.parseInt(remoteServerPort.getText());
    if (port != oldPort) {
      _prefs.putInt("remoteServerPort",port);
    }
  }
 catch (  NumberFormatException ex) {
    ex.printStackTrace();
  }
  _prefs.putBoolean("useRemoteServer",useRemoteServer.isSelected());
  if (useRemoteServer.isSelected() && (JabRef.remoteListener == null)) {
    JabRef.remoteListener=RemoteListener.openRemoteListener(JabRef.singleton);
    if (JabRef.remoteListener != null) {
      JabRef.remoteListener.start();
    }
  }
 else   if (!useRemoteServer.isSelected() && (JabRef.remoteListener != null)) {
    JabRef.remoteListener.disable();
    JabRef.remoteListener=null;
  }
  _prefs.putBoolean("biblatexMode",biblatexMode.isSelected());
  if ((useDefault.isSelected() == oldUseDef) || !oldLnf.equals(className.getText())) {
    JOptionPane.showMessageDialog(null,Globals.lang("You have changed the look and feel setting. " + "You must restart JabRef for this to come into effect."),Globals.lang("Changed look and feel settings"),JOptionPane.WARNING_MESSAGE);
  }
  if (biblatexMode.isSelected() != oldBiblMode) {
    JOptionPane.showMessageDialog(null,Globals.lang("You have toggled the BibLaTeX mode. " + "You must restart JabRef for this change to come into effect."),Globals.lang("BibLaTeX mode"),JOptionPane.WARNING_MESSAGE);
  }
}
