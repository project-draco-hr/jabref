{
  Iterator targetIterator=targetDatabase.getKeySet().iterator();
  boolean abortOperation=false;
  String currentKey;
  BibtexEntry currentEntry;
  Enumeration newEntryEnum;
  Hashtable citationHashTable=new Hashtable();
  InitializeProgressBar initializeProgressBar=new InitializeProgressBar();
  SwingUtilities.invokeLater(initializeProgressBar);
  while (targetIterator.hasNext() && !abortOperation) {
    currentKey=(String)targetIterator.next();
    currentEntry=targetDatabase.getEntryById(currentKey);
    abortOperation=generateIdentifierList(currentEntry,citationHashTable);
  }
  if (citationHashTable.size() > 0) {
    UpdateProgressBarMaximum updateMaximum=new UpdateProgressBarMaximum(citationHashTable.size());
    SwingUtilities.invokeLater(updateMaximum);
  }
  generateCitationList(citationHashTable,newDatabase);
  newEntryEnum=citationHashTable.elements();
  while (newEntryEnum.hasMoreElements()) {
    try {
      BibtexEntry nextEntry=(BibtexEntry)newEntryEnum.nextElement();
      newDatabase.insertEntry(nextEntry);
    }
 catch (    KeyCollisionException ex) {
      ex.printStackTrace();
    }
  }
}
