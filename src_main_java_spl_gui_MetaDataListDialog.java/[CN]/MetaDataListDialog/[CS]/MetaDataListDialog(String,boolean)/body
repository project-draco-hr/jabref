{
  $$$setupUI$$$();
  this.showBlankButton=showBlankButton;
  this.thisDialog=this;
  this.fileName=fileName;
  this.labelLogo.addMouseListener(new LabelLinkListener(this.labelLogo,"www.mr-dlib.org"));
  this.setTitle(LocalizationSupport.message("Mr._dLib_Metadata_Entries_Associated_With_PDF_File"));
  this.tableMetadata.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  setContentPane(contentPane);
  pack();
  setModal(true);
  getRootPane().setDefaultButton(buttonOK);
  buttonOK.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      onOK();
    }
  }
);
  buttonCancel.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      onCancel();
    }
  }
);
  blankButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      onBlank();
    }
  }
);
  moreInformationButton.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      onInfo();
    }
  }
);
  setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
  addWindowListener(new WindowAdapter(){
    @Override public void windowClosing(    WindowEvent e){
      onCancel();
    }
  }
);
  contentPane.registerKeyboardAction(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      onCancel();
    }
  }
,KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  cardLayou.show(panelMetadata,"panelWait");
  this.moreInformationButton.setVisible(true);
  this.setSize(616,366);
}
