{
  List<LayoutEntry> tmpEntries=new ArrayList<>(parsedEntries.size());
  List<StringInt> blockEntries=null;
  LayoutEntry le;
  String blockStart=null;
  for (  StringInt parsedEntry : parsedEntries) {
switch (parsedEntry.i) {
case LayoutHelper.IS_LAYOUT_TEXT:
case LayoutHelper.IS_SIMPLE_FIELD:
case LayoutHelper.IS_OPTION_FIELD:
      break;
case LayoutHelper.IS_FIELD_START:
case LayoutHelper.IS_GROUP_START:
    blockEntries=new ArrayList<>();
  blockStart=parsedEntry.s;
break;
case LayoutHelper.IS_FIELD_END:
case LayoutHelper.IS_GROUP_END:
if ((blockStart != null) && (blockEntries != null)) {
if (blockStart.equals(parsedEntry.s)) {
  blockEntries.add(parsedEntry);
  le=new LayoutEntry(blockEntries,parsedEntry.i == LayoutHelper.IS_FIELD_END ? LayoutHelper.IS_FIELD_START : LayoutHelper.IS_GROUP_START,prefs,repositoryLoader);
  tmpEntries.add(le);
  blockEntries=null;
}
 else {
  LOGGER.debug(blockStart + '\n' + parsedEntry.s);
  LOGGER.warn("Nested field/group entries are not implemented!");
  Thread.dumpStack();
}
}
break;
default :
break;
}
if (blockEntries == null) {
tmpEntries.add(new LayoutEntry(parsedEntry,prefs,repositoryLoader));
}
 else {
blockEntries.add(parsedEntry);
}
}
layoutEntries=new ArrayList<>(tmpEntries);
for (LayoutEntry layoutEntry : layoutEntries) {
missingFormatters.addAll(layoutEntry.getInvalidFormatters());
}
}
