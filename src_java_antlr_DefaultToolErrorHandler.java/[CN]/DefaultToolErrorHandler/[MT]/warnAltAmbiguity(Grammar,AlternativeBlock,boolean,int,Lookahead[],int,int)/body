{
  final StringBuffer line=new StringBuffer(100);
  if (blk instanceof RuleBlock && ((RuleBlock)blk).isLexerAutoGenRule()) {
    Alternative ai=blk.getAlternativeAt(altIdx1);
    Alternative aj=blk.getAlternativeAt(altIdx2);
    RuleRefElement rri=(RuleRefElement)ai.head;
    RuleRefElement rrj=(RuleRefElement)aj.head;
    String ri=CodeGenerator.reverseLexerRuleName(rri.targetRule);
    String rj=CodeGenerator.reverseLexerRuleName(rrj.targetRule);
    line.append("lexical nondeterminism between rules ");
    line.append(ri).append(" and ").append(rj).append(" upon");
  }
 else {
    if (lexicalAnalysis) {
      line.append("lexical ");
    }
    line.append("nondeterminism between alts ");
    line.append(altIdx1 + 1).append(" and ");
    line.append(altIdx2 + 1).append(" of block upon");
  }
  final String[] output=new String[depth + 1];
  ;
  output[0]=line.toString();
  dumpSets(output,1,grammar,lexicalAnalysis,depth,sets);
  antlrTool.warning(output,grammar.getFilename(),blk.getLine(),blk.getColumn());
}
