{
  DOI doi;
  try {
    doi=new DOI(doiStr);
  }
 catch (  IllegalArgumentException e) {
    status.showMessage(Localization.lang("Invalid DOI: '%0'.",doiStr),Localization.lang("Get BibTeX entry from DOI"),JOptionPane.INFORMATION_MESSAGE);
    return null;
  }
  URL url;
  try {
    Optional<URI> uri=doi.getURI();
    if (!uri.isPresent()) {
      return null;
    }
 else {
      url=uri.get().toURL();
    }
  }
 catch (  MalformedURLException e) {
    e.printStackTrace();
    return null;
  }
  URLConnection conn;
  try {
    conn=url.openConnection();
  }
 catch (  IOException e) {
    e.printStackTrace();
    return null;
  }
  conn.setRequestProperty("Accept","application/x-bibtex");
  String bibtexString;
  try {
    bibtexString=Util.getResultsWithEncoding(conn,StandardCharsets.UTF_8);
  }
 catch (  FileNotFoundException e) {
    if (status != null) {
      status.showMessage(Localization.lang("Unknown DOI: '%0'.",doi.getDOI()),Localization.lang("Get BibTeX entry from DOI"),JOptionPane.INFORMATION_MESSAGE);
    }
    return null;
  }
catch (  IOException e) {
    e.printStackTrace();
    return null;
  }
  bibtexString=bibtexString.replaceAll("(pages=\\{[0-9]+)\u2013([0-9]+\\})","$1--$2");
  BibEntry entry=BibtexParser.singleFromString(bibtexString);
  if (entry != null) {
    String title=entry.getField("title");
    if (title != null) {
      if (Globals.prefs.getBoolean(JabRefPreferences.USE_UNIT_FORMATTER_ON_SEARCH)) {
        title=unitFormatter.format(title);
      }
      if (Globals.prefs.getBoolean(JabRefPreferences.USE_CASE_KEEPER_ON_SEARCH)) {
        title=caseKeeper.format(title);
      }
      entry.setField("title",title);
    }
  }
  return entry;
}
