{
  assert(lastCompletions != null);
  assert(!lastCompletions.isEmpty());
  lastShownCompletion+=increment;
  if (lastShownCompletion >= lastCompletions.size()) {
    lastShownCompletion=0;
  }
 else   if (lastShownCompletion < 0) {
    lastShownCompletion=lastCompletions.size() - 1;
  }
  String sno=lastCompletions.get(lastShownCompletion);
  toSetIn=sno.substring(lastBeginning.length() - 1);
  StringBuilder alltext=new StringBuilder(comp.getText());
  int oldSelectionStart=comp.getSelectionStart();
  int oldSelectionEnd=comp.getSelectionEnd();
  int startPos=comp.getSelectionStart() - lastBeginning.length();
  alltext.delete(startPos,oldSelectionStart);
  alltext.insert(startPos,sno.subSequence(0,lastBeginning.length()));
  alltext.delete(oldSelectionStart,oldSelectionEnd);
  alltext.insert(oldSelectionStart,toSetIn.substring(1));
  LOGGER.debug(alltext.toString());
  comp.setText(alltext.toString());
  comp.select(oldSelectionStart,(oldSelectionStart + toSetIn.length()) - 1);
  lastCaretPosition=comp.getCaretPosition();
  LOGGER.debug("ToSetIn: '" + toSetIn + "'");
}
