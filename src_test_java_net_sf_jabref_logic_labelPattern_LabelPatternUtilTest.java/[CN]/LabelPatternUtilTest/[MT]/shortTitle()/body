{
  final int count=3;
  Assert.assertEquals("applicationmigrationeffort",LabelPatternUtil.getTitleWords(count,TITLE_STRING_ALL_LOWER_FOUR_SMALL_WORDS_ONE_EN_DASH));
  Assert.assertEquals("BPELconformanceopen",LabelPatternUtil.getTitleWords(count,TITLE_STRING_ALL_LOWER_FIRST_WORD_IN_BRACKETS_TWO_SMALL_WORDS_SMALL_WORD_AFTER_COLON));
  Assert.assertEquals("ProcessViewingPatterns",LabelPatternUtil.getTitleWords(count,TITLE_STRING_CASED));
  Assert.assertEquals("BPMNConformanceOpen",LabelPatternUtil.getTitleWords(count,TITLE_STRING_CASED_ONE_UPPER_WORD_ONE_SMALL_WORD));
  Assert.assertEquals("DifferenceGraphBased",LabelPatternUtil.getTitleWords(count,TITLE_STRING_CASED_TWO_SMALL_WORDS_SMALL_WORD_AT_THE_BEGINNING));
  Assert.assertEquals("CloudComputingNext",LabelPatternUtil.getTitleWords(count,TITLE_STRING_CASED_TWO_SMALL_WORDS_SMALL_WORD_AFTER_COLON));
  Assert.assertEquals("TowardsChoreographybased",LabelPatternUtil.getTitleWords(count,TITLE_STRING_CASED_TWO_SMALL_WORDS_ONE_CONNECTED_WORD));
  Assert.assertEquals("MeasurementDesignTime",LabelPatternUtil.getTitleWords(count,TITLE_STRING_CASED_FOUR_SMALL_WORDS_TWO_CONNECTED_WORDS));
}
