{
  Assert.assertEquals("NMEB",LabelPatternUtil.authIniN(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_5,4));
  Assert.assertEquals("NMEB",LabelPatternUtil.authIniN(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_4,4));
  Assert.assertEquals("NeME",LabelPatternUtil.authIniN(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_3,4));
  Assert.assertEquals("NeMa",LabelPatternUtil.authIniN(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_2,4));
  Assert.assertEquals("Newt",LabelPatternUtil.authIniN(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1,4));
  Assert.assertEquals("","");
  Assert.assertEquals("N",LabelPatternUtil.authIniN(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1,1));
  Assert.assertEquals("",LabelPatternUtil.authIniN(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1,0));
  Assert.assertEquals("",LabelPatternUtil.authIniN(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1,-1));
  Assert.assertEquals("Newton",LabelPatternUtil.authIniN(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1,6));
  Assert.assertEquals("Newton",LabelPatternUtil.authIniN(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1,7));
  try {
    LabelPatternUtil.authIniN(null,3);
    Assert.fail();
  }
 catch (  NullPointerException ignored) {
  }
}
