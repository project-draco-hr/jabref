def handleJavaCode(filename, lines, keyList, notTermList):
    reOnlyString = '"((\\\\"|[^"])*)"[^"]*'
    patt = re.compile(('Localization\\s*\\.\\s*lang\\s*\\(\\s*' + reOnlyString))
    pattOnlyString = re.compile(reOnlyString)
    patt2 = re.compile('Localization\\s*\\.\\s*lang\\s*\\(([^)])*$')
    pattPlus = re.compile('^\\s*\\+')
    eList = list(enumerate(lines.split('\n')))
    i = 0
    while (i < len(eList)):
        (linenum, curline) = eList[i]
        if (curline.find('http://') < 0):
            curline = re.sub('//.*', '', curline)
        while (curline != ''):
            result = patt.search(curline)
            result2 = patt2.search(curline)
            found = ''
            if (result2 and (curline.find('",') < 0)):
                if result:
                    curText = result.group(1)
                    searchForPlus = True
                else:
                    curText = ''
                    searchForPlus = False
                origI = i
                while ((i + 1) < len(eList)):
                    (linenum2, curline2) = eList[(i + 1)]
                    if ((not searchForPlus) or pattPlus.search(curline2)):
                        searchForPlus = True
                        i = (i + 1)
                        linenum = linenum2
                        curline = curline2
                        result = pattOnlyString.search(curline2)
                        if result:
                            curText = (curText + result.group(1))
                            if (curline2.count('"') > 2):
                                break
                            if (curline2.find('",') > 0):
                                break
                            if curline2.endswith(')'):
                                break
                        else:
                            break
                    else:
                        break
                if (origI == i):
                    print ('%s:%d: Not terminated: %s' % (filename, (linenum + 1), curline))
                else:
                    found = curText
            if (result or (found != '')):
                if (found == ''):
                    found = result.group(1)
                found = found.replace(' ', '_')
                found = found.replace('=', '\\=').replace(':', '\\:')
                found = found.replace('\\"', '"')
                if ((found != '') and (found not in keyList)):
                    keyList.append(found)
                    keyFiles[found] = (filename, linenum)
            if result:
                lastPos = result.span()[1]
                lastPos = (lastPos - 14)
                if (len(curline) <= lastPos):
                    curline = ''
                else:
                    curline = curline[lastPos:]
            else:
                curline = ''
        i = (i + 1)
