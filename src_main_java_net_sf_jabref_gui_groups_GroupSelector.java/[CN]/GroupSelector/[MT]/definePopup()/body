{
  groupsContextMenu.add(editGroupPopupAction);
  groupsContextMenu.add(addGroupPopupAction);
  groupsContextMenu.add(addSubgroupPopupAction);
  groupsContextMenu.addSeparator();
  groupsContextMenu.add(removeGroupAndSubgroupsPopupAction);
  groupsContextMenu.add(removeGroupKeepSubgroupsPopupAction);
  groupsContextMenu.add(removeSubgroupsPopupAction);
  groupsContextMenu.addSeparator();
  groupsContextMenu.add(expandSubtreePopupAction);
  groupsContextMenu.add(collapseSubtreePopupAction);
  groupsContextMenu.addSeparator();
  groupsContextMenu.add(moveSubmenu);
  sortSubmenu.add(sortDirectSubgroupsPopupAction);
  sortSubmenu.add(sortAllSubgroupsPopupAction);
  groupsContextMenu.add(sortSubmenu);
  moveSubmenu.add(moveNodeUpPopupAction);
  moveSubmenu.add(moveNodeDownPopupAction);
  moveSubmenu.add(moveNodeLeftPopupAction);
  moveSubmenu.add(moveNodeRightPopupAction);
  groupsContextMenu.addSeparator();
  groupsContextMenu.add(addToGroup);
  groupsContextMenu.add(moveToGroup);
  groupsContextMenu.add(removeFromGroup);
  groupsTree.addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    MouseEvent e){
      if (e.isPopupTrigger()) {
        showPopup(e);
      }
    }
    @Override public void mouseReleased(    MouseEvent e){
      if (e.isPopupTrigger()) {
        showPopup(e);
      }
    }
    @Override public void mouseClicked(    MouseEvent e){
      TreePath path=groupsTree.getPathForLocation(e.getPoint().x,e.getPoint().y);
      if (path == null) {
        return;
      }
      GroupTreeNode node=(GroupTreeNode)path.getLastPathComponent();
      if (node.isRoot()) {
        return;
      }
      if ((e.getClickCount() == 2) && (e.getButton() == MouseEvent.BUTTON1)) {
        editGroupAction.actionPerformed(null);
      }
 else       if ((e.getClickCount() == 1) && (e.getButton() == MouseEvent.BUTTON1)) {
        annotationEvent(node);
      }
    }
  }
);
  groupsContextMenu.addPopupMenuListener(new PopupMenuListener(){
    @Override public void popupMenuWillBecomeVisible(    PopupMenuEvent e){
    }
    @Override public void popupMenuWillBecomeInvisible(    PopupMenuEvent e){
      groupsTree.setHighlightBorderCell(null);
    }
    @Override public void popupMenuCanceled(    PopupMenuEvent e){
      groupsTree.setHighlightBorderCell(null);
    }
  }
);
}
