{
synchronized (this) {
    if (textComponent != null) {
      textComponent.getDocument().removeDocumentListener(documentListener);
      textComponent=null;
      documentListener=null;
    }
    if (event.getSource() instanceof JTextComponent) {
      textComponent=(JTextComponent)event.getSource();
      documentListener=new DocumentListener(){
        private void fire(){
          if (textComponent.isFocusOwner()) {
            entryEditorTab.markIfModified((FieldEditor)textComponent);
          }
        }
        @Override public void changedUpdate(        DocumentEvent e){
          fire();
        }
        @Override public void insertUpdate(        DocumentEvent e){
          fire();
        }
        @Override public void removeUpdate(        DocumentEvent e){
          fire();
        }
      }
;
      textComponent.getDocument().addDocumentListener(documentListener);
      Component component=textComponent.getParent().getParent();
      if (component instanceof JScrollPane) {
        JScrollPane scrollPane=(JScrollPane)component;
        Component scrollPaneParent=scrollPane.getParent();
        if (scrollPaneParent instanceof JPanel) {
          JPanel panel=(JPanel)scrollPaneParent;
          Rectangle bounds=scrollPane.getBounds();
          panel.scrollRectToVisible(bounds);
        }
      }
    }
  }
  entryEditorTab.setActive((FieldEditor)event.getSource());
}
