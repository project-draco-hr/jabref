{
  BibtexEntry one=new BibtexEntry(IdGenerator.next(),BibtexEntryTypes.ARTICLE);
  BibtexEntry two=new BibtexEntry(IdGenerator.next(),BibtexEntryTypes.ARTICLE);
  one.setField("author","Billy Bob");
  two.setField("author","Billy Bob");
  Assert.assertTrue(DuplicateCheck.isDuplicate(one,two));
  two.setField("author","James Joyce");
  Assert.assertFalse(DuplicateCheck.isDuplicate(one,two));
  two.setField("author","Billy Bob");
  two.setType(BibtexEntryTypes.BOOK);
  Assert.assertFalse(DuplicateCheck.isDuplicate(one,two));
  two.setType(BibtexEntryTypes.ARTICLE);
  one.setField("year","2005");
  two.setField("year","2005");
  one.setField("title","A title");
  two.setField("title","A title");
  one.setField("journal","A");
  two.setField("journal","A");
  Assert.assertTrue(DuplicateCheck.isDuplicate(one,two));
  Assert.assertEquals(1.01,DuplicateCheck.compareEntriesStrictly(one,two),0.01);
  two.setField("journal","B");
  Assert.assertTrue(DuplicateCheck.isDuplicate(one,two));
  Assert.assertEquals(0.75,DuplicateCheck.compareEntriesStrictly(one,two),0.01);
  two.setField("journal","A");
  one.setField("number","1");
  two.setField("volume","21");
  one.setField("pages","334--337");
  two.setField("pages","334--337");
  Assert.assertTrue(DuplicateCheck.isDuplicate(one,two));
  two.setField("number","1");
  one.setField("volume","21");
  Assert.assertTrue(DuplicateCheck.isDuplicate(one,two));
  two.setField("volume","22");
  Assert.assertTrue(DuplicateCheck.isDuplicate(one,two));
  two.setField("journal","B");
  Assert.assertTrue(DuplicateCheck.isDuplicate(one,two));
  one.setField("journal","");
  two.setField("journal","");
  Assert.assertTrue(DuplicateCheck.isDuplicate(one,two));
  two.setField("title","Another title");
  Assert.assertFalse(DuplicateCheck.isDuplicate(one,two));
}
