{
  Token r=null;
  Token arg=null;
  Token ret=null;
  Token init=null;
  Token blk=null;
  IndexedVector o=null;
  String vis=null;
  boolean bang=false;
  String eg=null, thr="";
  try {
{
switch (LA(1)) {
case LITERAL_protected:
{
          match(LITERAL_protected);
          vis="protected";
          break;
        }
case LITERAL_private:
{
        match(LITERAL_private);
        vis="private";
        break;
      }
case LITERAL_public:
{
      match(LITERAL_public);
      vis="public";
      break;
    }
case ID:
{
    break;
  }
default :
{
  throw new NoViableAltException(LT(1),getFilename());
}
}
}
r=LT(1);
match(ID);
{
switch (LA(1)) {
case BANG:
{
match(BANG);
bang=true;
break;
}
case ACTION:
case OPTIONS_START:
case ARG_ACTION:
case LITERAL_returns:
case RULE_BLOCK:
case LITERAL_throws:
{
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
{
switch (LA(1)) {
case ARG_ACTION:
{
arg=LT(1);
match(ARG_ACTION);
break;
}
case ACTION:
case OPTIONS_START:
case LITERAL_returns:
case RULE_BLOCK:
case LITERAL_throws:
{
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
{
switch (LA(1)) {
case LITERAL_returns:
{
match(LITERAL_returns);
ret=LT(1);
match(ARG_ACTION);
break;
}
case ACTION:
case OPTIONS_START:
case RULE_BLOCK:
case LITERAL_throws:
{
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
{
switch (LA(1)) {
case LITERAL_throws:
{
thr=throwsSpec();
break;
}
case ACTION:
case OPTIONS_START:
case RULE_BLOCK:
{
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
{
switch (LA(1)) {
case OPTIONS_START:
{
o=optionSpec(null);
break;
}
case ACTION:
case RULE_BLOCK:
{
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
{
switch (LA(1)) {
case ACTION:
{
init=LT(1);
match(ACTION);
break;
}
case RULE_BLOCK:
{
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
blk=LT(1);
match(RULE_BLOCK);
eg=exceptionGroup();
String rtext=blk.getText() + eg;
Rule ppr=new Rule(r.getText(),rtext,o,gr);
ppr.setThrowsSpec(thr);
if (arg != null) {
ppr.setArgs(arg.getText());
}
if (ret != null) {
ppr.setReturnValue(ret.getText());
}
if (init != null) {
ppr.setInitAction(init.getText());
}
if (bang) {
ppr.setBang();
}
ppr.setVisibility(vis);
if (gr != null) {
gr.addRule(ppr);
}
}
 catch (RecognitionException ex) {
reportError(ex);
consume();
consumeUntil(_tokenSet_5);
}
}
