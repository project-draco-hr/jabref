{
  if (!(grammar instanceof LexerGrammar)) {
    tool.error("Character range only valid in lexer",grammar.getFilename(),t1.getLine());
    return;
  }
  int rangeMin=ANTLRLexer.tokenTypeForCharLiteral(t1.getText());
  int rangeMax=ANTLRLexer.tokenTypeForCharLiteral(t2.getText());
  if (rangeMax < rangeMin) {
    tool.error("Malformed range.",grammar.getFilename(),t1.getLine());
    return;
  }
  if (!((LexerGrammar)grammar).caseSensitive) {
    if (rangeMin < 128 && Character.toLowerCase((char)rangeMin) != (char)rangeMin) {
      tool.warning("Character literal must be lowercase when caseSensitive=false",grammar.getFilename(),t1.getLine());
    }
    if (rangeMax < 128 && Character.toLowerCase((char)rangeMax) != (char)rangeMax) {
      tool.warning("Character literal must be lowercase when caseSensitive=false",grammar.getFilename(),t2.getLine());
    }
  }
  super.refCharRange(t1,t2,label,autoGenType,lastInRule);
  CharRangeElement cr=new CharRangeElement((LexerGrammar)grammar,t1,t2,autoGenType);
  addElementToCurrentAlt(cr);
  labelElement(cr,label);
  String ignore=ruleBlock.getIgnoreRule();
  if (!lastInRule && ignore != null) {
    addElementToCurrentAlt(createOptionalRuleRef(ignore,t1.getLine()));
  }
}
