{
  final String fieldName=ed.getFieldName();
  String s=BibtexFields.getFieldExtras(string);
  if ((fieldName.equals(Globals.prefs.get("timeStampField"))) || ((s != null) && s.equals("datepicker"))) {
    ((JTextArea)ed).addMouseListener(new MouseAdapter(){
      @Override public void mouseClicked(      MouseEvent e){
        if (e.getClickCount() == 2) {
          String date=Util.easyDateFormat();
          ed.setText(date);
        }
      }
    }
);
    if ((s != null) && s.equals("datepicker")) {
      DatePickerButton datePicker=new DatePickerButton(ed);
      return datePicker.getDatePicker();
    }
  }
  if ((s != null) && s.equals("external")) {
    ((JComponent)ed).addMouseListener(new ExternalViewerListener());
    return null;
  }
 else   if ((s != null) && s.equals("journalNames")) {
    JPanel controls=new JPanel();
    controls.setLayout(new BorderLayout());
    if (panel.metaData.getData(Globals.SELECTOR_META_PREFIX + ed.getFieldName()) != null) {
      FieldContentSelector ws=new FieldContentSelector(frame,panel,frame,ed,panel.metaData,storeFieldAction,false,", ");
      contentSelectors.add(ws);
      controls.add(ws,BorderLayout.NORTH);
    }
    controls.add(JournalAbbreviations.getNameSwitcher(this,ed,panel.undoManager),BorderLayout.SOUTH);
    return controls;
  }
 else   if (panel.metaData.getData(Globals.SELECTOR_META_PREFIX + ed.getFieldName()) != null) {
    FieldContentSelector ws=new FieldContentSelector(frame,panel,frame,ed,panel.metaData,storeFieldAction,false,((ed.getFieldName().equals("author") || ed.getFieldName().equals("editor")) ? " and " : ", "));
    contentSelectors.add(ws);
    return ws;
  }
 else   if ((s != null) && s.equals("browse")) {
    JButton but=new JButton(Globals.lang("Browse"));
    ((JComponent)ed).addMouseListener(new ExternalViewerListener());
    but.addActionListener(new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        String dir=ed.getText();
        if (dir.equals("")) {
          dir=prefs.get(fieldName + Globals.FILETYPE_PREFS_EXT,"");
        }
        String chosenFile=FileDialogs.getNewFile(frame,new File(dir),"." + fieldName,JFileChooser.OPEN_DIALOG,false);
        if (chosenFile != null) {
          File newFile=new File(chosenFile);
          ed.setText(newFile.getPath());
          prefs.put(fieldName + Globals.FILETYPE_PREFS_EXT,newFile.getPath());
          updateField(ed);
        }
      }
    }
);
    return but;
  }
 else   if ((s != null) && (s.equals("browseDoc") || s.equals("browseDocZip"))) {
    final String ext="." + fieldName.toLowerCase();
    final OpenFileFilter off;
    if (s.equals("browseDocZip")) {
      off=new OpenFileFilter(new String[]{ext,ext + ".gz",ext + ".bz2"});
    }
 else {
      off=new OpenFileFilter(new String[]{ext});
    }
    return new ExternalFilePanel(frame,panel.metaData(),this,fieldName,off,ed);
  }
 else   if ((s != null) && s.equals("url")) {
    ((JComponent)ed).setDropTarget(new DropTarget((Component)ed,DnDConstants.ACTION_NONE,new SimpleUrlDragDrop(ed,storeFieldAction)));
    return null;
  }
 else   if ((s != null) && (s.equals("setOwner"))) {
    JButton button=new JButton(Globals.lang("Auto"));
    button.addActionListener(new ActionListener(){
      @Override public void actionPerformed(      ActionEvent actionEvent){
        ed.setText(Globals.prefs.get("defaultOwner"));
        storeFieldAction.actionPerformed(new ActionEvent(ed,0,""));
      }
    }
);
    return button;
  }
 else {
    return null;
  }
}
