{
  StringInt si;
  Vector<LayoutEntry> tmpEntries=new Vector<LayoutEntry>(parsedEntries.size());
  Vector<StringInt> blockEntries=null;
  LayoutEntry le;
  String blockStart=null;
  for (  StringInt parsedEntry : parsedEntries) {
    si=parsedEntry;
    if (si.i == LayoutHelper.IS_LAYOUT_TEXT || si.i == LayoutHelper.IS_SIMPLE_FIELD) {
    }
 else     if (si.i == LayoutHelper.IS_FIELD_START) {
      blockEntries=new Vector<StringInt>();
      blockStart=si.s;
    }
 else     if (si.i == LayoutHelper.IS_FIELD_END) {
      if ((blockStart != null) && (blockEntries != null)) {
        if (blockStart.equals(si.s)) {
          blockEntries.add(si);
          le=new LayoutEntry(blockEntries,classPrefix,LayoutHelper.IS_FIELD_START);
          tmpEntries.add(le);
          blockEntries=null;
        }
 else {
          System.out.println(blockStart + "\n" + si.s);
          System.out.println("Nested field entries are not implemented !!!");
          Thread.dumpStack();
        }
      }
    }
 else     if (si.i == LayoutHelper.IS_GROUP_START) {
      blockEntries=new Vector<StringInt>();
      blockStart=si.s;
    }
 else     if (si.i == LayoutHelper.IS_GROUP_END) {
      if ((blockStart != null) && (blockEntries != null)) {
        if (blockStart.equals(si.s)) {
          blockEntries.add(si);
          le=new LayoutEntry(blockEntries,classPrefix,LayoutHelper.IS_GROUP_START);
          tmpEntries.add(le);
          blockEntries=null;
        }
 else {
          System.out.println("Nested field entries are not implemented !!!");
          Thread.dumpStack();
        }
      }
    }
 else     if (si.i == LayoutHelper.IS_OPTION_FIELD) {
    }
    if (blockEntries == null) {
      tmpEntries.add(new LayoutEntry(si,classPrefix));
    }
 else {
      blockEntries.add(si);
    }
  }
  layoutEntries=new LayoutEntry[tmpEntries.size()];
  for (int i=0; i < tmpEntries.size(); i++) {
    layoutEntries[i]=tmpEntries.get(i);
    if (layoutEntries[i].isInvalidFormatter()) {
      missingFormatters.addAll(layoutEntries[i].getInvalidFormatters());
    }
  }
}
