{
  Matcher m=NameListNormalizer.lastFF.matcher(name);
  if (m.matches()) {
    String initials=m.group(2);
    StringBuilder sb=new StringBuilder(m.group(1));
    sb.append(", ");
    for (int i=0; i < initials.length(); i++) {
      sb.append(initials.charAt(i));
      sb.append('.');
      if (i < (initials.length() - 1)) {
        sb.append(' ');
      }
    }
    return sb.toString();
  }
  m=NameListNormalizer.lastFdotF.matcher(name);
  if (m.matches()) {
    String initials=m.group(2).replaceAll("[\\. ]+","");
    StringBuilder sb=new StringBuilder(m.group(1));
    sb.append(", ");
    for (int i=0; i < initials.length(); i++) {
      sb.append(initials.charAt(i));
      sb.append('.');
      if (i < (initials.length() - 1)) {
        sb.append(' ');
      }
    }
    return sb.toString();
  }
  m=NameListNormalizer.FFlast.matcher(name);
  if (m.matches()) {
    String initials=m.group(1);
    StringBuilder sb=new StringBuilder(m.group(2));
    sb.append(", ");
    for (int i=0; i < initials.length(); i++) {
      sb.append(initials.charAt(i));
      sb.append('.');
      if (i < (initials.length() - 1)) {
        sb.append(' ');
      }
    }
    return sb.toString();
  }
  m=NameListNormalizer.FdotFlast.matcher(name);
  if (m.matches()) {
    String initials=m.group(1).replaceAll("[\\. ]+","");
    StringBuilder sb=new StringBuilder(m.group(2));
    sb.append(", ");
    for (int i=0; i < initials.length(); i++) {
      sb.append(initials.charAt(i));
      sb.append('.');
      if (i < (initials.length() - 1)) {
        sb.append(' ');
      }
    }
    return sb.toString();
  }
  if (name.indexOf(',') >= 0) {
    int index=name.lastIndexOf(',');
    if (index == (name.length() - 1)) {
      name=name.substring(0,name.length() - 1);
    }
    StringBuilder sb=new StringBuilder(name.substring(0,index));
    sb.append(", ");
    String fName=name.substring(index + 1).trim();
    String[] fParts=fName.split(" ");
    if (fParts.length > 1) {
      for (int i=0; i < fParts.length; i++) {
        if (fParts[i].length() == 1) {
          sb.append(fParts[i]).append('.');
        }
 else {
          sb.append(fParts[i]);
        }
        if (i < (fParts.length - 1)) {
          sb.append(' ');
        }
      }
    }
 else {
      Matcher m2=NameListNormalizer.singleName.matcher(fParts[0]);
      if (m2.matches()) {
        sb.append(fParts[0]);
      }
 else {
        String initials=fParts[0].replaceAll("[\\.]+","");
        for (int i=0; i < initials.length(); i++) {
          sb.append(initials.charAt(i));
          sb.append('.');
          if (i < (initials.length() - 1)) {
            sb.append(' ');
          }
        }
      }
    }
    return sb.toString();
  }
 else {
    String[] parts=name.split(" +");
    boolean allNames=true;
    for (    String part : parts) {
      m=NameListNormalizer.singleName.matcher(part);
      if (!m.matches()) {
        allNames=false;
        break;
      }
    }
    if (allNames) {
      StringBuilder sb=new StringBuilder(parts[parts.length - 1]);
      if (parts.length > 1) {
        sb.append(',');
        for (int i=0; i < (parts.length - 1); i++) {
          sb.append(' ').append(parts[i]);
          if (parts[i].length() == 1) {
            sb.append('.');
          }
        }
      }
      return sb.toString();
    }
  }
  return name;
}
