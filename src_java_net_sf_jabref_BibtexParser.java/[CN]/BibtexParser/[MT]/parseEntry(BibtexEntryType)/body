{
  String id=Util.createId(tp,_db);
  BibtexEntry result=new BibtexEntry(id,tp);
  skipWhitespace();
  consume('{','(');
  skipWhitespace();
  String key=null;
  boolean doAgain=true;
  while (doAgain) {
    doAgain=false;
    try {
      if (key != null)       key=key + parseKey();
 else       key=parseKey();
    }
 catch (    NoLabelException ex) {
      char c=(char)peek();
      if (Character.isWhitespace(c) || (c == '{') || (c == '\"')) {
        String cont=parseFieldContent();
        result.setField(ex.getMessage().trim().toLowerCase(),cont);
      }
 else {
        if (key != null)         key=key + ex.getMessage() + "=";
 else         key=ex.getMessage() + "=";
        doAgain=true;
      }
    }
  }
  if (key.equals(""))   key=null;
  result.setField(GUIGlobals.KEY_FIELD,key);
  skipWhitespace();
  while (true) {
    int c=peek();
    if ((c == '}') || (c == ')')) {
      break;
    }
    consume(',');
    skipWhitespace();
    c=peek();
    if ((c == '}') || (c == ')')) {
      break;
    }
    parseField(result);
  }
  consume('}',')');
  return result;
}
