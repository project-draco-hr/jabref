{
  StringBuilder buffer=null;
  int c;
  boolean start=false;
  boolean inQuotes=false;
  boolean doneWithOptions=false;
  String option=null;
  String tmp;
  while (!endOfFile) {
    c=read();
    if (c == -1) {
      endOfFile=true;
      if (buffer != null) {
        if (option == null) {
          tmp=buffer.toString();
        }
 else {
          tmp=buffer.toString() + '\n' + option;
        }
        parsedEntries.add(new StringInt(tmp,LayoutHelper.IS_OPTION_FIELD));
      }
      return;
    }
    if (!inQuotes && ((c == ']') || (c == '[') || (doneWithOptions && ((c == '{') || (c == '}'))))) {
      if ((c == ']') || (doneWithOptions && (c == '}'))) {
        if ((c == ']') && (buffer != null)) {
          option=buffer.toString();
          buffer=null;
          start=false;
          doneWithOptions=true;
        }
 else         if (c == '}') {
          String parameter=buffer == null ? " " : buffer.toString();
          if (option == null) {
            tmp=parameter;
          }
 else {
            tmp=parameter + '\n' + option;
          }
          parsedEntries.add(new StringInt(tmp,LayoutHelper.IS_OPTION_FIELD));
          return;
        }
      }
 else {
        start=true;
      }
    }
 else     if (c == '"') {
      inQuotes=!inQuotes;
      if (buffer == null) {
        buffer=new StringBuilder(100);
      }
      buffer.append('"');
    }
 else {
      if (buffer == null) {
        buffer=new StringBuilder(100);
      }
      if (start) {
        buffer.append((char)c);
      }
    }
  }
}
