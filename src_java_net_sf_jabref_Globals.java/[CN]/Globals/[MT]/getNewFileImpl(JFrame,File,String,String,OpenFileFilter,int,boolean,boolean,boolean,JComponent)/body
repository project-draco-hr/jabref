{
  if (prefs.getBoolean("useNativeFileDialogOnMac")) {
    return getNewFileForMac(owner,directory,extension,dialogType,updateWorkingDirectory,dirOnly,off);
  }
  JFileChooser fc;
  try {
    fc=new JabRefFileChooser(directory);
    if (accessory != null)     fc.setAccessory(accessory);
  }
 catch (  InternalError errl) {
    return getNewFileForMac(owner,directory,extension,dialogType,updateWorkingDirectory,dirOnly,off);
  }
  if (dirOnly) {
    fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
  }
  fc.setMultiSelectionEnabled(multipleSelection);
  fc.addChoosableFileFilter(off);
  fc.setDialogType(dialogType);
  int dialogResult;
  if (dialogType == JFileChooser.OPEN_DIALOG) {
    dialogResult=fc.showOpenDialog(owner);
  }
 else   if (dialogType == JFileChooser.SAVE_DIALOG) {
    dialogResult=fc.showSaveDialog(owner);
  }
 else {
    dialogResult=fc.showDialog(owner,description);
  }
  if (dialogResult != JFileChooser.APPROVE_OPTION)   return null;
  File selectedFile=fc.getSelectedFile();
  if (selectedFile == null) {
    return null;
  }
  if ((extension != null) && (dialogType == JFileChooser.SAVE_DIALOG) && (fc.getFileFilter() == off)&& !off.accept(selectedFile)) {
    selectedFile=new File(selectedFile.getPath() + extension.split("[, ]+",0)[0]);
  }
  if (updateWorkingDirectory) {
    prefs.put("workingDirectory",selectedFile.getPath());
  }
  if (!multipleSelection)   return selectedFile.getAbsolutePath();
 else {
    File[] files=fc.getSelectedFiles();
    String[] filenames=new String[files.length];
    for (int i=0; i < files.length; i++)     filenames[i]=files[i].getAbsolutePath();
    return filenames;
  }
}
