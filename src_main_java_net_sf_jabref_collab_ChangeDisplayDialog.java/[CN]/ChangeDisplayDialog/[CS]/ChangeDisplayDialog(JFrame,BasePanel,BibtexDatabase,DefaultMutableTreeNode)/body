{
  super(owner,Globals.lang("External changes"),true);
  this.secondary=secondary;
  if (secondary == null) {
    this.secondary=new BibtexDatabase();
  }
  tree=new JTree(root);
  tree.addTreeSelectionListener(this);
  JSplitPane pane=new JSplitPane();
  pane.setLeftComponent(new JScrollPane(tree));
  JPanel infoBorder=new JPanel();
  pane.setRightComponent(infoBorder);
  cb.setMargin(new Insets(2,2,2,2));
  cb.setEnabled(false);
  infoPanel.setLayout(new BorderLayout());
  infoBorder.setLayout(new BorderLayout());
  infoBorder.setBorder(BorderFactory.createEtchedBorder());
  infoBorder.add(infoPanel,BorderLayout.CENTER);
  setInfo(rootInfo);
  infoPanel.add(cb,BorderLayout.SOUTH);
  JButton ok=new JButton(Globals.lang("Ok"));
  JPanel buttonPanel=new JPanel();
  buttonPanel.add(ok);
  JButton cancel=new JButton(Globals.lang("Cancel"));
  buttonPanel.add(cancel);
  getContentPane().add(pane,BorderLayout.CENTER);
  getContentPane().add(buttonPanel,BorderLayout.SOUTH);
  cb.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      if (selected != null) {
        selected.setAccepted(cb.isSelected());
      }
    }
  }
);
  cancel.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      dispose();
    }
  }
);
  ok.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      NamedCompound ce=new NamedCompound(Globals.lang("Merged external changes"));
      @SuppressWarnings("unchecked") Enumeration<Change> enumer=root.children();
      boolean anyDisabled=false;
      while (enumer.hasMoreElements()) {
        Change c=enumer.nextElement();
        boolean allAccepted=false;
        if (c.isAcceptable() && c.isAccepted()) {
          allAccepted=c.makeChange(panel,ChangeDisplayDialog.this.secondary,ce);
        }
        if (!allAccepted) {
          anyDisabled=true;
        }
      }
      ce.end();
      panel.undoManager.addEdit(ce);
      if (anyDisabled) {
        panel.markBaseChanged();
      }
      panel.setUpdatedExternally(false);
      dispose();
      okPressed=true;
    }
  }
);
  pack();
}
