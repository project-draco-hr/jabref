{
{
    AuthorList al=AuthorList.getAuthorList("Charles Louis Xavier Joseph de la Vall{\\'e}e Poussin");
    Assert.assertEquals("de~laVall{\\'e}e~PoussinCharles Louis Xavier~Joseph",BibtexNameFormatter.formatName(al.getAuthor(0),"{vv}{ll}{jj}{ff}",new Warn(){
      @Override public void warn(      String s){
        Assert.fail(s);
      }
    }
));
  }
{
    AuthorList al=AuthorList.getAuthorList("Charles Louis Xavier Joseph de la Vall{\\'e}e Poussin");
    Assert.assertEquals("de~la Vall{\\'e}e~Poussin, C.~L. X.~J.",BibtexNameFormatter.formatName(al.getAuthor(0),"{vv~}{ll}{, jj}{, f.}",new Warn(){
      @Override public void warn(      String s){
        Assert.fail(s);
      }
    }
));
  }
{
    AuthorList al=AuthorList.getAuthorList("Charles Louis Xavier Joseph de la Vall{\\'e}e Poussin");
    Assert.assertEquals("de~la Vall{\\'e}e~Poussin, C.~L. X.~J?",BibtexNameFormatter.formatName(al.getAuthor(0),"{vv~}{ll}{, jj}{, f}?",new Warn(){
      @Override public void warn(      String s){
        Assert.fail(s);
      }
    }
));
  }
{
    AuthorList al=AuthorList.getAuthorList("Charles Louis Xavier Joseph de la Vall{\\'e}e Poussin");
    Assert.assertEquals("dlVP",BibtexNameFormatter.formatName(al.getAuthor(0),"{v{}}{l{}}",new Warn(){
      @Override public void warn(      String s){
        Assert.fail(s);
      }
    }
));
  }
  assertNameFormatA("Meyer, J?","Jonathan Meyer and Charles Louis Xavier Joseph de la Vall{\\'e}e Poussin");
  assertNameFormatB("J.~Meyer","Jonathan Meyer and Charles Louis Xavier Joseph de la Vall{\\'e}e Poussin");
  assertNameFormatC("Jonathan Meyer","Jonathan Meyer and Charles Louis Xavier Joseph de la Vall{\\'e}e Poussin");
  assertNameFormatA("Masterly, {\\'{E}}?","{\\'{E}}douard Masterly");
  assertNameFormatB("{\\'{E}}.~Masterly","{\\'{E}}douard Masterly");
  assertNameFormatC("{\\'{E}}douard Masterly","{\\'{E}}douard Masterly");
  assertNameFormatA("{\\\"{U}}nderwood, U?","Ulrich {\\\"{U}}nderwood and Ned {\\~N}et and Paul {\\={P}}ot");
  assertNameFormatB("U.~{\\\"{U}}nderwood","Ulrich {\\\"{U}}nderwood and Ned {\\~N}et and Paul {\\={P}}ot");
  assertNameFormatC("Ulrich {\\\"{U}}nderwood","Ulrich {\\\"{U}}nderwood and Ned {\\~N}et and Paul {\\={P}}ot");
  assertNameFormatA("Victor, P.~{\\'E}?","Paul {\\'E}mile Victor and and de la Cierva y Codorn{\\???\\i}u, Juan");
  assertNameFormatB("P.~{\\'E}. Victor","Paul {\\'E}mile Victor and and de la Cierva y Codorn{\\???\\i}u, Juan");
  assertNameFormatC("Paul~{\\'E}mile Victor","Paul {\\'E}mile Victor and and de la Cierva y Codorn{\\???\\i}u, Juan");
}
