{
  ParserResult result=BibtexParser.parse(new StringReader("@article{canh05," + "  author = {Crowston, K. and Annabi, H.},\n" + "  title = {Title A}}\n"+ "@inProceedings{foo,"+ "  author={Norton Bar}}"),importFormatPreferences);
  Collection<BibEntry> c=result.getDatabase().getEntries();
  Assert.assertEquals(2,c.size());
  String xmp=XMPUtil.toXMP(c,null,xmpPreferences);
  Assert.assertTrue(xmp.indexOf("xpacket") > 0);
  Assert.assertTrue(xmp.indexOf("adobe:ns:meta") > 0);
  Assert.assertTrue((xmp.indexOf("<bibtex:bibtexkey>canh05</bibtex:bibtexkey>") > 0) || (xmp.indexOf("bibtex:bibtexkey=") > 0));
  Assert.assertTrue(xmp.indexOf("<rdf:li>Norton Bar</rdf:li>") > 0);
  Assert.assertTrue((xmp.indexOf("id='W5M0MpCehiHzreSzNTczkc9d'?>") > 0) || (xmp.indexOf("id=\"W5M0MpCehiHzreSzNTczkc9d\"?>") > 0));
  Assert.assertTrue((xmp.indexOf("xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'") > 0) || (xmp.indexOf("xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"") > 0));
  Assert.assertTrue(xmp.indexOf("<rdf:Description") > 0);
  Assert.assertTrue((xmp.indexOf("<?xpacket end='w'?>") > 0) || (xmp.indexOf("<?xpacket end=\"w\"?>") > 0));
  writeManually(pdfFile,xmp);
  List<BibEntry> l=XMPUtil.readXMP(pdfFile,xmpPreferences);
  Assert.assertEquals(2,l.size());
  BibEntry a=l.get(0);
  BibEntry b=l.get(1);
  if (a.getCiteKeyOptional().get().equals("foo")) {
    BibEntry tmp=a;
    a=b;
    b=tmp;
  }
  Assert.assertEquals(Optional.of("canh05"),a.getCiteKeyOptional());
  Assert.assertEquals("K. Crowston and H. Annabi",a.getField("author").get());
  Assert.assertEquals("Title A",a.getField("title").get());
  Assert.assertEquals("article",a.getType());
  Assert.assertEquals(Optional.of("foo"),b.getCiteKeyOptional());
  Assert.assertEquals("Norton Bar",b.getField("author").get());
  Assert.assertEquals("inproceedings",b.getType());
}
