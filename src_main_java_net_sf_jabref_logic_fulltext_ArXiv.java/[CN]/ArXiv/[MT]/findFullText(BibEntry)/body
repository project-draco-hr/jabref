{
  Objects.requireNonNull(entry);
  Optional<URL> pdfLink=Optional.empty();
  Optional<DOI> doi=DOI.build(entry.getField("doi"));
  String eprint=entry.getField("eprint");
  if (doi.isPresent()) {
    String doiString=doi.get().getDOI();
    try {
      Document doc=queryApi(doiString);
      NodeList nodes=doc.getElementsByTagName("arxiv:doi");
      Node doiTag=nodes.item(0);
      if ((doiTag != null) && doiTag.getTextContent().equals(doiString)) {
        NodeList links=doc.getElementsByTagName("link");
        for (int i=0; i < links.getLength(); i++) {
          Node link=links.item(i);
          NamedNodeMap attr=link.getAttributes();
          String rel=attr.getNamedItem("rel").getNodeValue();
          String href=attr.getNamedItem("href").getNodeValue();
          if ("related".equals(rel) && "pdf".equals(attr.getNamedItem("title").getNodeValue())) {
            pdfLink=Optional.of(new URL(href));
            LOGGER.info("Fulltext PDF found @ arXiv.");
          }
        }
      }
    }
 catch (    UnirestException|ParserConfigurationException|SAXException|IOException e) {
      LOGGER.warn("arXiv DOI API request failed",e);
    }
  }
 else   if (eprint != null && !eprint.isEmpty()) {
    try {
      Document doc=queryApi("id:" + eprint);
      NodeList links=doc.getElementsByTagName("link");
      for (int i=0; i < links.getLength(); i++) {
        Node link=links.item(i);
        NamedNodeMap attr=link.getAttributes();
        String rel=attr.getNamedItem("rel").getNodeValue();
        String href=attr.getNamedItem("href").getNodeValue();
        if ("related".equals(rel) && "pdf".equals(attr.getNamedItem("title").getNodeValue())) {
          pdfLink=Optional.of(new URL(href));
          LOGGER.info("Fulltext PDF found @ arXiv.");
        }
      }
    }
 catch (    UnirestException|ParserConfigurationException|SAXException|IOException e) {
      LOGGER.warn("arXiv eprint API request failed",e);
    }
  }
  return pdfLink;
}
