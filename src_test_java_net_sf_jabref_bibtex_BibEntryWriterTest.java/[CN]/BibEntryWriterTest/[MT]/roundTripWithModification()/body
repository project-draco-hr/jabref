{
  String bibtexEntry=Globals.NEWLINE + "@Article{test," + Globals.NEWLINE+ "  Author                   = {Foo Bar},"+ Globals.NEWLINE+ "  Journal                  = {International Journal of Something},"+ Globals.NEWLINE+ "  Note                     = {some note},"+ Globals.NEWLINE+ "  Number                   = {1}"+ Globals.NEWLINE+ "}";
  ParserResult result=BibtexParser.parse(new StringReader(bibtexEntry));
  Collection<BibEntry> entries=result.getDatabase().getEntries();
  Assert.assertEquals(1,entries.size());
  BibEntry entry=entries.iterator().next();
  Assert.assertEquals("test",entry.getCiteKey());
  Assert.assertEquals(5,entry.getFieldNames().size());
  entry.setField("author","BlaBla");
  Set<String> fields=entry.getFieldNames();
  Assert.assertTrue(fields.contains("author"));
  Assert.assertEquals("BlaBla",entry.getField("author"));
  StringWriter stringWriter=new StringWriter();
  writer.write(entry,stringWriter);
  String actual=stringWriter.toString();
  String expected=Globals.NEWLINE + Globals.NEWLINE + "@Article{test,"+ Globals.NEWLINE+ "  Author                   = {BlaBla},"+ Globals.NEWLINE+ "  Journal                  = {International Journal of Something},"+ Globals.NEWLINE+ "  Note                     = {some note},"+ Globals.NEWLINE+ "  Number                   = {1}"+ Globals.NEWLINE+ "}";
  assertEquals(expected,actual);
}
