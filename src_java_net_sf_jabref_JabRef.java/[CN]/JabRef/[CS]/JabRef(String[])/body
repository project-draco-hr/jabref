{
  singleton=this;
  System.setProperty("java.net.useSystemProxies","true");
  System.getProperties().put("proxySet","true");
  JabRefPreferences prefs=JabRefPreferences.getInstance();
  if (prefs.hasKey("deletePlugins") && (prefs.get("deletePlugins").length() > 0)) {
    String[] toDelete=prefs.getStringArray("deletePlugins");
    PluginInstaller.deletePluginsOnStartup(toDelete);
    prefs.put("deletePlugins","");
  }
  Globals.startBackgroundTasks();
  Globals.setupLogging();
  Globals.prefs=prefs;
  String langStr=prefs.get("language");
  String[] parts=langStr.split("_");
  String language, country;
  if (parts.length == 1) {
    language=langStr;
    country="";
  }
 else {
    language=parts[0];
    country=parts[1];
  }
  Globals.setLanguage(language,country);
  Globals.prefs.setLanguageDependentDefaultValues();
  BibtexFields.setNumericFieldsFromPrefs();
  Globals.importFormatReader.resetImportFormats();
  BibtexEntryType.loadCustomEntryTypes(prefs);
  ExportFormats.initAllExports();
  Globals.initializeJournalNames();
  if (Globals.prefs.getBoolean("useRemoteServer")) {
    remoteListener=RemoteListener.openRemoteListener(this);
    if (remoteListener == null) {
      if (RemoteListener.sendToActiveJabRefInstance(args)) {
        System.out.println(Globals.lang("Arguments passed on to running JabRef instance. Shutting down."));
        System.exit(0);
      }
    }
 else {
      remoteListener.start();
    }
  }
  String personalJournalList=prefs.get("personalJournalList");
  if (personalJournalList != null) {
    try {
      Globals.journalAbbrev.readJournalList(new File(personalJournalList));
    }
 catch (    FileNotFoundException e) {
      e.printStackTrace();
    }
  }
  openWindow(processArguments(args,true));
}
