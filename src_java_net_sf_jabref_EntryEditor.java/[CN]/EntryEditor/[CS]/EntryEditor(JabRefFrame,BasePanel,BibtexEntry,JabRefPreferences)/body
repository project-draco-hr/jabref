{
  frame=frame_;
  panel=panel_;
  entry=entry_;
  prefs=prefs_;
  type=entry.getType();
  entry.addPropertyChangeListener(this);
  helpAction=new HelpAction(frame.helpDiag,GUIGlobals.entryEditorHelp,"Help");
  closeAction=new CloseAction();
  copyKeyAction=new CopyKeyAction();
  generateKeyAction=new GenerateKeyAction(frame);
  storeFieldAction=new StoreFieldAction();
  BorderLayout bl=new BorderLayout();
  setLayout(bl);
  setupToolBar();
  setupFieldPanels(reqPanel,optPanel,genPanel,absPanel);
  setupSourcePanel();
  tabbed.addTab(Globals.lang("Required fields"),new ImageIcon(GUIGlobals.showReqIconFile),reqPanel.getPane(),Globals.lang("Show required fields"));
  if ((entry.getOptionalFields() != null) && (entry.getOptionalFields().length >= 1)) {
    tabbed.addTab(Globals.lang("Optional fields"),new ImageIcon(GUIGlobals.showOptIconFile),optPanel.getPane(),Globals.lang("Show optional fields"));
  }
  if ((entry.getGeneralFields() != null) && (entry.getGeneralFields().length >= 1)) {
    tabbed.addTab(Globals.lang("General fields"),new ImageIcon(GUIGlobals.showGenIconFile),genPanel.getPane(),Globals.lang("Show general fields"));
  }
  tabbed.addTab("Abstract",new ImageIcon(GUIGlobals.showAbsIconFile),absPanel.getPane(),Globals.lang("Show abstract"));
  tabbed.addTab(Globals.lang("BibTeX source"),new ImageIcon(GUIGlobals.sourceIconFile),srcPanel,Globals.lang("Show/edit BibTeX source"));
  sourceIndex=tabbed.getTabCount() - 1;
  tabbed.addChangeListener(new TabListener());
  add(tabbed,BorderLayout.CENTER);
  int prefHeight=(int)(Math.max(genW,Math.max(optW,reqW)) * GUIGlobals.FORM_HEIGHT[prefs.getInt("entryTypeFormHeightFactor")]);
  setSize(GUIGlobals.FORM_WIDTH[prefs.getInt("entryTypeFormWidth")],prefHeight);
  if (prefs.getBoolean("defaultShowSource")) {
    tabbed.setSelectedIndex(sourceIndex);
  }
}
