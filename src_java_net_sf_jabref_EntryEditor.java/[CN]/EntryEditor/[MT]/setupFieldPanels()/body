{
  tabbed.removeAll();
  tabs.clear();
  String[] fields=entry.getRequiredFields();
  List fieldList=null;
  if (fields != null)   fieldList=java.util.Arrays.asList(fields);
  reqPan=new EntryEditorTab(fieldList,this,true,Globals.lang("Required fields"));
  tabbed.addTab(Globals.lang("Required fields"),new ImageIcon(GUIGlobals.showReqIconFile),reqPan.getPane(),Globals.lang("Show required fields"));
  tabs.add(reqPan);
  if ((entry.getOptionalFields() != null) && (entry.getOptionalFields().length >= 1)) {
    optPan=new EntryEditorTab(java.util.Arrays.asList(entry.getOptionalFields()),this,false,Globals.lang("Optional fields"));
    tabbed.addTab(Globals.lang("Optional fields"),new ImageIcon(GUIGlobals.showOptIconFile),optPan.getPane(),Globals.lang("Show optional fields"));
    tabs.add(optPan);
  }
  EntryEditorTabList tabList=Globals.prefs.getEntryEditorTabList();
  for (int i=0; i < tabList.getTabCount(); i++) {
    EntryEditorTab newTab=new EntryEditorTab(tabList.getTabFields(i),this,false,tabList.getTabName(i));
    tabbed.addTab(tabList.getTabName(i),new ImageIcon(GUIGlobals.showGenIconFile),newTab.getPane());
    tabs.add(newTab);
  }
  srcPanel.setName(Globals.lang("BibTeX source"));
  if (Globals.prefs.getBoolean("showSource")) {
    tabbed.addTab(Globals.lang("BibTeX source"),new ImageIcon(GUIGlobals.sourceIconFile),srcPanel,Globals.lang("Show/edit BibTeX source"));
    tabs.add(srcPanel);
  }
  sourceIndex=tabs.size() - 1;
  srcPanel.setFocusCycleRoot(true);
}
