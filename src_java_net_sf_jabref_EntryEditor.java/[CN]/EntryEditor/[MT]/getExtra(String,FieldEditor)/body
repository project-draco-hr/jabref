{
  final FieldEditor ed=editor;
  Object o=GUIGlobals.FIELD_EXTRAS.get(string);
  final String fieldName=editor.getFieldName();
  String s=(String)o;
  if ((s != null) && s.equals("external")) {
    ((JComponent)editor).addMouseListener(new ExternalViewerListener());
    return null;
  }
 else   if (panel.metaData.getData(Globals.SELECTOR_META_PREFIX + editor.getFieldName()) != null) {
    FieldContentSelector ws=new FieldContentSelector(this,editor,panel.metaData);
    contentSelectors.add(ws);
    return ws;
  }
 else   if ((s != null) && s.equals("browse")) {
    JButton but=new JButton(Globals.lang("Browse"));
    ((JComponent)editor).addMouseListener(new ExternalViewerListener());
    but.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        String dir=ed.getText();
        if (dir.equals("")) {
          dir=prefs.get(fieldName + Globals.FILETYPE_PREFS_EXT,"");
        }
        String chosenFile=Globals.getNewFile(frame,prefs,new File(dir),"." + fieldName,JFileChooser.OPEN_DIALOG,false);
        if (chosenFile != null) {
          File newFile=new File(chosenFile);
          ed.setText(newFile.getPath());
          prefs.put(fieldName + Globals.FILETYPE_PREFS_EXT,newFile.getPath());
          updateField(ed);
        }
      }
    }
);
    return but;
  }
 else   if ((s != null) && s.equals("browsePdf")) {
    JPanel pan=new JPanel();
    pan.setLayout(new GridLayout(2,1));
    JButton but=new JButton(Globals.lang("Browse")), download=new JButton(Globals.lang("Download"));
    ((JComponent)editor).addMouseListener(new ExternalViewerListener());
    but.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        String pdfDir=prefs.get("pdfDirectory");
        String dir=ed.getText();
        if (dir.equals("") || !(new File(dir)).isAbsolute()) {
          if (pdfDir != null) {
            dir=pdfDir;
          }
 else {
            dir=prefs.get(fieldName + Globals.FILETYPE_PREFS_EXT,"");
          }
        }
        String chosenFile=Globals.getNewFile(frame,prefs,new File(dir),".pdf",JFileChooser.OPEN_DIALOG,false);
        if (chosenFile != null) {
          File newFile=new File(chosenFile);
          String position=newFile.getParent();
          if ((pdfDir != null) && position.startsWith(pdfDir)) {
            String relPath=position.substring(pdfDir.length(),position.length()) + File.separator + newFile.getName();
            if (relPath.startsWith(File.separator)) {
              relPath=relPath.substring(File.separator.length(),relPath.length());
            }
            ed.setText(relPath);
          }
 else {
            ed.setText(newFile.getPath());
          }
          prefs.put(fieldName + Globals.FILETYPE_PREFS_EXT,newFile.getPath());
          storeFieldAction.actionPerformed(new ActionEvent(ed,0,""));
        }
      }
    }
);
    download.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        String res=JOptionPane.showInputDialog((Component)ed,Globals.lang("Enter URL to download"));
        if (res != null) {
          URL url;
          try {
            url=new URL(res);
            File file=new File(new File(prefs.get("pdfDirectory")),entry.getField(Globals.KEY_FIELD) + ".pdf");
            URLDownload udl=new URLDownload((Component)ed,url,file);
            frame.output(Globals.lang("Downloading..."));
            try {
              udl.download();
            }
 catch (            IOException e2) {
              JOptionPane.showMessageDialog((Component)ed,"Invalid URL","Download file",JOptionPane.ERROR_MESSAGE);
              logger.log(java.util.logging.Level.WARNING,"Error while downloading " + url.toString(),e2);
            }
            frame.output(Globals.lang("Download completed"));
            ed.setText(file.toURL().toString());
            updateField(ed);
          }
 catch (          MalformedURLException e1) {
            JOptionPane.showMessageDialog((Component)ed,"Invalid URL","Download file",JOptionPane.ERROR_MESSAGE);
          }
        }
      }
    }
);
    pan.add(but);
    pan.add(download);
    ((JComponent)editor).setDropTarget(new DropTarget((Component)editor,DnDConstants.ACTION_NONE,new UrlDragDrop(this,frame,editor)));
    return pan;
  }
 else   if ((s != null) && s.equals("url")) {
    ((JComponent)editor).setDropTarget(new DropTarget((Component)editor,DnDConstants.ACTION_NONE,new SimpleUrlDragDrop(editor,storeFieldAction)));
    return null;
  }
 else {
    return null;
  }
}
