{
  StringBuilder sb=new StringBuilder();
  String citeKey=e.getCiteKeyOptional().orElse("");
  sb.append(String.format("@%s{%s,",e.getType().toLowerCase(Locale.US),citeKey)).append('\n');
  Map<String,String> mapFieldToValue=new HashMap<>();
  SortedSet<String> sortedFields=new TreeSet<>();
  for (  Entry<String,String> field : e.getFieldMap().entrySet()) {
    String fieldName=field.getKey();
    String fieldValue=field.getValue();
    if (!fieldName.equals(BibEntry.KEY_FIELD)) {
      String lowerCaseFieldName=fieldName.toLowerCase(Locale.US);
      sortedFields.add(lowerCaseFieldName);
      mapFieldToValue.put(lowerCaseFieldName,fieldValue);
    }
  }
  StringJoiner sj=new StringJoiner(",\n","","\n");
  for (  String fieldName : sortedFields) {
    String line=String.format("  %s = {%s}",fieldName,String.valueOf(mapFieldToValue.get(fieldName)).replaceAll("\\r\\n","\n"));
    sj.add(line);
  }
  sb.append(sj);
  sb.append('}');
  return sb.toString();
}
