{
  if (!OpenOfficePanel.ooBase.isConnectedToDocument()) {
    JOptionPane.showMessageDialog(OpenOfficePanel.frame,Localization.lang("Not connected to any Writer document. Please" + " make sure a document is open, and use the 'Select Writer document' button to connect to it."),Localization.lang("Error"),JOptionPane.ERROR_MESSAGE);
    return;
  }
  String pageInfo=null;
  if (addPageInfo) {
    AdvancedCiteDialog acd=new AdvancedCiteDialog(OpenOfficePanel.frame);
    acd.showDialog();
    if (acd.cancelled()) {
      return;
    }
    if (!acd.getPageInfo().isEmpty()) {
      pageInfo=acd.getPageInfo();
    }
    inParenthesis=acd.isInParenthesisCite();
  }
  BasePanel panel=OpenOfficePanel.frame.getCurrentBasePanel();
  if (panel != null) {
    final BibDatabase database=panel.database();
    BibEntry[] entries=panel.getSelectedEntries();
    if (entries.length > 0) {
      try {
        if (OpenOfficePanel.style == null) {
          readStyleFile();
        }
        OpenOfficePanel.ooBase.insertEntry(entries,database,getBaseList(),OpenOfficePanel.style,inParenthesis,withText,pageInfo,Globals.prefs.getBoolean("syncOOWhenCiting"));
      }
 catch (      FileNotFoundException ex) {
        JOptionPane.showMessageDialog(OpenOfficePanel.frame,Localization.lang("You must select either a valid style file, or use one of the default styles."),Localization.lang("No valid style file defined"),JOptionPane.ERROR_MESSAGE);
      }
catch (      ConnectionLostException ex) {
        showConnectionLostErrorMessage();
      }
catch (      UndefinedCharacterFormatException ex) {
        reportUndefinedCharacterFormat(ex);
      }
catch (      UndefinedParagraphFormatException ex) {
        reportUndefinedParagraphFormat(ex);
      }
catch (      Exception ex) {
        ex.printStackTrace();
      }
    }
  }
}
