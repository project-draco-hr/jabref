{
  int selected=editor.getSelectedRow();
  if (selected == -1) {
    return;
  }
  FileListEntry flEntry=editor.getTableModel().getEntry(selected);
  String ln=flEntry.link;
  boolean httpLink=ln.toLowerCase().startsWith("http");
  if (httpLink) {
  }
  List<String> dirs=frame.getCurrentBasePanel().metaData().getFileDirectory(Globals.FILE_FIELD);
  int found=-1;
  for (int i=0; i < dirs.size(); i++) {
    if (new File(dirs.get(i)).exists()) {
      found=i;
      break;
    }
  }
  if (found < 0) {
    JOptionPane.showMessageDialog(frame,Localization.lang("File_directory_is_not_set_or_does_not_exist!"),MOVE_RENAME,JOptionPane.ERROR_MESSAGE);
    return;
  }
  File file=new File(ln);
  if (!file.isAbsolute()) {
    file=FileUtil.expandFilename(ln,dirs);
  }
  if ((file != null) && file.exists()) {
    String extension=null;
    if (flEntry.type != null) {
      extension="." + flEntry.type.getExtension();
    }
    File newFile=null;
    boolean repeat=true;
    while (repeat) {
      repeat=false;
      String chosenFile;
      if (toFileDir) {
        String suggName=Util.getLinkedFileName(eEditor.getDatabase(),eEditor.getEntry()).concat(".").concat(flEntry.type.getExtension());
        CheckBoxMessage cbm=new CheckBoxMessage(Localization.lang("Move file to file directory?"),Localization.lang("Rename to '%0'",suggName),Globals.prefs.getBoolean(JabRefPreferences.RENAME_ON_MOVE_FILE_TO_FILE_DIR));
        int answer;
        if (suggName.equals(file.getName())) {
          answer=JOptionPane.showConfirmDialog(frame,Localization.lang("Move file to file directory?"),MOVE_RENAME,JOptionPane.YES_NO_OPTION);
        }
 else {
          answer=JOptionPane.showConfirmDialog(frame,cbm,MOVE_RENAME,JOptionPane.YES_NO_OPTION);
        }
        if (answer != JOptionPane.YES_OPTION) {
          return;
        }
        Globals.prefs.putBoolean(JabRefPreferences.RENAME_ON_MOVE_FILE_TO_FILE_DIR,cbm.isSelected());
        StringBuilder sb=new StringBuilder(dirs.get(found));
        if (!dirs.get(found).endsWith(File.separator)) {
          sb.append(File.separator);
        }
        if (cbm.isSelected()) {
          sb.append(suggName);
        }
 else {
          sb.append(file.getName());
        }
        chosenFile=sb.toString();
      }
 else {
        chosenFile=FileDialogs.getNewFile(frame,file,extension,JFileChooser.SAVE_DIALOG,false);
      }
      if (chosenFile == null) {
        return;
      }
      newFile=new File(chosenFile);
      if (newFile.exists() && (JOptionPane.showConfirmDialog(frame,Localization.lang("'%0' exists. Overwrite file?",newFile.getName()),MOVE_RENAME,JOptionPane.OK_CANCEL_OPTION) != JOptionPane.OK_OPTION)) {
        if (toFileDir) {
          return;
        }
 else {
          repeat=true;
        }
      }
    }
    if (!newFile.equals(file)) {
      try {
        boolean success=file.renameTo(newFile);
        if (!success) {
          success=FileUtil.copyFile(file,newFile,true);
        }
        if (success) {
          file.delete();
          String canPath=new File(dirs.get(found)).getCanonicalPath();
          if (newFile.getCanonicalPath().startsWith(canPath)) {
            if ((newFile.getCanonicalPath().length() > canPath.length()) && (newFile.getCanonicalPath().charAt(canPath.length()) == File.separatorChar)) {
              String newLink=newFile.getCanonicalPath().substring(1 + canPath.length());
              editor.getTableModel().setEntry(selected,new FileListEntry(flEntry.description,newLink,flEntry.type));
            }
 else {
              String newLink=newFile.getCanonicalPath().substring(canPath.length());
              editor.getTableModel().setEntry(selected,new FileListEntry(flEntry.description,newLink,flEntry.type));
            }
          }
 else {
            String newLink=newFile.getCanonicalPath();
            editor.getTableModel().setEntry(selected,new FileListEntry(flEntry.description,newLink,flEntry.type));
          }
          eEditor.updateField(editor);
          frame.output(Localization.lang("File moved"));
        }
 else {
          JOptionPane.showMessageDialog(frame,Localization.lang("Move file failed"),MOVE_RENAME,JOptionPane.ERROR_MESSAGE);
        }
      }
 catch (      SecurityException|IOException ex) {
        LOGGER.warn("Could not move file",ex);
        JOptionPane.showMessageDialog(frame,Localization.lang("Could not move file '%0'.",file.getAbsolutePath()) + ex.getMessage(),MOVE_RENAME,JOptionPane.ERROR_MESSAGE);
      }
    }
  }
 else {
    JOptionPane.showMessageDialog(frame,Localization.lang("Could not find file '%0'.",flEntry.link),Localization.lang("File not found"),JOptionPane.ERROR_MESSAGE);
  }
}
