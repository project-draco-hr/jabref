{
  int _ttype;
  Token _token=null;
  int _begin=text.length();
  _ttype=TEXT_ARG_ID_ELEMENT;
  int _saveIndex;
  Token id=null;
  mID(true);
  id=_returnToken;
{
    if ((_tokenSet_4.member(LA(1))) && (_tokenSet_22.member(LA(2))) && (true)) {
      _saveIndex=text.length();
      mWS(false);
      text.setLength(_saveIndex);
    }
 else     if ((_tokenSet_22.member(LA(1))) && (true) && (true)) {
    }
 else {
      throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
    }
  }
{
switch (LA(1)) {
case '(':
{
        match('(');
{
          if ((_tokenSet_4.member(LA(1))) && (_tokenSet_23.member(LA(2))) && ((LA(3) >= '\u0003' && LA(3) <= '\u00ff'))) {
            _saveIndex=text.length();
            mWS(false);
            text.setLength(_saveIndex);
          }
 else           if ((_tokenSet_23.member(LA(1))) && ((LA(2) >= '\u0003' && LA(2) <= '\u00ff')) && (true)) {
          }
 else {
            throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
          }
        }
{
          _loop568:           do {
            if ((_tokenSet_24.member(LA(1))) && ((LA(2) >= '\u0003' && LA(2) <= '\u00ff')) && ((LA(3) >= '\u0003' && LA(3) <= '\u00ff'))) {
              mTEXT_ARG(false);
{
                _loop567:                 do {
                  if ((LA(1) == ',')) {
                    match(',');
                    mTEXT_ARG(false);
                  }
 else {
                    break _loop567;
                  }
                }
 while (true);
              }
            }
 else {
              break _loop568;
            }
          }
 while (true);
        }
{
switch (LA(1)) {
case '\t':
case '\n':
case '\r':
case ' ':
{
              _saveIndex=text.length();
              mWS(false);
              text.setLength(_saveIndex);
              break;
            }
case ')':
{
            break;
          }
default :
{
          throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
        }
    }
  }
  match(')');
  break;
}
case '[':
{
{
  int _cnt573=0;
  _loop573:   do {
    if ((LA(1) == '[')) {
      match('[');
{
        if ((_tokenSet_4.member(LA(1))) && (_tokenSet_24.member(LA(2))) && ((LA(3) >= '\u0003' && LA(3) <= '\u00ff'))) {
          _saveIndex=text.length();
          mWS(false);
          text.setLength(_saveIndex);
        }
 else         if ((_tokenSet_24.member(LA(1))) && ((LA(2) >= '\u0003' && LA(2) <= '\u00ff')) && ((LA(3) >= '\u0003' && LA(3) <= '\u00ff'))) {
        }
 else {
          throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
        }
      }
      mTEXT_ARG(false);
{
switch (LA(1)) {
case '\t':
case '\n':
case '\r':
case ' ':
{
            _saveIndex=text.length();
            mWS(false);
            text.setLength(_saveIndex);
            break;
          }
case ']':
{
          break;
        }
default :
{
        throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
      }
  }
}
match(']');
}
 else {
if (_cnt573 >= 1) {
  break _loop573;
}
 else {
  throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
}
}
_cnt573++;
}
 while (true);
}
break;
}
case '.':
{
match('.');
mTEXT_ARG_ID_ELEMENT(false);
break;
}
case '-':
{
match("->");
mTEXT_ARG_ID_ELEMENT(false);
break;
}
default :
if ((LA(1) == ':') && (LA(2) == ':') && (_tokenSet_12.member(LA(3)))) {
match("::");
mTEXT_ARG_ID_ELEMENT(false);
}
 else if ((_tokenSet_11.member(LA(1))) && (true) && (true)) {
}
 else {
throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
}
}
}
if (_createToken && _token == null && _ttype != Token.SKIP) {
_token=makeToken(_ttype);
_token.setText(new String(text.getBuffer(),_begin,text.length() - _begin));
}
_returnToken=_token;
}
