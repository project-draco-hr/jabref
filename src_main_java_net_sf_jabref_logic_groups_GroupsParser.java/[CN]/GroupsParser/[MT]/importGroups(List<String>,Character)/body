{
  try {
    GroupTreeNode cursor=null;
    GroupTreeNode root=null;
    for (    String string : orderedData) {
      string=string.trim();
      if (string.isEmpty()) {
        continue;
      }
      int spaceIndex=string.indexOf(' ');
      if (spaceIndex <= 0) {
        throw new ParseException("Expected \"" + string + "\" to contain whitespace");
      }
      int level=Integer.parseInt(string.substring(0,spaceIndex));
      AbstractGroup group=GroupsParser.fromString(string.substring(spaceIndex + 1),keywordSeparator);
      GroupTreeNode newNode=GroupTreeNode.fromGroup(group);
      if (cursor == null) {
        cursor=newNode;
        root=cursor;
      }
 else {
        while (level <= cursor.getLevel()) {
          cursor=cursor.getParent().get();
        }
        cursor.addChild(newNode);
        cursor=newNode;
      }
    }
    return root;
  }
 catch (  ParseException e) {
    throw new ParseException(Localization.lang("Group tree could not be parsed. If you save the BibTeX database, all groups will be lost."),e);
  }
}
