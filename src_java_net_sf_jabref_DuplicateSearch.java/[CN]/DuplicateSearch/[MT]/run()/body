{
  NamedCompound ce=null;
  int duplicateCounter=0;
  panel.output(Globals.lang("Searching for duplicates..."));
  Object[] keys=panel.database.getKeySet().toArray();
  if ((keys == null) || (keys.length < 2))   return;
  bes=new BibtexEntry[keys.length];
  for (int i=0; i < keys.length; i++)   bes[i]=panel.database.getEntryById((String)keys[i]);
  SearcherThread st=new SearcherThread();
  st.setPriority(Thread.MIN_PRIORITY);
  st.start();
  int current=0;
  DuplicateResolverDialog drd=null;
  while (!st.finished() || (current < duplicates.size())) {
    if (current >= duplicates.size()) {
synchronized (duplicates) {
        try {
          duplicates.wait();
        }
 catch (        Exception e) {
        }
      }
    }
 else {
      BibtexEntry[] be=(BibtexEntry[])duplicates.get(current);
      current++;
      if ((panel.database.getEntryById(be[0].getId()) != null) && (panel.database.getEntryById(be[1].getId()) != null)) {
        drd=new DuplicateResolverDialog(panel.frame,be[0],be[1],DuplicateResolverDialog.DUPLICATE_SEARCH);
        drd.show();
        duplicateCounter++;
        int answer=drd.getSelected();
        if (answer == DuplicateResolverDialog.KEEP_UPPER) {
          if (ce == null)           ce=new NamedCompound(Globals.lang("duplicate removal"));
          panel.database.removeEntry(be[1].getId());
          panel.refreshTable();
          panel.markBaseChanged();
          ce.addEdit(new UndoableRemoveEntry(panel.database,be[1],panel));
        }
 else         if (answer == DuplicateResolverDialog.KEEP_LOWER) {
          if (ce == null)           ce=new NamedCompound(Globals.lang("duplicate removal"));
          panel.database.removeEntry(be[0].getId());
          panel.refreshTable();
          panel.markBaseChanged();
          ce.addEdit(new UndoableRemoveEntry(panel.database,be[0],panel));
        }
 else         if (answer == DuplicateResolverDialog.BREAK) {
          st.setFinished();
          current=Integer.MAX_VALUE;
          duplicateCounter--;
        }
        drd.dispose();
      }
    }
  }
  if (drd != null)   drd.dispose();
  panel.output(Globals.lang("Duplicate pairs found") + ": " + duplicates.size()+ " "+ Globals.lang("pairs processed")+ ": "+ duplicateCounter);
  if (ce != null) {
    ce.end();
    panel.undoManager.addEdit(ce);
  }
}
