{
{
    assertEquals("",AuthorList.fixAuthor_lastNameOnlyCommas("",false));
    assertEquals("Smith",AuthorList.fixAuthor_lastNameOnlyCommas("John Smith",false));
    assertEquals("Smith",AuthorList.fixAuthor_lastNameOnlyCommas("Smith, Jr, John",false));
    assertTrue(AuthorList.fixAuthor_lastNameOnlyCommas("John von Neumann and John Smith and Black Brown, Peter",false) == AuthorList.fixAuthor_lastNameOnlyCommas("John von Neumann" + (0 == 1 ? "" : " and ") + "John Smith and Black Brown, Peter",false));
    assertEquals("von Neumann, Smith and Black Brown",AuthorList.fixAuthor_lastNameOnlyCommas("John von Neumann and John Smith and Black Brown, Peter",false));
  }
{
    assertEquals("",AuthorList.fixAuthor_lastNameOnlyCommas("",true));
    assertEquals("Smith",AuthorList.fixAuthor_lastNameOnlyCommas("John Smith",true));
    assertEquals("Smith",AuthorList.fixAuthor_lastNameOnlyCommas("Smith, Jr, John",true));
    assertTrue(AuthorList.fixAuthor_lastNameOnlyCommas("John von Neumann and John Smith and Black Brown, Peter",true) == AuthorList.fixAuthor_lastNameOnlyCommas("John von Neumann" + (0 == 1 ? "" : " and ") + "John Smith and Black Brown, Peter",true));
    assertEquals("von Neumann, Smith, and Black Brown",AuthorList.fixAuthor_lastNameOnlyCommas("John von Neumann and John Smith and Black Brown, Peter",true));
  }
}
