{
  setEnabled(false);
  panel.output(Localization.lang("Writing XMP metadata..."));
  panel.frame().setProgressBarIndeterminate(true);
  panel.frame().setProgressBarVisible(true);
  BibtexEntry entry=editor.getEntry();
  List<File> files=new ArrayList<File>();
  String pdf=entry.getField("pdf");
  String[] dirs=panel.metaData().getFileDirectory("pdf");
  File f=FileUtil.expandFilename(pdf,dirs);
  if (f != null) {
    files.add(f);
  }
  dirs=panel.metaData().getFileDirectory(GUIGlobals.FILE_FIELD);
  String field=entry.getField(GUIGlobals.FILE_FIELD);
  if (field != null) {
    FileListTableModel tm=new FileListTableModel();
    tm.setContent(field);
    for (int j=0; j < tm.getRowCount(); j++) {
      FileListEntry flEntry=tm.getEntry(j);
      if (flEntry.getType() != null && flEntry.getType().getName().toLowerCase().equals("pdf")) {
        f=FileUtil.expandFilename(flEntry.getLink(),dirs);
        if (f != null) {
          files.add(f);
        }
      }
    }
  }
  AbstractWorker worker=new WriteXMPWorker(files,entry);
  worker.getWorker().run();
  panel.output(message);
  panel.frame().setProgressBarVisible(false);
  setEnabled(true);
}
