{
  OpenDatabaseAction openAction=new OpenDatabaseAction(frame,false);
  List<String> notBibFiles=new ArrayList<>();
  List<String> bibFiles=new ArrayList<>();
  for (  String fileName : fileNames) {
    String extension="";
    ExternalFileType fileType=null;
    int index=fileName.lastIndexOf('.');
    if ((index >= 0) && (index < fileName.length())) {
      extension=fileName.substring(index + 1).toLowerCase();
    }
    if (extension.equals("bib")) {
      bibFiles.add(fileName);
      continue;
    }
    fileType=Globals.prefs.getExternalFileTypeByExt(extension);
    if ((fileType != null) && (dropRow >= 0)) {
      boolean local=true;
      DroppedFileHandler dfh=new DroppedFileHandler(frame,panel);
      dfh.handleDroppedfile(fileName,fileType,local,entryTable,dropRow);
      continue;
    }
    notBibFiles.add(fileName);
  }
  openAction.openFilesAsStringList(bibFiles,true);
  if (!notBibFiles.isEmpty()) {
    String[] toImport=new String[notBibFiles.size()];
    notBibFiles.toArray(toImport);
    ImportMenuItem importer=new ImportMenuItem(frame,entryTable == null);
    importer.automatedImport(toImport);
  }
}
