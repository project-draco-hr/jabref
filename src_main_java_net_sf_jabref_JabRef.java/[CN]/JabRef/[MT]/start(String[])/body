{
  JabRefPreferences prefs=JabRefPreferences.getInstance();
  if (prefs.getBoolean(JabRefPreferences.USE_PROXY)) {
    System.setProperty("http.proxyHost",prefs.get(JabRefPreferences.PROXY_HOSTNAME));
    System.setProperty("http.proxyPort",prefs.get(JabRefPreferences.PROXY_PORT));
    if (prefs.get("proxyUsername") != null) {
      System.setProperty("http.proxyUser",prefs.get("proxyUsername"));
      System.setProperty("http.proxyPassword",prefs.get("proxyPassword"));
    }
  }
 else {
    System.setProperty("java.net.useSystemProxies","true");
    System.setProperty("proxySet","true");
  }
  Globals.startBackgroundTasks();
  setupLogHandlerForErrorConsole();
  Globals.prefs=prefs;
  Localization.setLanguage(prefs.get(JabRefPreferences.LANGUAGE));
  Globals.prefs.setLanguageDependentDefaultValues();
  BibtexFields.setNumericFieldsFromPrefs();
  Globals.importFormatReader.resetImportFormats();
  BibtexEntryType.loadCustomEntryTypes(prefs);
  ExportFormats.initAllExports();
  Abbreviations.initializeJournalNames(Globals.prefs);
  RemotePreferences remotePreferences=new RemotePreferences(Globals.prefs);
  if (remotePreferences.useRemoteServer()) {
    Globals.remoteListener.open(new JabRefMessageHandler(this),remotePreferences.getPort());
    if (Globals.remoteListener.isOpen()) {
      Globals.remoteListener.start();
    }
 else {
      if (RemoteListenerClient.sendToActiveJabRefInstance(args,remotePreferences.getPort())) {
        System.out.println(Localization.lang("Arguments passed on to running JabRef instance. Shutting down."));
        JabRefExecutorService.INSTANCE.shutdownEverything();
        return;
      }
    }
  }
  Globals.NEWLINE=Globals.prefs.get(JabRefPreferences.NEWLINE);
  if (OS.WINDOWS) {
    JabRef.setCurrentProcessExplicitAppUserModelID("JabRef." + Globals.BUILD_INFO.getVersion());
  }
  Vector<ParserResult> loaded=processArguments(args,true);
  if (loaded == null || cli.isDisableGui() || cli.isShowVersion()) {
    JabRefExecutorService.INSTANCE.shutdownEverything();
    return;
  }
  openWindow(loaded);
}
