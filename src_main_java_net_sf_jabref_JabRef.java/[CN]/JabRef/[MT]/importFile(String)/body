{
  String[] data=argument.split(",");
  try {
    if ((data.length > 1) && !"*".equals(data[1])) {
      System.out.println(Localization.lang("Importing") + ": " + data[0]);
      try {
        List<BibEntry> entries;
        if (OS.WINDOWS) {
          entries=Globals.importFormatReader.importFromFile(data[1],data[0],JabRef.jrf);
        }
 else {
          entries=Globals.importFormatReader.importFromFile(data[1],data[0].replace("~",System.getProperty("user.home")),JabRef.jrf);
        }
        return Optional.of(new ParserResult(entries));
      }
 catch (      IllegalArgumentException ex) {
        System.err.println(Localization.lang("Unknown import format") + ": " + data[1]);
        return Optional.empty();
      }
    }
 else {
      System.out.println(Localization.lang("Importing in unknown format") + ": " + data[0]);
      ImportFormatReader.UnknownFormatImport importResult;
      if (OS.WINDOWS) {
        importResult=Globals.importFormatReader.importUnknownFormat(data[0]);
      }
 else {
        importResult=Globals.importFormatReader.importUnknownFormat(data[0].replace("~",System.getProperty("user.home")));
      }
      if (importResult == null) {
        System.out.println(Localization.lang("Could not find a suitable import format."));
      }
 else {
        System.out.println(Localization.lang("Format used") + ": " + importResult.format);
        return Optional.of(importResult.parserResult);
      }
    }
  }
 catch (  IOException ex) {
    System.err.println(Localization.lang("Error opening file") + " '" + data[0]+ "': "+ ex.getLocalizedMessage());
  }
  return Optional.empty();
}
