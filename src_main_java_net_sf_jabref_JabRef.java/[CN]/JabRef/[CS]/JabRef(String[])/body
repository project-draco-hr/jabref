{
  singleton=this;
  JabRefPreferences prefs=JabRefPreferences.getInstance();
  if (prefs.hasKey("deletePlugins") && (prefs.get("deletePlugins").length() > 0)) {
    String[] toDelete=prefs.getStringArray("deletePlugins");
    PluginInstaller.deletePluginsOnStartup(toDelete);
    prefs.put("deletePlugins","");
  }
  if (prefs.getBoolean("useProxy")) {
    System.getProperties().put("http.proxyHost",prefs.get("proxyHostname"));
    System.getProperties().put("http.proxyPort",prefs.get("proxyPort"));
    if (prefs.get("proxyUsername") != null) {
      System.getProperties().put("http.proxyUser",prefs.get("proxyUsername"));
      System.getProperties().put("http.proxyPassword",prefs.get("proxyPassword"));
    }
  }
 else {
    System.setProperty("java.net.useSystemProxies","true");
    System.getProperties().put("proxySet","true");
  }
  Globals.startBackgroundTasks();
  Globals.setupLogging();
  Globals.prefs=prefs;
  String langStr=prefs.get("language");
  String[] parts=langStr.split("_");
  String language, country;
  if (parts.length == 1) {
    language=langStr;
    country="";
  }
 else {
    language=parts[0];
    country=parts[1];
  }
  Globals.setLanguage(language,country);
  Globals.prefs.setLanguageDependentDefaultValues();
  BibtexFields.setNumericFieldsFromPrefs();
  Globals.importFormatReader.resetImportFormats();
  BibtexEntryType.loadCustomEntryTypes(prefs);
  ExportFormats.initAllExports();
  Globals.initializeJournalNames();
  if (Globals.prefs.getBoolean("useRemoteServer")) {
    remoteListener=RemoteListener.openRemoteListener(this);
    if (remoteListener == null) {
      if (RemoteListener.sendToActiveJabRefInstance(args)) {
        System.out.println(Globals.lang("Arguments passed on to running JabRef instance. Shutting down."));
        System.exit(0);
      }
    }
 else {
      remoteListener.start();
    }
  }
  String personalJournalList=prefs.get("personalJournalList");
  if (personalJournalList != null && !personalJournalList.isEmpty()) {
    try {
      Globals.journalAbbrev.readJournalList(new File(personalJournalList));
    }
 catch (    FileNotFoundException e) {
      JOptionPane.showMessageDialog(null,Globals.lang("Journal file not found") + ": " + e.getMessage(),Globals.lang("Error opening file"),JOptionPane.ERROR_MESSAGE);
      Globals.prefs.put("personalJournalList","");
    }
  }
  Globals.NEWLINE=Globals.prefs.get(JabRefPreferences.NEWLINE);
  Globals.NEWLINE_LENGTH=Globals.NEWLINE.length();
  setCurrentProcessExplicitAppUserModelID("JabRef." + Globals.VERSION);
  openWindow(processArguments(args,true));
}
