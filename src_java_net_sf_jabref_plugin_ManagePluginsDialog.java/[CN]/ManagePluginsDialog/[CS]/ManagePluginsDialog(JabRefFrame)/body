{
  this.frame=frame;
  diag=new JDialog(frame,Globals.lang("Plugin manager"),false);
  help.addActionListener(new HelpAction(Globals.helpDiag,GUIGlobals.pluginHelp,"Help"));
  JPanel pan=new JPanel();
  pan.setLayout(new BorderLayout());
  JLabel lab=new JLabel(Globals.lang("Plugins installed in your user plugin directory (%0):",PluginCore.userPluginDir.getPath()));
  lab.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  pan.add(lab,BorderLayout.NORTH);
  table=new JTable();
  tableOther=new JTable();
  tableOther.setRowSelectionAllowed(false);
  tableOther.setColumnSelectionAllowed(false);
  tableOther.setCellSelectionEnabled(false);
  buildList();
  table.setPreferredScrollableViewportSize(new Dimension(500,200));
  tableOther.setPreferredScrollableViewportSize(new Dimension(500,100));
  pan.add(new JScrollPane(table),BorderLayout.CENTER);
  diag.getContentPane().add(pan,BorderLayout.NORTH);
  pan=new JPanel();
  pan.setLayout(new BorderLayout());
  lab=new JLabel(Globals.lang("Plugins installed in other locations:"));
  lab.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  pan.add(lab,BorderLayout.NORTH);
  pan.add(new JScrollPane(tableOther),BorderLayout.CENTER);
  diag.getContentPane().add(pan,BorderLayout.CENTER);
  ButtonBarBuilder b=new ButtonBarBuilder();
  b.addGlue();
  b.addGridded(install);
  b.addGridded(download);
  b.addGridded(remove);
  b.addGridded(close);
  b.addRelatedGap();
  b.addGridded(help);
  b.addGlue();
  b.getPanel().setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  diag.getContentPane().add(b.getPanel(),BorderLayout.SOUTH);
  diag.pack();
  diag.setLocationRelativeTo(frame);
  install.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent arg0){
      installPlugin();
    }
  }
);
  download.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent arg0){
      downloadPlugin();
    }
  }
);
  Action closeListener=new AbstractAction(){
    public void actionPerformed(    ActionEvent arg0){
      diag.dispose();
    }
  }
;
  close.addActionListener(closeListener);
  remove.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent arg0){
      removeSelected();
    }
  }
);
  ActionMap am=b.getPanel().getActionMap();
  InputMap im=b.getPanel().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
  im.put(Globals.prefs.getKey("Close dialog"),"close");
  am.put("close",closeListener);
}
