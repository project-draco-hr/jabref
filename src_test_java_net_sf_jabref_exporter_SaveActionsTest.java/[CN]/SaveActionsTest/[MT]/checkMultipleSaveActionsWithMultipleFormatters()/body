{
  BibtexParser parser=new BibtexParser(new StringReader("@InProceedings{6055279,\n" + "  Title                    = {Educational session 1},\n" + "  Booktitle                = {Custom Integrated Circuits Conference (CICC), 2011 IEEE},\n"+ "  Year                     = {2011},\n"+ "  Month                    = {Sept},\n"+ "  Pages                    = {1-7},\n"+ "  Abstract                 = {Start of the above-titled section of the conference proceedings record.},\n"+ "  DOI                      = {10.1109/CICC.2011.6055279},\n"+ "  ISSN                     = {0886-5930}\n"+ "}\n"+ "\n"+ "@comment{jabref-meta: saveActions:enabled;pages[PageNumbersFormatter,DateFormatter]title[LowerCaseChanger]}"));
  ParserResult parserResult=parser.parse();
  List<String> saveActions=parserResult.getMetaData().getData(SaveActions.META_KEY);
  assertEquals("enabled",saveActions.get(0));
  assertEquals("pages[PageNumbersFormatter,DateFormatter]title[LowerCaseChanger]",saveActions.get(1));
  SaveActions actions=parserResult.getMetaData().getSaveActions();
  List<FieldFormatterCleanup> formatterCleanups=actions.getConfiguredActions();
  assertEquals(3,formatterCleanups.size());
  for (  FieldFormatterCleanup cleanup : formatterCleanups) {
    if (cleanup.getField().equals("title")) {
      assertEquals("LowerCaseChanger",cleanup.getFormatter().getKey());
    }
 else     if (cleanup.getField().equals("pages")) {
      if (!("PageNumbersFormatter".equals(cleanup.getFormatter().getKey()) || "DateFormatter".equals(cleanup.getFormatter().getKey()))) {
        fail("Wrong formatter for pages field: " + cleanup.getFormatter().getKey());
      }
    }
  }
  BibEntry entry=parserResult.getDatabase().getEntries().iterator().next();
  actions.applySaveActions(entry);
  assertEquals("educational session 1",entry.getField("title"));
  assertEquals("1--7",entry.getField("pages"));
}
