{
  options.put(key,value);
  String s=value.getText();
  int i;
  if (key.equals("k")) {
    try {
      maxk=getIntegerOption("k");
      if (maxk <= 0) {
        antlrTool.error("option 'k' must be greater than 0 (was " + value.getText() + ")",getFilename(),value.getLine(),value.getColumn());
        maxk=1;
      }
    }
 catch (    NumberFormatException e) {
      antlrTool.error("option 'k' must be an integer (was " + value.getText() + ")",getFilename(),value.getLine(),value.getColumn());
    }
    return true;
  }
  if (key.equals("codeGenMakeSwitchThreshold")) {
    try {
      i=getIntegerOption("codeGenMakeSwitchThreshold");
    }
 catch (    NumberFormatException e) {
      antlrTool.error("option 'codeGenMakeSwitchThreshold' must be an integer",getFilename(),value.getLine(),value.getColumn());
    }
    return true;
  }
  if (key.equals("codeGenBitsetTestThreshold")) {
    try {
      i=getIntegerOption("codeGenBitsetTestThreshold");
    }
 catch (    NumberFormatException e) {
      antlrTool.error("option 'codeGenBitsetTestThreshold' must be an integer",getFilename(),value.getLine(),value.getColumn());
    }
    return true;
  }
  if (key.equals("defaultErrorHandler")) {
    if (s.equals("true")) {
      defaultErrorHandler=true;
    }
 else     if (s.equals("false")) {
      defaultErrorHandler=false;
    }
 else {
      antlrTool.error("Value for defaultErrorHandler must be true or false",getFilename(),value.getLine(),value.getColumn());
    }
    return true;
  }
  if (key.equals("analyzerDebug")) {
    if (s.equals("true")) {
      analyzerDebug=true;
    }
 else     if (s.equals("false")) {
      analyzerDebug=false;
    }
 else {
      antlrTool.error("option 'analyzerDebug' must be true or false",getFilename(),value.getLine(),value.getColumn());
    }
    return true;
  }
  if (key.equals("codeGenDebug")) {
    if (s.equals("true")) {
      analyzerDebug=true;
    }
 else     if (s.equals("false")) {
      analyzerDebug=false;
    }
 else {
      antlrTool.error("option 'codeGenDebug' must be true or false",getFilename(),value.getLine(),value.getColumn());
    }
    return true;
  }
  if (key.equals("classHeaderSuffix")) {
    return true;
  }
  if (key.equals("classHeaderPrefix")) {
    return true;
  }
  if (key.equals("namespaceAntlr")) {
    return true;
  }
  if (key.equals("namespaceStd")) {
    return true;
  }
  if (key.equals("genHashLines")) {
    return true;
  }
  if (key.equals("noConstructors")) {
    return true;
  }
  return false;
}
