{
  if (result.url != null) {
    String bibtexKey=entry.getCiteKey();
    String[] dirs=basePanel.metaData().getFileDirectory(GUIGlobals.FILE_FIELD);
    if (dirs.length == 0) {
      return;
    }
    DownloadExternalFile def=new DownloadExternalFile(basePanel.frame(),basePanel.metaData(),bibtexKey);
    try {
      def.download(result.url,new DownloadExternalFile.DownloadCallback(){
        @Override public void downloadComplete(        FileListEntry file){
          FileListTableModel tm=new FileListTableModel();
          String oldValue=entry.getField(GUIGlobals.FILE_FIELD);
          tm.setContent(oldValue);
          tm.addEntry(tm.getRowCount(),file);
          String newValue=tm.getStringRepresentation();
          UndoableFieldChange edit=new UndoableFieldChange(entry,GUIGlobals.FILE_FIELD,oldValue,newValue);
          entry.setField(GUIGlobals.FILE_FIELD,newValue);
          basePanel.undoManager.addEdit(edit);
          basePanel.markBaseChanged();
        }
      }
);
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
    basePanel.output(Localization.lang("Finished downloading full text document"));
  }
 else {
    String message=null;
switch (result.status) {
case FindFullText.WRONG_MIME_TYPE:
      message=Localization.lang("Found pdf link, but received the wrong MIME type. " + "This could indicate that you don't have access to the fulltext article.");
    break;
case FindFullText.LINK_NOT_FOUND:
  message=Localization.lang("Unable to find full text document.");
break;
case FindFullText.IO_EXCEPTION:
message=Localization.lang("Connection error when trying to find full text document.");
break;
}
basePanel.output(Localization.lang("Full text article download failed"));
JOptionPane.showMessageDialog(basePanel.frame(),message,Localization.lang("Full text article download failed"),JOptionPane.ERROR_MESSAGE);
}
}
