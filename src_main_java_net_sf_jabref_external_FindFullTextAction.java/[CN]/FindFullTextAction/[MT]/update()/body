{
  if (result.isPresent()) {
    String[] dirs=basePanel.metaData().getFileDirectory(Globals.FILE_FIELD);
    if (dirs.length == 0) {
      JOptionPane.showMessageDialog(basePanel.frame(),"Main file directory not set! Preferences -> External programs","Directory not found",JOptionPane.ERROR_MESSAGE);
      return;
    }
    String bibtexKey=entry.getCiteKey();
    DownloadExternalFile def=new DownloadExternalFile(basePanel.frame(),basePanel.metaData(),bibtexKey);
    try {
      def.download(result.get(),new DownloadExternalFile.DownloadCallback(){
        @Override public void downloadComplete(        FileListEntry file){
          FileListTableModel tm=new FileListTableModel();
          String oldValue=entry.getField(Globals.FILE_FIELD);
          tm.setContent(oldValue);
          tm.addEntry(tm.getRowCount(),file);
          String newValue=tm.getStringRepresentation();
          UndoableFieldChange edit=new UndoableFieldChange(entry,Globals.FILE_FIELD,oldValue,newValue);
          entry.setField(Globals.FILE_FIELD,newValue);
          basePanel.undoManager.addEdit(edit);
          basePanel.markBaseChanged();
        }
      }
);
    }
 catch (    IOException e) {
      e.printStackTrace();
    }
    basePanel.output(Localization.lang("Finished downloading full text document"));
  }
 else {
    String message=Localization.lang("Full text article download failed");
    basePanel.output(message);
    JOptionPane.showMessageDialog(basePanel.frame(),message,message,JOptionPane.ERROR_MESSAGE);
  }
}
