{
  if (selected.length != 2) {
    JOptionPane.showMessageDialog(panel.frame(),Localization.lang("You have to choose exactly two entries to merge."),MERGE_ENTRIES,JOptionPane.INFORMATION_MESSAGE);
    this.dispose();
    return;
  }
  one=selected[0];
  two=selected[1];
  mergeEntries=new MergeEntries(one,two,panel.getLoadedDatabase().getType());
  ce=new NamedCompound(MERGE_ENTRIES);
  FormLayout layout=new FormLayout("fill:700px:grow","fill:400px:grow, 4px, p, 5px, p");
  this.setLayout(layout);
  this.add(mergeEntries.getMergeEntryPanel(),cc.xy(1,1));
  this.add(new JSeparator(),cc.xy(1,3));
  ButtonBarBuilder bb=new ButtonBarBuilder();
  bb.addGlue();
  JButton cancel=new JButton(Localization.lang("Cancel"));
  cancel.setActionCommand("cancel");
  cancel.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      buttonPressed(e.getActionCommand());
    }
  }
);
  JButton replaceentries=new JButton(MERGE_ENTRIES);
  replaceentries.setActionCommand("replace");
  replaceentries.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      buttonPressed(e.getActionCommand());
    }
  }
);
  bb.addButton(new JButton[]{replaceentries,cancel});
  this.add(bb.getPanel(),cc.xy(1,5));
  layout.appendRow(RowSpec.decode(MARGIN));
  layout.appendColumn(ColumnSpec.decode(MARGIN));
  layout.insertRow(1,RowSpec.decode(MARGIN));
  layout.insertColumn(1,ColumnSpec.decode(MARGIN));
  this.addComponentListener(new ComponentAdapter(){
    @Override public void componentResized(    ComponentEvent e){
      pw.storeWindowPosition();
    }
    @Override public void componentMoved(    ComponentEvent e){
      pw.storeWindowPosition();
    }
  }
);
  pw=new PositionWindow(this,JabRefPreferences.MERGEENTRIES_POS_X,JabRefPreferences.MERGEENTRIES_POS_Y,JabRefPreferences.MERGEENTRIES_SIZE_X,JabRefPreferences.MERGEENTRIES_SIZE_Y);
  pw.setWindowPosition();
  setVisible(true);
}
