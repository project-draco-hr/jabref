{
  if (!doneBuilding) {
    return;
  }
  if (!identical[0]) {
    if (rb[0][0].isSelected()) {
      mergedEntry.setType(one.getType());
    }
 else {
      mergedEntry.setType(two.getType());
    }
  }
  for (int i=0; i < joint.size(); i++) {
    if (!identical[i + 1]) {
      if (rb[0][i + 1].isSelected()) {
        mergedEntry.setField(jointStrings[i],one.getField(jointStrings[i]));
      }
 else       if (rb[2][i + 1].isSelected()) {
        mergedEntry.setField(jointStrings[i],two.getField(jointStrings[i]));
      }
 else {
        mergedEntry.clearField(jointStrings[i]);
      }
    }
  }
  pp.setEntry(mergedEntry);
  StringWriter sw=new StringWriter();
  try {
    new BibtexEntryWriter(new LatexFieldFormatter(),false).write(mergedEntry,sw);
  }
 catch (  IOException ex) {
    LOGGER.error("Error in entry" + ": " + ex.getMessage(),ex);
  }
  jta.setText(sw.getBuffer().toString());
  jta.setCaretPosition(0);
}
