{
  allowEditing.setSelected(_prefs.getBoolean(JabRefPreferences.ALLOW_TABLE_EDITING));
  defSort.setSelected(_prefs.getBoolean(JabRefPreferences.DEFAULT_AUTO_SORT));
  ctrlClick.setSelected(_prefs.getBoolean(JabRefPreferences.CTRL_CLICK));
  useOwner.setSelected(_prefs.getBoolean(JabRefPreferences.USE_OWNER));
  overwriteOwner.setSelected(_prefs.getBoolean(JabRefPreferences.OVERWRITE_OWNER));
  useTimeStamp.setSelected(_prefs.getBoolean(JabRefPreferences.USE_TIME_STAMP));
  overwriteTimeStamp.setSelected(_prefs.getBoolean(JabRefPreferences.OVERWRITE_TIME_STAMP));
  updateTimeStamp.setSelected(_prefs.getBoolean(JabRefPreferences.UPDATE_TIMESTAMP));
  updateTimeStamp.setEnabled(useTimeStamp.isSelected());
  keyDuplicateWarningDialog.setSelected(_prefs.getBoolean(JabRefPreferences.DIALOG_WARNING_FOR_DUPLICATE_KEY));
  keyEmptyWarningDialog.setSelected(_prefs.getBoolean(JabRefPreferences.DIALOG_WARNING_FOR_EMPTY_KEY));
  enforceLegalKeys.setSelected(_prefs.getBoolean(JabRefPreferences.ENFORCE_LEGAL_BIBTEX_KEY));
  memoryStick.setSelected(_prefs.getBoolean(JabRefPreferences.MEMORY_STICK_MODE));
  confirmDelete.setSelected(_prefs.getBoolean(JabRefPreferences.CONFIRM_DELETE));
  defOwnerField.setText(_prefs.get(JabRefPreferences.DEFAULT_OWNER));
  timeStampFormat.setText(_prefs.get(JabRefPreferences.TIME_STAMP_FORMAT));
  timeStampField.setText(_prefs.get(JabRefPreferences.TIME_STAMP_FIELD));
  useImportInspector.setSelected(_prefs.getBoolean(JabRefPreferences.USE_IMPORT_INSPECTION_DIALOG));
  useImportInspectorForSingle.setSelected(_prefs.getBoolean(JabRefPreferences.USE_IMPORT_INSPECTION_DIALOG_FOR_SINGLE));
  inspectionWarnDupli.setSelected(_prefs.getBoolean(JabRefPreferences.WARN_ABOUT_DUPLICATES_IN_INSPECTION));
  useImportInspectorForSingle.setEnabled(useImportInspector.isSelected());
  inspectionWarnDupli.setEnabled(useImportInspector.isSelected());
  markImportedEntries.setSelected(_prefs.getBoolean(JabRefPreferences.MARK_IMPORTED_ENTRIES));
  unmarkAllEntriesBeforeImporting.setSelected(_prefs.getBoolean(JabRefPreferences.UNMARK_ALL_ENTRIES_BEFORE_IMPORTING));
  String enc=_prefs.get(JabRefPreferences.DEFAULT_ENCODING);
  for (int i=0; i < Globals.ENCODINGS.length; i++) {
    if (Globals.ENCODINGS[i].equalsIgnoreCase(enc)) {
      encodings.setSelectedIndex(i);
      break;
    }
  }
  String oldLan=_prefs.get(JabRefPreferences.LANGUAGE);
  int ilk=0;
  for (  String lan : GUIGlobals.LANGUAGES.values()) {
    if (lan.equals(oldLan)) {
      language.setSelectedIndex(ilk);
    }
    ilk++;
  }
}
