{
  if (!style.isSortByPosition()) {
    Map<BibEntry,BibDatabase> newMap=new TreeMap<>(entryComparator);
    for (    BibEntry entry : entries.keySet()) {
      newMap.put(entry,entries.get(entry));
    }
    entries=newMap;
  }
  int number=1;
  for (  BibEntry entry : entries.keySet()) {
    if (entry instanceof UndefinedBibtexEntry) {
      continue;
    }
    OOUtil.insertParagraphBreak(text,cursor);
    if (style.isNumberEntries()) {
      int minGroupingCount=style.getIntCitProperty("MinimumGroupingCount");
      OOUtil.insertTextAtCurrentLocation(text,cursor,style.getNumCitationMarker(new int[]{number++},minGroupingCount,true),false,false,false,false,false,false);
    }
    Layout layout=style.getReferenceFormat(entry.getType().getName());
    try {
      layout.setPostFormatter(OOUtil.postformatter);
    }
 catch (    NoSuchMethodError ignore) {
    }
    OOUtil.insertFullReferenceAtCurrentLocation(text,cursor,layout,parFormat,entry,entries.get(entry),uniquefiers.get(entry.getCiteKey()));
  }
}
