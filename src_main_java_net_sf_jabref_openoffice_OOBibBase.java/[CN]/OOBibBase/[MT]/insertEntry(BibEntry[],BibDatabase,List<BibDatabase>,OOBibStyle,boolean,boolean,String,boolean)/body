{
  try {
    XTextViewCursor xViewCursor=xViewCursorSupplier.getViewCursor();
    if (entries.length > 1) {
      if (style.getBooleanCitProperty(OOBibStyle.MULTI_CITE_CHRONOLOGICAL)) {
        Arrays.sort(entries,yearAuthorTitleComparator);
      }
 else {
        Arrays.sort(entries,entryComparator);
      }
    }
    StringBuilder sb=new StringBuilder();
    for (int i=0; i < entries.length; i++) {
      BibEntry entry=entries[i];
      if (i > 0) {
        sb.append(',');
      }
      sb.append(entry.getCiteKey());
    }
    String keyString=sb.toString();
    String bName=getUniqueReferenceMarkName(keyString,withText ? inParenthesis ? OOBibBase.AUTHORYEAR_PAR : OOBibBase.AUTHORYEAR_INTEXT : OOBibBase.INVISIBLE_CIT);
    if (pageInfo != null) {
      LOGGER.info("Storing page info: " + pageInfo);
      setCustomProperty(bName,pageInfo);
    }
    xViewCursor.getText().insertString(xViewCursor," ",false);
    if (style.isFormatCitations()) {
      XPropertySet xCursorProps=UnoRuntime.queryInterface(XPropertySet.class,xViewCursor);
      String charStyle=style.getCitationCharacterFormat();
      try {
        xCursorProps.setPropertyValue(CHAR_STYLE_NAME,charStyle);
      }
 catch (      UnknownPropertyException|PropertyVetoException|IllegalArgumentException|WrappedTargetException ex) {
        xViewCursor.goLeft((short)1,true);
        xViewCursor.setString("");
        throw new UndefinedCharacterFormatException(charStyle);
      }
    }
    xViewCursor.goLeft((short)1,false);
    String citeText=style.isNumberEntries() ? "-" : style.getCitationMarker(entries,database,inParenthesis,null,null);
    insertReferenceMark(bName,citeText,xViewCursor,withText,style);
    xViewCursor.collapseToEnd();
    xViewCursor.goRight((short)1,false);
    XTextRange position=xViewCursor.getEnd();
    if (sync) {
      updateSortedReferenceMarks();
      refreshCiteMarkers(allBases,style);
      rebuildBibTextSection(allBases,style);
    }
    xViewCursor.gotoRange(position,false);
  }
 catch (  DisposedException ex) {
    throw new ConnectionLostException(ex.getMessage());
  }
}
