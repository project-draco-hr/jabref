{
  BibtexEntry be=db.getEntryById(getIdForRow(row));
  boolean set=false;
  String toSet=null, fieldName=getFieldName(col), text;
  if (value != null) {
    text=value.toString();
    if (text.length() > 0) {
      toSet=text;
      Object o;
      if (((o=be.getField(fieldName)) == null) || ((o != null) && !o.toString().equals(toSet))) {
        set=true;
      }
    }
 else     if (be.getField(fieldName) != null) {
      set=true;
    }
  }
  if (set) {
    try {
      if (toSet != null) {
        (new LatexFieldFormatter()).format(toSet,fieldName);
      }
      Object oldVal=be.getField(fieldName);
      panel.undoManager.addEdit(new net.sf.jabref.undo.UndoableFieldChange(be,fieldName.toLowerCase(),oldVal,toSet));
      be.setField(fieldName,toSet);
      panel.markBaseChanged();
      panel.updateViewToSelected();
    }
 catch (    IllegalArgumentException ex) {
      frame.output("Invalid field format: " + ex.getMessage());
    }
  }
}
