{
  if (change.getOldEntries().size() != change.getNewEntries().size()) {
    return new UndoableChangeAssignment(node,change.getOldEntries(),change.getNewEntries());
  }
  boolean hasEntryChanges=false;
  NamedCompound entryChangeCompound=new NamedCompound(Localization.lang("change entries of group"));
  for (  FieldChange fieldChange : change.getEntryChanges()) {
    hasEntryChanges=true;
    entryChangeCompound.addEdit(new UndoableFieldChange(fieldChange));
  }
  if (hasEntryChanges) {
    entryChangeCompound.end();
    return entryChangeCompound;
  }
  return null;
}
