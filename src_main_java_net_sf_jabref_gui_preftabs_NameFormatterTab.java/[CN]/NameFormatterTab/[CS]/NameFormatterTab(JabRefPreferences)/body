{
  this.prefs=Objects.requireNonNull(prefs);
  setLayout(new BorderLayout());
  TableModel tableModel=new AbstractTableModel(){
    @Override public int getRowCount(){
      return rowCount;
    }
    @Override public int getColumnCount(){
      return 2;
    }
    @Override public Object getValueAt(    int row,    int column){
      if (row >= tableRows.size()) {
        return "";
      }
      TableRow tr=tableRows.get(row);
      if (tr == null) {
        return "";
      }
      if (column == 0) {
        return tr.getName();
      }
 else {
        return tr.getFormat();
      }
    }
    @Override public String getColumnName(    int col){
      return col == 0 ? Localization.lang("Formatter name") : Localization.lang("Format string");
    }
    @Override public Class<String> getColumnClass(    int column){
      return String.class;
    }
    @Override public boolean isCellEditable(    int row,    int col){
      return true;
    }
    @Override public void setValueAt(    Object value,    int row,    int col){
      tableChanged=true;
      while (row >= tableRows.size()) {
        tableRows.add(new TableRow());
      }
      TableRow rowContent=tableRows.get(row);
      if (col == 0) {
        rowContent.setName(value.toString());
      }
 else {
        rowContent.setFormat(value.toString());
      }
    }
  }
;
  table=new JTable(tableModel);
  TableColumnModel columnModel=table.getColumnModel();
  columnModel.getColumn(0).setPreferredWidth(140);
  columnModel.getColumn(1).setPreferredWidth(400);
  FormLayout layout=new FormLayout("1dlu, 8dlu, left:pref, 4dlu, fill:pref","");
  DefaultFormBuilder builder=new DefaultFormBuilder(layout);
  JPanel pan=new JPanel();
  JPanel tabPanel=new JPanel();
  tabPanel.setLayout(new BorderLayout());
  JScrollPane scrollPane=new JScrollPane(table,ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED,ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
  table.setPreferredScrollableViewportSize(new Dimension(250,200));
  scrollPane.setMinimumSize(new Dimension(250,300));
  scrollPane.setPreferredSize(new Dimension(600,300));
  tabPanel.add(scrollPane,BorderLayout.CENTER);
  JToolBar toolBar=new OSXCompatibleToolbar(SwingConstants.VERTICAL);
  toolBar.setFloatable(false);
  toolBar.setBorder(null);
  toolBar.add(new AddRowAction());
  toolBar.add(new DeleteRowAction());
  toolBar.add(new HelpAction(Localization.lang("Help on Name Formatting"),HelpFile.CUSTOM_EXPORTS_NAME_FORMATTER).getHelpButton());
  tabPanel.add(toolBar,BorderLayout.EAST);
  builder.appendSeparator(Localization.lang("Special name formatters"));
  builder.nextLine();
  builder.append(pan);
  builder.append(tabPanel);
  builder.nextLine();
  pan=builder.getPanel();
  pan.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  add(pan,BorderLayout.CENTER);
}
