{
  if (!Desktop.isDesktopSupported()) {
    message=Localization.lang("Error creating email");
    return;
  }
  BasePanel panel=frame.getCurrentBasePanel();
  if (panel == null) {
    return;
  }
  if (panel.getSelectedEntries().isEmpty()) {
    message=Localization.lang("This operation requires one or more entries to be selected.");
    return;
  }
  StringWriter sw=new StringWriter();
  List<BibEntry> bes=panel.getSelectedEntries();
  BibEntryWriter bibtexEntryWriter=new BibEntryWriter(new LatexFieldFormatter(),true);
  for (  BibEntry entry : bes) {
    try {
      bibtexEntryWriter.write(entry,sw,panel.getBibDatabaseContext().getMode());
    }
 catch (    IOException e) {
      LOGGER.warn("Problem creating BibTeX file for mailing.",e);
    }
  }
  ArrayList<String> attachments=new ArrayList<>();
  boolean openFolders=JabRefPreferences.getInstance().getBoolean(JabRefPreferences.OPEN_FOLDERS_OF_ATTACHED_FILES);
  List<File> fileList=FileUtil.getListOfLinkedFiles(bes,frame.getCurrentBasePanel().getBibDatabaseContext().getFileDirectory());
  for (  File f : fileList) {
    attachments.add(f.getPath());
    if (openFolders) {
      try {
        JabRefDesktop.openFolderAndSelectFile(f.getAbsolutePath());
      }
 catch (      IOException e) {
        LOGGER.debug("Cannot open file",e);
      }
    }
  }
  String mailTo="?Body=".concat(sw.getBuffer().toString());
  mailTo=mailTo.concat("&Subject=");
  mailTo=mailTo.concat(JabRefPreferences.getInstance().get(JabRefPreferences.EMAIL_SUBJECT));
  for (  String path : attachments) {
    mailTo=mailTo.concat("&Attachment=\"").concat(path);
    mailTo=mailTo.concat("\"");
  }
  URI uriMailTo;
  try {
    uriMailTo=new URI("mailto",mailTo,null);
  }
 catch (  URISyntaxException e1) {
    message=Localization.lang("Error creating email");
    LOGGER.warn(message,e1);
    return;
  }
  Desktop desktop=Desktop.getDesktop();
  try {
    desktop.mail(uriMailTo);
  }
 catch (  IOException e) {
    message=Localization.lang("Error creating email");
    LOGGER.warn(message,e);
    return;
  }
  message=String.format("%s: %d",Localization.lang("Entries added to an email"),bes.size());
}
