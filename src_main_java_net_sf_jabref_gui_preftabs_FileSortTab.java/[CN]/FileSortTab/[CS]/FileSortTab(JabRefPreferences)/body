{
  this.prefs=prefs;
  FormLayout layout=new FormLayout("4dlu, left:pref, 4dlu, fill:pref","");
  DefaultFormBuilder builder=new DefaultFormBuilder(layout);
  builder.leadingColumnOffset(1);
  exportInOriginalOrder=new JRadioButton(Localization.lang("Export entries in their original order"));
  exportInTableOrder=new JRadioButton(Localization.lang("Export in current table sort order"));
  exportInSpecifiedOrder=new JRadioButton(Localization.lang("Export entries ordered as specified"));
  ButtonGroup buttonGroup=new ButtonGroup();
  buttonGroup.add(exportInOriginalOrder);
  buttonGroup.add(exportInTableOrder);
  buttonGroup.add(exportInSpecifiedOrder);
  ActionListener listener=new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      boolean selected=e.getSource() == exportInSpecifiedOrder;
      exportPriSort.setEnabled(selected);
      exportPriField.setEnabled(selected);
      exportPriDesc.setEnabled(selected);
      exportSecSort.setEnabled(selected);
      exportSecField.setEnabled(selected);
      exportSecDesc.setEnabled(selected);
      exportTerSort.setEnabled(selected);
      exportTerField.setEnabled(selected);
      exportTerDesc.setEnabled(selected);
    }
  }
;
  exportInOriginalOrder.addActionListener(listener);
  exportInTableOrder.addActionListener(listener);
  exportInSpecifiedOrder.addActionListener(listener);
  ArrayList<String> fieldNames=new ArrayList<>(BibtexFields.getAllFieldNames());
  fieldNames.add(BibEntry.KEY_FIELD);
  Collections.sort(fieldNames);
  String[] allPlusKey=fieldNames.toArray(new String[fieldNames.size()]);
  exportPriSort=new JComboBox<>(allPlusKey);
  exportSecSort=new JComboBox<>(allPlusKey);
  exportTerSort=new JComboBox<>(allPlusKey);
  exportPriField=new JTextField(10);
  exportSecField=new JTextField(10);
  exportTerField=new JTextField(10);
  exportPriSort.insertItemAt(Localization.lang("<select>"),0);
  exportSecSort.insertItemAt(Localization.lang("<select>"),0);
  exportTerSort.insertItemAt(Localization.lang("<select>"),0);
  exportPriSort.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (exportPriSort.getSelectedIndex() > 0) {
        exportPriField.setText(exportPriSort.getSelectedItem().toString());
        exportPriSort.setSelectedIndex(0);
      }
    }
  }
);
  exportSecSort.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (exportSecSort.getSelectedIndex() > 0) {
        exportSecField.setText(exportSecSort.getSelectedItem().toString());
        exportSecSort.setSelectedIndex(0);
      }
    }
  }
);
  exportTerSort.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (exportTerSort.getSelectedIndex() > 0) {
        exportTerField.setText(exportTerSort.getSelectedItem().toString());
        exportTerSort.setSelectedIndex(0);
      }
    }
  }
);
  exportPriDesc=new JCheckBox(Localization.lang("Descending"));
  exportSecDesc=new JCheckBox(Localization.lang("Descending"));
  exportTerDesc=new JCheckBox(Localization.lang("Descending"));
  JLabel lab;
  builder.appendSeparator(Localization.lang("Export sort order"));
  builder.append(exportInOriginalOrder,1);
  builder.nextLine();
  builder.append(exportInTableOrder,1);
  builder.nextLine();
  builder.append(exportInSpecifiedOrder,1);
  builder.nextLine();
  FormLayout layout2=new FormLayout("right:pref, 8dlu, fill:pref, 4dlu, fill:60dlu, 4dlu, left:pref","");
  DefaultFormBuilder builder2=new DefaultFormBuilder(layout2);
  lab=new JLabel(Localization.lang("Primary sort criterion"));
  builder2.append(lab);
  builder2.append(exportPriSort);
  builder2.append(exportPriField);
  builder2.append(exportPriDesc);
  builder2.nextLine();
  lab=new JLabel(Localization.lang("Secondary sort criterion"));
  builder2.append(lab);
  builder2.append(exportSecSort);
  builder2.append(exportSecField);
  builder2.append(exportSecDesc);
  builder2.nextLine();
  lab=new JLabel(Localization.lang("Tertiary sort criterion"));
  builder2.append(lab);
  builder2.append(exportTerSort);
  builder2.append(exportTerField);
  builder2.append(exportTerDesc);
  builder.append(builder2.getPanel());
  builder.nextLine();
  JPanel pan=builder.getPanel();
  pan.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  setLayout(new BorderLayout());
  add(pan,BorderLayout.CENTER);
}
