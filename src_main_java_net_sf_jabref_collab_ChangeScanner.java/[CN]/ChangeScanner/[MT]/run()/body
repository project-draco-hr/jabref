{
  try {
    Path tempFile=Globals.getFileUpdateMonitor().getTempFile(panel.fileMonitorHandle());
    ImportFormatPreferences importFormatPreferences=ImportFormatPreferences.fromPreferences(Globals.prefs);
    ParserResult result=OpenDatabase.loadDatabase(tempFile.toFile(),importFormatPreferences);
    databaseInTemp=result.getDatabase();
    metadataInTemp=result.getMetaData();
    result=OpenDatabase.loadDatabase(file,importFormatPreferences);
    BibDatabase databaseOnDisk=result.getDatabase();
    MetaData metadataOnDisk=result.getMetaData();
    EntryComparator comparator=new EntryComparator(false,true,SORT_BY[2]);
    comparator=new EntryComparator(false,true,SORT_BY[1],comparator);
    comparator=new EntryComparator(false,true,SORT_BY[0],comparator);
    EntrySorter sorterInTemp=databaseInTemp.getSorter(comparator);
    comparator=new EntryComparator(false,true,SORT_BY[2]);
    comparator=new EntryComparator(false,true,SORT_BY[1],comparator);
    comparator=new EntryComparator(false,true,SORT_BY[0],comparator);
    EntrySorter sorterOnDisk=databaseOnDisk.getSorter(comparator);
    comparator=new EntryComparator(false,true,SORT_BY[2]);
    comparator=new EntryComparator(false,true,SORT_BY[1],comparator);
    comparator=new EntryComparator(false,true,SORT_BY[0],comparator);
    EntrySorter sorterInMem=databaseInMemory.getSorter(comparator);
    scanMetaData(metadataInMemory,metadataInTemp,metadataOnDisk);
    scanPreamble(databaseInMemory,databaseInTemp,databaseOnDisk);
    scanStrings(databaseInMemory,databaseInTemp,databaseOnDisk);
    scanEntries(sorterInMem,sorterInTemp,sorterOnDisk);
    scanGroups(metadataInTemp,metadataOnDisk);
  }
 catch (  IOException ex) {
    LOGGER.warn("Problem running",ex);
  }
}
