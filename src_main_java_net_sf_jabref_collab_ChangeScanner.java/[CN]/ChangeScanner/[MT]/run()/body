{
  try {
    Path tempFile=Globals.getFileUpdateMonitor().getTempFile(panel.fileMonitorHandle());
    ImportFormatPreferences importFormatPreferences=ImportFormatPreferences.fromPreferences(Globals.prefs);
    ParserResult pr=OpenDatabase.loadDatabase(tempFile.toFile(),importFormatPreferences);
    inTemp=pr.getDatabase();
    mdInTemp=pr.getMetaData();
    pr=OpenDatabase.loadDatabase(f,importFormatPreferences);
    BibDatabase onDisk=pr.getDatabase();
    MetaData mdOnDisk=pr.getMetaData();
    EntryComparator comp=new EntryComparator(false,true,SORT_BY[2]);
    comp=new EntryComparator(false,true,SORT_BY[1],comp);
    comp=new EntryComparator(false,true,SORT_BY[0],comp);
    EntrySorter sInTemp=inTemp.getSorter(comp);
    comp=new EntryComparator(false,true,SORT_BY[2]);
    comp=new EntryComparator(false,true,SORT_BY[1],comp);
    comp=new EntryComparator(false,true,SORT_BY[0],comp);
    EntrySorter sOnDisk=onDisk.getSorter(comp);
    comp=new EntryComparator(false,true,SORT_BY[2]);
    comp=new EntryComparator(false,true,SORT_BY[1],comp);
    comp=new EntryComparator(false,true,SORT_BY[0],comp);
    EntrySorter sInMem=inMem.getSorter(comp);
    scanMetaData(mdInMem,mdInTemp,mdOnDisk);
    scanPreamble(inMem,inTemp,onDisk);
    scanStrings(inMem,inTemp,onDisk);
    scanEntries(sInMem,sInTemp,sOnDisk);
    scanGroups(mdInTemp,mdOnDisk);
  }
 catch (  IOException ex) {
    LOGGER.warn("Problem running",ex);
  }
}
