{
  stringBuilder.append(valueDelimiterStartOfValue);
  boolean escape=false;
  boolean inCommandName=false;
  boolean inCommand=false;
  boolean inCommandOption=false;
  int nestedEnvironments=0;
  StringBuilder commandName=new StringBuilder();
  char c;
  for (int i=startPos; i < endPos; i++) {
    c=text.charAt(i);
    if (Character.isLetter(c) && (escape || inCommandName)) {
      inCommandName=true;
      if (!inCommandOption) {
        commandName.append(c);
      }
    }
 else     if (Character.isWhitespace(c) && (inCommand || inCommandOption)) {
    }
 else     if (inCommandName) {
      if (c == '[') {
        inCommandOption=true;
      }
 else       if (inCommandOption && (c == ']')) {
        inCommandOption=false;
      }
 else       if (!inCommandOption && (c == '{')) {
        inCommandName=false;
        inCommand=true;
      }
 else {
        commandName.delete(0,commandName.length());
        inCommandName=false;
      }
    }
    if (inCommand && (c == '}')) {
      if ("begin".equals(commandName.toString())) {
        nestedEnvironments++;
      }
      if ((nestedEnvironments > 0) && "end".equals(commandName.toString())) {
        nestedEnvironments--;
      }
      commandName.delete(0,commandName.length());
      inCommand=false;
    }
    if ((c == '&') && !escape && !(inCommand && "url".equals(commandName.toString()))&& (nestedEnvironments == 0)) {
      stringBuilder.append("\\&");
    }
 else {
      stringBuilder.append(c);
    }
    escape=c == '\\';
  }
  stringBuilder.append(valueDelimiterEndOfValue);
}
