{
  BibEntry result;
  Map<String,String> fieldValues=new HashMap<>();
  String bibTexEntryType=MSBibMapping.getBibLaTeXEntryType(entry.getType());
  if (entry.getCiteKey() == null) {
    result=new BibEntry(ImportFormat.DEFAULT_BIBTEXENTRY_ID,bibTexEntryType);
  }
 else {
    result=new BibEntry(entry.getCiteKey(),bibTexEntryType);
  }
  for (  Map.Entry<String,String> field : entry.fields.entrySet()) {
    String msField=field.getKey();
    String value=field.getValue();
    if ((value != null) && (MSBibMapping.getBibTeXField(msField) != null)) {
      fieldValues.put(MSBibMapping.getBibTeXField(msField),value);
    }
  }
  if (fieldValues.containsKey(FieldName.LANGUAGE)) {
    int lcid=Integer.valueOf(fieldValues.get(FieldName.LANGUAGE));
    fieldValues.put(FieldName.LANGUAGE,MSBibMapping.getLanguage(lcid));
  }
  addAuthor(fieldValues,FieldName.AUTHOR,entry.authors);
  addAuthor(fieldValues,MSBIB_PREFIX + FieldName.BOOKAUTHOR,entry.bookAuthors);
  addAuthor(fieldValues,FieldName.EDITOR,entry.editors);
  addAuthor(fieldValues,MSBIB_PREFIX + FieldName.TRANSLATOR,entry.translators);
  addAuthor(fieldValues,MSBIB_PREFIX + "producername",entry.producerNames);
  addAuthor(fieldValues,MSBIB_PREFIX + "composer",entry.composers);
  addAuthor(fieldValues,MSBIB_PREFIX + "conductor",entry.conductors);
  addAuthor(fieldValues,MSBIB_PREFIX + "performer",entry.performers);
  addAuthor(fieldValues,MSBIB_PREFIX + "writer",entry.writers);
  addAuthor(fieldValues,MSBIB_PREFIX + "director",entry.directors);
  addAuthor(fieldValues,MSBIB_PREFIX + "compiler",entry.compilers);
  addAuthor(fieldValues,MSBIB_PREFIX + "interviewer",entry.interviewers);
  addAuthor(fieldValues,MSBIB_PREFIX + "interviewee",entry.interviewees);
  addAuthor(fieldValues,MSBIB_PREFIX + "inventor",entry.inventors);
  addAuthor(fieldValues,MSBIB_PREFIX + "counsel",entry.counsels);
  if (entry.pages != null) {
    fieldValues.put(FieldName.PAGES,entry.pages.toString("--"));
  }
  parseStandardNumber(entry.standardNumber,fieldValues);
  if (entry.address != null) {
    fieldValues.put(FieldName.LOCATION,entry.address);
  }
  if (entry.conferenceName != null) {
    fieldValues.put(FieldName.ORGANIZATION,entry.conferenceName);
  }
  if (entry.dateAccessed != null) {
    fieldValues.put(MSBIB_PREFIX + "accessed",entry.dateAccessed);
  }
  if (entry.journalName != null) {
    fieldValues.put(FieldName.JOURNALTITLE,entry.journalName);
  }
  if (entry.month != null) {
    Month month=MonthUtil.getMonth(entry.month);
    fieldValues.put(FieldName.MONTH,month.shortName);
  }
  if (entry.number != null) {
    fieldValues.put(FieldName.NUMBER,entry.number);
  }
  result.setField(fieldValues);
  return result;
}
