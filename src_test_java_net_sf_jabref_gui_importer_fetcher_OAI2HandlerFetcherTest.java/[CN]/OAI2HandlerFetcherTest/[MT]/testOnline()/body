{
{
    OAI2Fetcher fetcher=new OAI2Fetcher();
    be=fetcher.importOai2Entry("math.RA/0612188");
    Assert.assertNotNull(be);
    Assert.assertEquals(Optional.of("math/0612188"),be.getField("eprint"));
    Assert.assertEquals(Optional.of("On the classification and properties of noncommutative duplicates"),be.getField("title"));
    Assert.assertEquals(Optional.of("Javier L??pez Pe??a and Gabriel Navarro"),be.getField("author"));
    Assert.assertEquals(Optional.of("2007"),be.getField("year"));
    Thread.sleep(20000);
  }
{
    OAI2Fetcher fetcher=new OAI2Fetcher();
    be=fetcher.importOai2Entry("astro-ph/0702080");
    Assert.assertNotNull(be);
    Assert.assertEquals(Optional.of("astro-ph/0702080"),be.getField("eprint"));
    Assert.assertEquals(Optional.of("Magnetized Hypermassive Neutron Star Collapse: a candidate central engine for short-hard GRBs"),be.getField("title"));
    Thread.sleep(20000);
  }
{
    OAI2Fetcher fetcher=new OAI2Fetcher();
    be=fetcher.importOai2Entry("math.QA/0601001");
    Assert.assertNotNull(be);
    Assert.assertEquals(Optional.of("math/0601001"),be.getField("eprint"));
    Thread.sleep(20000);
  }
{
    OAI2Fetcher fetcher=new OAI2Fetcher();
    be=fetcher.importOai2Entry("hep-ph/0408155");
    Assert.assertNotNull(be);
    Assert.assertEquals(Optional.of("hep-ph/0408155"),be.getField("eprint"));
    Thread.sleep(20000);
  }
  OAI2Fetcher fetcher=new OAI2Fetcher();
  be=fetcher.importOai2Entry("0709.3040");
  Assert.assertNotNull(be);
  Assert.assertEquals(Optional.of("2007"),be.getField("year"));
  Assert.assertEquals(Optional.of("#sep#"),be.getField("month"));
}
