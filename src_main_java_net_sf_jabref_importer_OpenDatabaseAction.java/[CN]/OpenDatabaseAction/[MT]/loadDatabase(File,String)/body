{
  Reader reader;
  String suppliedEncoding=null;
  try (Reader utf8Reader=ImportFormatReader.getUTF8Reader(fileToOpen)){
    suppliedEncoding=OpenDatabaseAction.checkForEncoding(utf8Reader);
    utf8Reader.close();
  }
   if (suppliedEncoding == null) {
    try (Reader utf16Reader=ImportFormatReader.getUTF16Reader(fileToOpen)){
      suppliedEncoding=OpenDatabaseAction.checkForEncoding(utf16Reader);
      utf16Reader.close();
    }
   }
  if (suppliedEncoding != null) {
    try {
      reader=ImportFormatReader.getReader(fileToOpen,suppliedEncoding);
      encoding=suppliedEncoding;
    }
 catch (    Exception ex) {
      ex.printStackTrace();
      reader=ImportFormatReader.getReader(fileToOpen,encoding);
    }
  }
 else {
    reader=ImportFormatReader.getReader(fileToOpen,encoding);
  }
  BibtexParser bp=new BibtexParser(reader);
  ParserResult pr=bp.parse();
  pr.setEncoding(encoding);
  pr.setFile(fileToOpen);
  if (SpecialFieldsUtils.keywordSyncEnabled()) {
    for (    BibtexEntry entry : pr.getDatabase().getEntries()) {
      SpecialFieldsUtils.syncSpecialFieldsFromKeywords(entry,null);
    }
    LOGGER.info(Localization.lang("Synchronized special fields based on keywords"));
  }
  if (!pr.getMetaData().isGroupTreeValid()) {
    pr.addWarning(Localization.lang("Group tree could not be parsed. If you save the BibTeX database, all groups will be lost."));
  }
  return pr;
}
