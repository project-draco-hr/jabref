{
  BasePanel toRaise=null;
  int initialCount=filesToOpen.size();
  int removed=0;
  for (Iterator<File> iterator=filesToOpen.iterator(); iterator.hasNext(); ) {
    File file=iterator.next();
    for (int i=0; i < frame.getTabbedPane().getTabCount(); i++) {
      BasePanel basePanel=frame.getBasePanelAt(i);
      if ((basePanel.getBibDatabaseContext().getDatabaseFile() != null) && basePanel.getBibDatabaseContext().getDatabaseFile().equals(file)) {
        iterator.remove();
        removed++;
        if (removed == initialCount) {
          toRaise=basePanel;
        }
        break;
      }
    }
  }
  if (!filesToOpen.isEmpty()) {
    final List<File> theFiles=Collections.unmodifiableList(filesToOpen);
    JabRefExecutorService.INSTANCE.execute(new Runnable(){
      @Override public void run(){
        for (        File theFile : theFiles) {
          openTheFile(theFile,raisePanel);
        }
      }
    }
);
    for (    File theFile : theFiles) {
      frame.getFileHistory().newFile(theFile.getPath());
    }
  }
 else   if (toRaise != null) {
    frame.output(Localization.lang("File '%0' is already open.",toRaise.getBibDatabaseContext().getDatabaseFile().getPath()));
    frame.getTabbedPane().setSelectedComponent(toRaise);
  }
  frame.output(Localization.lang("Files opened") + ": " + (filesToOpen.size()));
}
