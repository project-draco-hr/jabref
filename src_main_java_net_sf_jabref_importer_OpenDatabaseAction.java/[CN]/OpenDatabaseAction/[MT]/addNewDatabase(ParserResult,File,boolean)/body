{
  String fileName=file.getPath();
  BibDatabase database=result.getDatabase();
  MetaData meta=result.getMetaData();
  if (result.hasWarnings()) {
    final String[] warnings=result.warnings();
    JabRefExecutorService.INSTANCE.execute(new Runnable(){
      @Override public void run(){
        StringBuilder warningString=new StringBuilder();
        for (int i=0; i < warnings.length; i++) {
          warningString.append(i + 1).append(". ").append(warnings[i]).append("\n");
        }
        if (warningString.length() > 0) {
          warningString.deleteCharAt(warningString.length() - 1);
        }
        JOptionPane.showMessageDialog(frame,warningString.toString(),Localization.lang("Warnings") + " (" + file.getName()+ ")",JOptionPane.WARNING_MESSAGE);
      }
    }
);
  }
  BasePanel basePanel=new BasePanel(frame,database,file,meta,result.getEncoding());
  SwingUtilities.invokeLater(new OpenItSwingHelper(basePanel,file,raisePanel));
  frame.output(Localization.lang("Opened database") + " '" + fileName+ "' "+ Localization.lang("with")+ " "+ database.getEntryCount()+ " "+ Localization.lang("entries")+ ".");
  return basePanel;
}
