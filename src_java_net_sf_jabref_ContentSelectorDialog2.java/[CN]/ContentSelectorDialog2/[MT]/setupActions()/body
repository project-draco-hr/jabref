{
  wordList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      wordEditField.setText((String)wordList.getSelectedValue());
      wordEditField.selectAll();
      new FocusRequester(wordEditField);
    }
  }
);
  newWord.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      newWordAction();
    }
  }
);
  wordEditFieldListener=new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      int index=wordList.getSelectedIndex();
      String old=(String)wordList.getSelectedValue(), newVal=wordEditField.getText();
      if (newVal.equals("") || newVal.equals(old))       return;
      int newIndex=findPos(wordListModel,newVal);
      if (index >= 0) {
        wordListModel.remove(index);
        wordListModel.add((newIndex <= index ? newIndex : newIndex - 1),newVal);
      }
 else       wordListModel.add(newIndex,newVal);
      wordEditField.selectAll();
    }
  }
;
  wordEditField.addActionListener(wordEditFieldListener);
  removeWord.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      int index=wordList.getSelectedIndex();
      if (index == -1)       return;
      wordListModel.remove(index);
      wordEditField.setText("");
      if (wordListModel.size() > 0)       wordList.setSelectedIndex(Math.min(index,wordListModel.size() - 1));
    }
  }
);
  fieldList.addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      currentField=(String)fieldList.getSelectedValue();
      fieldNameField.setText("");
      setupWordSelector();
    }
  }
);
  newField.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      fieldListModel.add(0,FIELD_FIRST_LINE);
      fieldList.setSelectedIndex(0);
      fPane.getVerticalScrollBar().setValue(0);
      fieldNameField.setEnabled(true);
      fieldNameField.setText(currentField);
      fieldNameField.selectAll();
      new FocusRequester(fieldNameField);
    }
  }
);
  fieldNameField.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      fieldNameField.transferFocus();
    }
  }
);
  fieldNameField.addFocusListener(new FocusAdapter(){
    public void focusLost(    FocusEvent e){
      String s=fieldNameField.getText();
      fieldNameField.setText("");
      fieldNameField.setEnabled(false);
      if (!FIELD_FIRST_LINE.equals(s) && !"".equals(s)) {
        int pos=findPos(fieldListModel,s);
        fieldListModel.remove(0);
        fieldListModel.add(Math.max(0,pos - 1),s);
        fieldList.setSelectedIndex(pos);
        currentField=s;
        setupWordSelector();
        newWordAction();
      }
    }
  }
);
  removeField.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      int index=fieldList.getSelectedIndex();
      if (index == -1)       return;
      String fieldName=(String)fieldListModel.get(index);
      removedFields.add(fieldName);
      fieldListModel.remove(index);
      wordListModels.remove(fieldName);
      fieldNameField.setText("");
      if (fieldListModel.size() > 0)       fieldList.setSelectedIndex(Math.min(index,wordListModel.size() - 1));
    }
  }
);
  help.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      frame.helpDiag.showPage(GUIGlobals.contentSelectorHelp);
    }
  }
);
  ok.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      applyChanges();
      dispose();
    }
  }
);
  apply.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      applyChanges();
    }
  }
);
  cancel.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      dispose();
    }
  }
);
}
