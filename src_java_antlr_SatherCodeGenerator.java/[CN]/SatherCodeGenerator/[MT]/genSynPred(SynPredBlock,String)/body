{
  if (DEBUG_CODE_GENERATOR)   System.out.println("gen=>(" + blk + ")");
  println("syn_pred_matched" + blk.ID + " : BOOL := false;");
  println("if (" + lookaheadExpr + ") then");
  tabs++;
  if (grammar instanceof TreeWalkerGrammar) {
    println("sa__t" + blk.ID + " "+ labeledElementASTType+ " := sa_t;");
  }
 else {
    println("sa_m" + blk.ID + " : INT := mark;");
  }
  println("syn_pred_matched" + blk.ID + " := true;");
  println("input_state.guessing := input_state.guessing + 1;");
  if (grammar.debuggingOutput && ((grammar instanceof ParserGrammar) || (grammar instanceof LexerGrammar))) {
    println("fireSyntacticPredicateStarted();");
  }
  syntacticPredLevel++;
  println("protect");
  tabs++;
  gen((AlternativeBlock)blk);
  tabs--;
  println("when " + exceptionThrown + " then");
  tabs++;
  println("syn_pred_matched" + blk.ID + " := false;");
  tabs--;
  println("end; -- protect");
  if (grammar instanceof TreeWalkerGrammar) {
    println("sa_t := sa__t" + blk.ID + ";");
  }
 else {
    println("rewind( sa_m" + blk.ID + " );");
  }
  println("input_state.guessing := input_state.guessing - 1;");
  if (grammar.debuggingOutput && ((grammar instanceof ParserGrammar) || (grammar instanceof LexerGrammar))) {
    println("if ( syn_pred_matched" + blk.ID + " ) then");
    tabs++;
    println("fireSyntacticPredicateSucceeded();");
    tabs--;
    println("else");
    tabs++;
    println("  fireSyntacticPredicateFailed();");
    tabs--;
    println("end; -- if");
  }
  syntacticPredLevel--;
  tabs--;
  println("end; -- if");
  println("if ( syn_pred_matched" + blk.ID + " ) then");
}
