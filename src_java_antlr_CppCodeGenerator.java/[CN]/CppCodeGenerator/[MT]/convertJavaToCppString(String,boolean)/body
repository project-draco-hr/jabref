{
  String ret=new String();
  String s=lit;
  int i=0;
  int val=0;
  if (isCharLiteral) {
    if (!lit.startsWith("'") || !lit.endsWith("'"))     antlrTool.error("Invalid character literal: '" + lit + "'");
    s=lit.substring(1,lit.length() - 1);
  }
  while (i < s.length()) {
    if (s.charAt(i) == '\\') {
      if (s.length() == i + 1)       antlrTool.error("Invalid escape in char literal: '" + lit + "' looking at '"+ s.substring(i)+ "'");
switch (s.charAt(i + 1)) {
case 'a':
        val=7;
      i+=2;
    break;
case 'b':
  val=8;
i+=2;
break;
case 't':
val=9;
i+=2;
break;
case 'n':
val=10;
i+=2;
break;
case 'f':
val=12;
i+=2;
break;
case 'r':
val=13;
i+=2;
break;
case '"':
case '\'':
case '\\':
val=s.charAt(i + 1);
i+=2;
break;
case 'u':
if (i + 5 < s.length()) {
val=Character.digit(s.charAt(i + 2),16) * 16 * 16* 16 + Character.digit(s.charAt(i + 3),16) * 16 * 16 + Character.digit(s.charAt(i + 4),16) * 16 + Character.digit(s.charAt(i + 5),16);
i+=6;
}
 else antlrTool.error("Invalid escape in char literal: '" + lit + "' looking at '"+ s.substring(i)+ "'");
break;
case '0':
case '1':
case '2':
case '3':
if (charIsDigit(s,i + 2)) {
if (charIsDigit(s,i + 3)) {
val=(s.charAt(i + 1) - '0') * 8 * 8 + (s.charAt(i + 2) - '0') * 8 + (s.charAt(i + 3) - '0');
i+=4;
}
 else {
val=(s.charAt(i + 1) - '0') * 8 + (s.charAt(i + 2) - '0');
i+=3;
}
}
 else {
val=s.charAt(i + 1) - '0';
i+=2;
}
break;
case '4':
case '5':
case '6':
case '7':
if (charIsDigit(s,i + 2)) {
val=(s.charAt(i + 1) - '0') * 8 + (s.charAt(i + 2) - '0');
i+=3;
}
 else {
val=s.charAt(i + 1) - '0';
i+=2;
}
default :
antlrTool.error("Unhandled escape in char literal: '" + lit + "' looking at '"+ s.substring(i)+ "'");
val=0;
}
}
 else val=s.charAt(i++);
if (isCharLiteral) {
if (i != s.length()) antlrTool.error("Invalid char literal: '" + lit + "'");
if (val > 255) antlrTool.error("Multibyte character found in char literal: '" + lit + "'");
 else if (val == 255) ret="static_cast<unsigned char>(255)";
 else ret="'" + charFormatter.escapeChar(val,true) + "'";
}
 else {
if (val >= ' ' && val <= 126) ret+=(char)val;
 else if (val > 255) antlrTool.error("Multibyte character found in string constant: '" + s + "'");
 else ret+=charFormatter.escapeChar(val,true);
}
}
return ret;
}
