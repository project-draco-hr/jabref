{
  VM vm=new VM("FUNCTION {not}	{   { #0 }	    { #1 }  if$	}" + "FUNCTION {and}	{   'skip$	    { pop$ #0 }	  if$	}" + "FUNCTION {or}	{   { pop$ #1 }	    'skip$	  if$	}"+ "FUNCTION {test} { "+ "#1 #1 and #0 #1 and #1 #0 and #0 #0 and "+ "#0 not #1 not "+ "#1 #1 or #0 #1 or #1 #0 or #0 #0 or }"+ "EXECUTE {test}");
  Vector v=new Vector();
  vm.run(v);
  assertEquals(VM.FALSE,vm.getStack().pop());
  assertEquals(VM.TRUE,vm.getStack().pop());
  assertEquals(VM.TRUE,vm.getStack().pop());
  assertEquals(VM.TRUE,vm.getStack().pop());
  assertEquals(VM.FALSE,vm.getStack().pop());
  assertEquals(VM.TRUE,vm.getStack().pop());
  assertEquals(VM.FALSE,vm.getStack().pop());
  assertEquals(VM.FALSE,vm.getStack().pop());
  assertEquals(VM.FALSE,vm.getStack().pop());
  assertEquals(VM.TRUE,vm.getStack().pop());
  assertEquals(0,vm.getStack().size());
}
