{
  HashMap<String,Object> fieldFormatters=new HashMap<String,Object>();
  fieldFormatters.put("default",new RemoveLatexCommands());
  fieldFormatters.put("author",new Object[]{new AuthorLastFirst(),new RemoveLatexCommands()});
  fieldFormatters.put("pdf",new ResolvePDF());
  String SEPARATOR="\t";
  List<BibtexEntry> sorted=getSortedEntries(database,null,true);
  Set<String> fields=new TreeSet<String>();
  for (int i=0, len=BibtexFields.numberOfPublicFields(); i < len; i++)   fields.add(BibtexFields.getFieldName(i));
  Object[] o=fields.toArray();
  FileWriter out=new FileWriter(outFile);
  out.write((String)o[0]);
  for (int i=1; i < o.length; i++) {
    out.write(SEPARATOR + (String)o[i]);
  }
  out.write(Globals.NEWLINE);
  for (  BibtexEntry entry : sorted) {
    writeField(database,entry,(String)o[0],fieldFormatters,out);
    for (int j=1; j < o.length; j++) {
      out.write(SEPARATOR);
      writeField(database,entry,(String)o[j],fieldFormatters,out);
    }
    out.write(Globals.NEWLINE);
  }
  out.close();
}
