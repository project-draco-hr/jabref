{
  if (!databaseContext.getMetaData().getDefaultFileDirectory().isPresent()) {
    return Collections.emptyList();
  }
  List<String> paths=databaseContext.getFileDirectory(fileDirectoryPreferences);
  String defaultFileDirectory=databaseContext.getMetaData().getDefaultFileDirectory().get();
  Optional<File> targetDirectory=FileUtil.expandFilename(defaultFileDirectory,paths);
  if (!targetDirectory.isPresent()) {
    return Collections.emptyList();
  }
  TypedBibEntry typedEntry=new TypedBibEntry(entry,databaseContext);
  List<ParsedFileField> fileList=typedEntry.getFiles();
  List<ParsedFileField> newFileList=new ArrayList<>();
  boolean changed=false;
  for (  ParsedFileField fileEntry : fileList) {
    String oldFileName=fileEntry.getLink();
    Optional<File> oldFile=FileUtil.expandFilename(oldFileName,paths);
    if (!oldFile.isPresent() || !oldFile.get().exists()) {
      newFileList.add(fileEntry);
      continue;
    }
    File targetFile=new File(targetDirectory.get(),oldFile.get().getName());
    if (targetFile.exists()) {
      newFileList.add(fileEntry);
      continue;
    }
    oldFile.get().renameTo(targetFile);
    String newFileName=targetFile.getName();
    ParsedFileField newFileEntry=fileEntry;
    if (!oldFileName.equals(newFileName)) {
      newFileEntry=new ParsedFileField(fileEntry.getDescription(),newFileName,fileEntry.getFileType());
      changed=true;
    }
    newFileList.add(newFileEntry);
  }
  if (changed) {
    Optional<FieldChange> change=typedEntry.setFiles(newFileList);
    if (change.isPresent()) {
      return Collections.singletonList(change.get());
    }
 else {
      return Collections.emptyList();
    }
  }
  return Collections.emptyList();
}
