{
  this.frame=frame;
  this.panel=panel;
  this.fields=fields;
  this.undoName=undoName;
  this.newDatabase=newDatabase;
  tableModel.addColumn(Globals.lang("Keep"));
  for (int i=0; i < fields.length; i++) {
    tableModel.addColumn(Util.nCase(fields[i]));
    Object o=GUIGlobals.fieldLength.get(fields[i]);
    int width=o == null ? GUIGlobals.DEFAULT_FIELD_LENGTH : ((Integer)o).intValue();
    table.getColumnModel().getColumn(i + 1).setPreferredWidth(width);
  }
  table.getColumnModel().getColumn(0).setPreferredWidth(25);
  table.setRowSelectionAllowed(false);
  table.setCellSelectionEnabled(false);
  getContentPane().setLayout(new BorderLayout());
  progressBar.setIndeterminate(true);
  JPanel centerPan=new JPanel();
  centerPan.setLayout(new BorderLayout());
  centerPan.add(new JScrollPane(table),BorderLayout.CENTER);
  centerPan.add(progressBar,BorderLayout.SOUTH);
  getContentPane().add(centerPan,BorderLayout.CENTER);
  ButtonBarBuilder bb=new ButtonBarBuilder();
  bb.addGlue();
  bb.addGridded(ok);
  bb.addGridded(stop);
  bb.addGridded(cancel);
  bb.addGlue();
  bb.getPanel().setBorder(BorderFactory.createEmptyBorder(2,2,2,2));
  ButtonStackBuilder builder=new ButtonStackBuilder();
  builder.addGridded(selectAll);
  builder.addGridded(deselectAll);
  builder.getPanel().setBorder(BorderFactory.createEmptyBorder(2,2,2,2));
  centerPan.add(builder.getPanel(),BorderLayout.WEST);
  ok.setEnabled(false);
  ok.addActionListener(new OkListener());
  cancel.addActionListener(new CancelListener());
  stop.addActionListener(new StopListener());
  selectAll.addActionListener(new SelectionButton(true));
  deselectAll.addActionListener(new SelectionButton(false));
  getContentPane().add(bb.getPanel(),BorderLayout.SOUTH);
  setSize(new Dimension(650,500));
}
