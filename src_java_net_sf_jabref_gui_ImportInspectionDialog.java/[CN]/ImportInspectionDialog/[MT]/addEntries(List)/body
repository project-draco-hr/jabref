{
synchronized (this.entries) {
    for (Iterator i=entries.iterator(); i.hasNext(); ) {
      BibtexEntry entry=(BibtexEntry)i.next();
      this.entries.add(entry);
      Object[] values=new Object[tableModel.getColumnCount()];
      values[0]=Boolean.TRUE;
      if (entry.getField("pdf") != null) {
        JLabel lab=new JLabel(new ImageIcon(GUIGlobals.pdfIcon));
        lab.setToolTipText((String)entry.getField("pdf"));
        values[1]=lab;
      }
 else       values[1]=null;
      if (entry.getField("ps") != null) {
        JLabel lab=new JLabel(new ImageIcon(GUIGlobals.psIcon));
        lab.setToolTipText((String)entry.getField("ps"));
        values[2]=lab;
      }
 else       values[2]=null;
      if (entry.getField("url") != null) {
        JLabel lab=new JLabel(new ImageIcon(GUIGlobals.wwwIcon));
        lab.setToolTipText((String)entry.getField("url"));
        values[3]=lab;
      }
 else       values[3]=null;
      for (int j=0; j < fields.length; j++)       values[4 + j]=entry.getField(fields[j]);
      tableModel.addRow(values);
    }
  }
}
