{
  _prefs=prefs;
  this.frame=frame;
  setLayout(new BorderLayout());
  Vector v=new Vector(Arrays.asList(BibtexFields.getAllFieldNames()));
  v.add(BibtexFields.KEY_FIELD);
  Collections.sort(v);
  Object[] allPlusKey=v.toArray();
  priSort=new JComboBox(allPlusKey);
  secSort=new JComboBox(allPlusKey);
  terSort=new JComboBox(allPlusKey);
  autoResizeMode=new JCheckBox(Globals.lang("Fit table horizontally on screen"));
  namesAsIs=new JRadioButton(Globals.lang("Show names unchanged"));
  namesFf=new JRadioButton(Globals.lang("Show 'Firstname Lastname'"));
  namesFl=new JRadioButton(Globals.lang("Show 'Lastname, Firstname'"));
  namesNatbib=new JRadioButton(Globals.lang("Natbib style"));
  noAbbrNames=new JRadioButton(Globals.lang("Do not abbreviate names"));
  abbrNames=new JRadioButton(Globals.lang("Abbreviate names"));
  lastNamesOnly=new JRadioButton(Globals.lang("Show last names only"));
  pdfColumn=new JCheckBox(Globals.lang("Show PDF/PS column"));
  urlColumn=new JCheckBox(Globals.lang("Show URL/DOI column"));
  citeseerColumn=new JCheckBox(Globals.lang("Show CiteSeer column"));
  floatMarked=new JCheckBox(Globals.lang("Float marked entries"));
  priField=new JTextField(10);
  secField=new JTextField(10);
  terField=new JTextField(10);
  priSort.insertItemAt(Globals.lang("<select>"),0);
  secSort.insertItemAt(Globals.lang("<select>"),0);
  terSort.insertItemAt(Globals.lang("<select>"),0);
  priSort.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (priSort.getSelectedIndex() > 0) {
        priField.setText(BibtexFields.getFieldName(priSort.getSelectedIndex() - 1));
        priSort.setSelectedIndex(0);
      }
    }
  }
);
  secSort.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (secSort.getSelectedIndex() > 0) {
        secField.setText(BibtexFields.getFieldName(secSort.getSelectedIndex() - 1));
        secSort.setSelectedIndex(0);
      }
    }
  }
);
  terSort.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (terSort.getSelectedIndex() > 0) {
        terField.setText(BibtexFields.getFieldName(terSort.getSelectedIndex() - 1));
        terSort.setSelectedIndex(0);
      }
    }
  }
);
  ButtonGroup bg=new ButtonGroup();
  bg.add(namesAsIs);
  bg.add(namesNatbib);
  bg.add(namesFf);
  bg.add(namesFl);
  ButtonGroup bg2=new ButtonGroup();
  bg2.add(lastNamesOnly);
  bg2.add(abbrNames);
  bg2.add(noAbbrNames);
  priDesc=new JCheckBox(Globals.lang("Descending"));
  secDesc=new JCheckBox(Globals.lang("Descending"));
  terDesc=new JCheckBox(Globals.lang("Descending"));
  FormLayout layout=new FormLayout("1dlu, 8dlu, left:pref, 4dlu, fill:pref, 4dlu, fill:60dlu, 4dlu, fill:pref","");
  DefaultFormBuilder builder=new DefaultFormBuilder(layout);
  JLabel lab;
  JPanel pan=new JPanel();
  builder.appendSeparator(Globals.lang("Special table columns"));
  builder.nextLine();
  builder.append(pan);
  builder.append(pdfColumn);
  builder.nextLine();
  builder.append(pan);
  builder.append(urlColumn);
  builder.nextLine();
  builder.append(pan);
  builder.append(citeseerColumn);
  builder.nextLine();
  builder.appendSeparator(Globals.lang("Format of author and editor names"));
  DefaultFormBuilder nameBuilder=new DefaultFormBuilder(new FormLayout("left:pref, 8dlu, left:pref",""));
  nameBuilder.append(namesAsIs);
  nameBuilder.append(noAbbrNames);
  nameBuilder.nextLine();
  nameBuilder.append(namesFf);
  nameBuilder.append(abbrNames);
  nameBuilder.nextLine();
  nameBuilder.append(namesFl);
  nameBuilder.append(lastNamesOnly);
  nameBuilder.nextLine();
  nameBuilder.append(namesNatbib);
  builder.append(pan);
  builder.append(nameBuilder.getPanel());
  builder.nextLine();
  builder.appendSeparator(Globals.lang("Default sort criteria"));
  FormLayout layout2=new FormLayout("left:pref, 8dlu, fill:pref, 4dlu, fill:60dlu, 4dlu, left:pref","");
  DefaultFormBuilder builder2=new DefaultFormBuilder(layout2);
  lab=new JLabel(Globals.lang("Primary sort criterion"));
  builder2.append(lab);
  builder2.append(priSort);
  builder2.append(priField);
  builder2.append(priDesc);
  builder2.nextLine();
  lab=new JLabel(Globals.lang("Secondary sort criterion"));
  builder2.append(lab);
  builder2.append(secSort);
  builder2.append(secField);
  builder2.append(secDesc);
  builder2.nextLine();
  lab=new JLabel(Globals.lang("Tertiary sort criterion"));
  builder2.append(lab);
  builder2.append(terSort);
  builder2.append(terField);
  builder2.append(terDesc);
  builder.nextLine();
  builder.append(pan);
  builder.append(builder2.getPanel());
  builder.nextLine();
  builder.append(pan);
  builder.append(floatMarked);
  builder.nextLine();
  builder.appendSeparator(Globals.lang("General"));
  builder.append(pan);
  builder.append(autoResizeMode);
  builder.nextLine();
  pan=builder.getPanel();
  pan.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  add(pan,BorderLayout.CENTER);
  namesNatbib.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent changeEvent){
      abbrNames.setEnabled(!namesNatbib.isSelected());
      lastNamesOnly.setEnabled(!namesNatbib.isSelected());
      noAbbrNames.setEnabled(!namesNatbib.isSelected());
    }
  }
);
}
