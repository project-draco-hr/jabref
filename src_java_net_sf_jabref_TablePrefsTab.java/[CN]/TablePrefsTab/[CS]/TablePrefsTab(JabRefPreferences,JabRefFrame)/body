{
  _prefs=prefs;
  this.frame=frame;
  setLayout(new BorderLayout());
  menuFont=new Font(prefs.get("menuFontFamily"),prefs.getInt("menuFontStyle"),prefs.getInt("menuFontSize"));
  colorCodes=new JCheckBox(Globals.lang("Color codes for required and optional fields"),_prefs.getBoolean("tableColorCodesOn"));
  antialias=new JCheckBox(Globals.lang("Use antialiasing font in table"),_prefs.getBoolean("antialias"));
  autoResizeMode=new JCheckBox(Globals.lang("Fit table horizontally on screen"),(_prefs.getInt("autoResizeMode") == JTable.AUTO_RESIZE_ALL_COLUMNS));
  namesAsIs=new JRadioButton(Globals.lang("Show names unchanged"));
  namesFf=new JRadioButton(Globals.lang("Show 'Firstname Lastname'"));
  namesFl=new JRadioButton(Globals.lang("Show 'Lastname, Firstname'"));
  pdfColumn=new JCheckBox(Globals.lang("Show PDF/PS column"),_prefs.getBoolean("pdfColumn"));
  urlColumn=new JCheckBox(Globals.lang("Show URL/DOI column"),_prefs.getBoolean("urlColumn"));
  citeseerColumn=new JCheckBox(Globals.lang("Show CiteSeer column"),_prefs.getBoolean("citeseerColumn"));
  secField=new JTextField(_prefs.get("secSort"),10);
  terField=new JTextField(_prefs.get("terSort"),10);
  secSort.insertItemAt(Globals.lang("<select>"),0);
  terSort.insertItemAt(Globals.lang("<select>"),0);
  secSort.setSelectedIndex(0);
  terSort.setSelectedIndex(0);
  secSort.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (secSort.getSelectedIndex() > 0) {
        secField.setText(GUIGlobals.ALL_FIELDS[secSort.getSelectedIndex() - 1]);
        secSort.setSelectedIndex(0);
      }
    }
  }
);
  terSort.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (terSort.getSelectedIndex() > 0) {
        terField.setText(GUIGlobals.ALL_FIELDS[terSort.getSelectedIndex() - 1]);
        terSort.setSelectedIndex(0);
      }
    }
  }
);
  ButtonGroup bg=new ButtonGroup();
  bg.add(namesAsIs);
  bg.add(namesFf);
  bg.add(namesFl);
  if (_prefs.getBoolean("namesAsIs"))   namesAsIs.setSelected(true);
 else {
    if (_prefs.getBoolean("namesFf"))     namesFf.setSelected(true);
 else     namesFl.setSelected(true);
  }
  secDesc=new JCheckBox(Globals.lang("Descending"),_prefs.getBoolean("secDescending"));
  terDesc=new JCheckBox(Globals.lang("Descending"),_prefs.getBoolean("terDescending"));
  FormLayout layout=new FormLayout("1dlu, 8dlu, left:pref, 4dlu, fill:pref, 4dlu, fill:60dlu, 4dlu, fill:pref","");
  DefaultFormBuilder builder=new DefaultFormBuilder(layout);
  JLabel lab;
  JPanel pan=new JPanel();
  builder.appendSeparator("Special table columns");
  builder.nextLine();
  builder.append(pan);
  builder.append(pdfColumn);
  builder.nextLine();
  builder.append(pan);
  builder.append(urlColumn);
  builder.nextLine();
  builder.append(pan);
  builder.append(citeseerColumn);
  builder.nextLine();
  builder.appendSeparator("Format of author and editor names");
  builder.append(pan);
  builder.append(namesAsIs);
  builder.nextLine();
  builder.append(pan);
  builder.append(namesFf);
  builder.nextLine();
  builder.append(pan);
  builder.append(namesFl);
  builder.nextLine();
  builder.appendSeparator("Sort options");
  FormLayout layout2=new FormLayout("left:pref, 8dlu, fill:pref, 4dlu, fill:60dlu, 4dlu, left:pref","");
  DefaultFormBuilder builder2=new DefaultFormBuilder(layout2);
  lab=new JLabel(Globals.lang("Secondary sort criterion"));
  builder2.append(lab);
  builder2.append(secSort);
  builder2.append(secField);
  builder2.append(secDesc);
  builder2.nextLine();
  lab=new JLabel(Globals.lang("Tertiary sort criterion"));
  builder2.append(lab);
  builder2.append(terSort);
  builder2.append(terField);
  builder2.append(terDesc);
  builder.nextLine();
  builder.append(pan);
  builder.append(builder2.getPanel());
  builder.nextLine();
  builder.appendSeparator("Table appearance");
  builder.append(pan);
  builder.append(colorCodes);
  builder.nextLine();
  builder.append(pan);
  builder.append(autoResizeMode);
  builder.nextLine();
  builder.append(pan);
  builder.append(antialias);
  builder.nextLine();
  builder.append(pan);
  builder.append(fontButton);
  builder.nextLine();
  JPanel upper=new JPanel(), sort=new JPanel(), namesp=new JPanel(), iconCol=new JPanel();
  upper.setLayout(gbl);
  sort.setLayout(gbl);
  namesp.setLayout(gbl);
  iconCol.setLayout(gbl);
  fontButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      Font f=new FontSelectorDialog(null,GUIGlobals.CURRENTFONT).getSelectedFont();
      if (f == null)       return;
 else       font=f;
    }
  }
);
  pan=builder.getPanel();
  pan.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  add(pan,BorderLayout.CENTER);
}
