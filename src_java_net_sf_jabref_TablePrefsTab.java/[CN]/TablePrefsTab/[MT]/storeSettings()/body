{
  if (colSetup.isEditing()) {
    int col=colSetup.getEditingColumn(), row=colSetup.getEditingRow();
    colSetup.getCellEditor(row,col).stopCellEditing();
  }
  if (tableChanged) {
    int i=0;
    while (i < tableRows.size()) {
      if (((TableRow)tableRows.elementAt(i)).name.equals(""))       tableRows.removeElementAt(i);
 else       i++;
    }
    String[] names=new String[tableRows.size()], widths=new String[tableRows.size()];
    int[] nWidths=new int[tableRows.size()];
    _prefs.putInt("numberColWidth",ncWidth);
    for (i=0; i < tableRows.size(); i++) {
      TableRow tr=(TableRow)tableRows.elementAt(i);
      names[i]=tr.name;
      nWidths[i]=tr.length;
      widths[i]="" + tr.length;
    }
    _prefs.putStringArray("columnNames",names);
    _prefs.putStringArray("columnWidths",widths);
  }
  _prefs.putBoolean("tableColorCodesOn",colorCodes.isSelected());
  _prefs.putBoolean("namesAsIs",namesAsIs.isSelected());
  _prefs.putBoolean("namesFf",namesFf.isSelected());
  _prefs.putBoolean("antialias",antialias.isSelected());
  _prefs.putBoolean("pdfColumn",pdfColumn.isSelected());
  _prefs.putBoolean("urlColumn",urlColumn.isSelected());
  _prefs.putBoolean("citeseerColumn",citeseerColumn.isSelected());
  _prefs.putBoolean("allowTableEditing",allowEditing.isSelected());
  _prefs.putInt("autoResizeMode",autoResizeMode.isSelected() ? JTable.AUTO_RESIZE_ALL_COLUMNS : JTable.AUTO_RESIZE_OFF);
  _prefs.putBoolean("secDescending",secDesc.isSelected());
  _prefs.putBoolean("terDescending",terDesc.isSelected());
  _prefs.put("secSort",secField.getText().toLowerCase().trim());
  _prefs.put("terSort",terField.getText().toLowerCase().trim());
  _prefs.put("fontFamily",font.getFamily());
  _prefs.putInt("fontStyle",font.getStyle());
  _prefs.putInt("fontSize",font.getSize());
  _prefs.put("menuFontFamily",menuFont.getFamily());
  _prefs.putInt("menuFontStyle",menuFont.getStyle());
  _prefs.putInt("menuFontSize",menuFont.getSize());
  GUIGlobals.CURRENTFONT=font;
}
