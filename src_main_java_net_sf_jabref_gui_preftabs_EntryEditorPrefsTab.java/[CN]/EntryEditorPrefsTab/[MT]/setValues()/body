{
  autoOpenForm.setSelected(prefs.getBoolean(JabRefPreferences.AUTO_OPEN_FORM));
  defSource.setSelected(prefs.getBoolean(JabRefPreferences.DEFAULT_SHOW_SOURCE));
  emacsMode.setSelected(prefs.getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS));
  emacsRebindCtrlA.setSelected(prefs.getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS_REBIND_CA));
  emacsRebindCtrlF.setSelected(prefs.getBoolean(JabRefPreferences.EDITOR_EMACS_KEYBINDINGS_REBIND_CF));
  disableOnMultiple.setSelected(prefs.getBoolean(JabRefPreferences.DISABLE_ON_MULTIPLE_SELECTION));
  autoComplete.setSelected(prefs.getBoolean(JabRefPreferences.AUTO_COMPLETE));
  autoCompFields.setText(autoCompletePreferences.getCompleteNamesAsString());
  shortestToComplete.setValue(autoCompletePreferences.getShortestLengthToComplete());
  if (autoCompletePreferences.getOnlyCompleteFirstLast()) {
    autoCompFF.setSelected(true);
  }
 else   if (autoCompletePreferences.getOnlyCompleteLastFirst()) {
    autoCompLF.setSelected(true);
  }
 else {
    autoCompBoth.setSelected(true);
  }
  oldAutoCompFF=autoCompFF.isSelected();
  oldAutoCompLF=autoCompLF.isSelected();
switch (autoCompletePreferences.getFirstnameMode()) {
case ONLY_ABBREVIATED:
    firstNameModeAbbr.setSelected(true);
  break;
case ONLY_FULL:
firstNameModeFull.setSelected(true);
break;
default :
firstNameModeBoth.setSelected(true);
break;
}
oldAutoCompFModeAbbr=firstNameModeAbbr.isSelected();
oldAutoCompFModeFull=firstNameModeFull.isSelected();
emacsRebindCtrlA.setEnabled(emacsMode.isSelected());
setAutoCompleteElementsEnabled(autoComplete.isSelected());
}
