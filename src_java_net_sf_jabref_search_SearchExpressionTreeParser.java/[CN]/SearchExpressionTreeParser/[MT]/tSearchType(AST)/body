{
  int matchType=0;
  ;
  AST tSearchType_AST_in=(AST)_t;
  try {
    if (_t == null)     _t=ASTNULL;
switch (_t.getType()) {
case LITERAL_contains:
{
        AST tmp7_AST_in=(AST)_t;
        match(_t,LITERAL_contains);
        _t=_t.getNextSibling();
        matchType=MATCH_CONTAINS;
        break;
      }
case LITERAL_matches:
{
      AST tmp8_AST_in=(AST)_t;
      match(_t,LITERAL_matches);
      _t=_t.getNextSibling();
      matchType=MATCH_EXACT;
      break;
    }
case EQUAL:
{
    AST tmp9_AST_in=(AST)_t;
    match(_t,EQUAL);
    _t=_t.getNextSibling();
    matchType=MATCH_CONTAINS;
    break;
  }
case EEQUAL:
{
  AST tmp10_AST_in=(AST)_t;
  match(_t,EEQUAL);
  _t=_t.getNextSibling();
  matchType=MATCH_EXACT;
  break;
}
case NEQUAL:
{
AST tmp11_AST_in=(AST)_t;
match(_t,NEQUAL);
_t=_t.getNextSibling();
matchType=MATCH_DOES_NOT_CONTAIN;
break;
}
default :
{
throw new NoViableAltException(_t);
}
}
}
 catch (RecognitionException ex) {
reportError(ex);
if (_t != null) {
_t=_t.getNextSibling();
}
}
_retTree=_t;
return matchType;
}
