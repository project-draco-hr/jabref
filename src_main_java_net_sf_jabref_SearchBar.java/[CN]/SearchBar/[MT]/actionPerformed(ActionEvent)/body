{
  if (e.getSource() == escape) {
    incSearch=false;
    clearSearchLater();
  }
 else   if (((e.getSource() == searchField) || (e.getSource() == searchButton)) && !increment.isSelected() && (frame.basePanel() != null)) {
    updatePrefs();
    if (searchField.getText().equals("")) {
      clearSearchLater();
      return;
    }
    fireSearchlistenerEvent(searchField.getText().toString());
    Hashtable<String,String> searchOptions=new Hashtable<String,String>();
    searchOptions.put("option",searchField.getText().toString());
    SearchRuleSet searchRules=new SearchRuleSet();
    SearchRule rule1;
    rule1=new BasicSearch(Globals.prefs.getBoolean("caseSensitiveSearch"),Globals.prefs.getBoolean("regExpSearch"));
    try {
      rule1=new SearchExpression(Globals.prefs,searchOptions);
    }
 catch (    Exception ex) {
    }
    searchRules.addRule(rule1);
    if (!searchRules.validateSearchStrings(searchOptions)) {
      frame.basePanel().output(Globals.lang("Search failed: illegal search expression"));
      frame.basePanel().stopShowingSearchResults();
      return;
    }
    SearchWorker worker=new SearchWorker(searchRules,searchOptions);
    worker.getWorker().run();
    worker.getCallBack().update();
    if (worker.getHits() > 0)     frame.basePanel().mainTable.setSelected(0);
  }
}
