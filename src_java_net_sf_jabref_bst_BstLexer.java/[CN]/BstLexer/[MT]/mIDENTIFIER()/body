{
  try {
    ruleNestingLevel++;
    int _type=IDENTIFIER;
    int _start=getCharIndex();
    int _line=getLine();
    int _charPosition=getCharPositionInLine();
    int _channel=Token.DEFAULT_CHANNEL;
{
      mLETTER();
      loop1:       do {
        int alt1=3;
        int LA1_0=input.LA(1);
        if ((LA1_0 == '$' || LA1_0 == '.' || (LA1_0 >= 'A' && LA1_0 <= 'Z') || (LA1_0 >= 'a' && LA1_0 <= 'z'))) {
          alt1=1;
        }
 else         if (((LA1_0 >= '0' && LA1_0 <= '9'))) {
          alt1=2;
        }
switch (alt1) {
case 1:
{
            mLETTER();
          }
        break;
case 2:
{
        mNUMERAL();
      }
    break;
default :
  break loop1;
}
}
 while (true);
}
if (token == null && ruleNestingLevel == 1) {
emit(_type,_line,_charPosition,_channel,_start,getCharIndex() - 1);
}
}
  finally {
ruleNestingLevel--;
}
}
