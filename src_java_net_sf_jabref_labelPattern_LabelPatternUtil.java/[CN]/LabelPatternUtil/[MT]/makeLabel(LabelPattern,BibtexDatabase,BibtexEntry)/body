{
  _db=database;
  ArrayList _al;
  String _spacer, _label;
  StringBuffer _sb=new StringBuffer();
  boolean forceUpper=false, forceLower=false;
  try {
    String _type=_entry.getType().getName().toLowerCase();
    _al=table.getValue(_type);
    int _alSize=_al.size();
    boolean field=false;
    for (int i=1; i < _alSize; i++) {
      String val=_al.get(i).toString();
      if (val.equals("[")) {
        field=true;
      }
 else       if (val.equals("]")) {
        field=false;
      }
 else       if (field) {
        String modifier=null;
        int _mi=val.indexOf(":");
        if (_mi != -1 && _mi != val.length() - 1 && _mi != 0) {
          modifier=val.substring(_mi + 1);
          val=val.substring(0,_mi);
        }
        StringBuffer _sbvalue=new StringBuffer();
        try {
          if (val.equals("auth")) {
            _sbvalue.append(firstAuthor(_entry.getField("author").toString()));
          }
 else           if (val.equals("edtr")) {
            _sbvalue.append(firstAuthor(_entry.getField("editor").toString()));
          }
 else           if (val.equals("authors")) {
            _sbvalue.append(allAuthors(_entry.getField("author").toString()));
          }
 else           if (val.equals("editors")) {
            _sbvalue.append(allAuthors(_entry.getField("editor").toString()));
          }
 else           if (val.equals("authorIni")) {
            _sbvalue.append(oneAuthorPlusIni(_entry.getField("author").toString()));
          }
 else           if (val.equals("editorIni")) {
            _sbvalue.append(oneAuthorPlusIni(_entry.getField("editor").toString()));
          }
 else           if (val.equals("firstpage")) {
            _sbvalue.append(firstPage(_entry.getField("pages").toString()));
          }
 else           if (val.equals("lastpage")) {
            _sbvalue.append(lastPage(_entry.getField("pages").toString()));
          }
 else           if (val.equals("shorttitle")) {
            String ss=_entry.getField("title").toString();
            int piv=0, wrd=0;
            while ((piv < ss.length()) && (wrd < 3)) {
              if (Character.isWhitespace(ss.charAt(piv))) {
                wrd++;
              }
 else {
                _sbvalue.append(ss.charAt(piv));
              }
              piv++;
            }
          }
 else           if (val.equals("shortyear")) {
            String ss=_entry.getField("year").toString();
            if (ss.length() > 2) {
              _sbvalue.append(ss.substring(ss.length() - 2));
            }
 else {
              _sbvalue.append(ss);
            }
          }
 else           if (val.equals("veryshorttitle")) {
            String ss=_entry.getField("title").toString();
            int piv=0;
            String[] skipWords={"a","an","the"};
            for (int _i=0; _i < skipWords.length; _i++) {
              if (ss.toLowerCase().startsWith(skipWords[_i] + " ")) {
                piv=skipWords[_i].length() + 1;
              }
            }
            while ((piv < ss.length()) && Character.isWhitespace(ss.charAt(piv))) {
              piv++;
            }
            while ((piv < ss.length()) && !Character.isWhitespace(ss.charAt(piv))) {
              _sbvalue.append(ss.charAt(piv));
              piv++;
            }
          }
 else {
            _sbvalue.append(_entry.getField(val).toString());
          }
        }
 catch (        Exception ex) {
          Globals.logger("Key generator warning: field '" + val + "' empty.");
        }
        if (modifier != null) {
          if (modifier.equals("lower")) {
            _sb.append(_sbvalue.toString().toLowerCase());
          }
 else {
            Globals.logger("Key generator warning: unknown modifier '" + modifier + "'.");
          }
        }
 else {
          _sb.append(_sbvalue);
        }
      }
 else {
        _sb.append(val);
      }
    }
  }
 catch (  Exception e) {
    System.err.println(e);
  }
  _label=Util.checkLegalKey(_sb.toString());
  if (forceUpper) {
    _label=_label.toUpperCase();
  }
  if (forceLower) {
    _label=_label.toLowerCase();
  }
  if (_db.setCiteKeyForEntry(_entry.getId(),_label)) {
    char c='b';
    String modKey=_label + "a";
    while (_db.setCiteKeyForEntry(_entry.getId(),modKey)) {
      modKey=_label + ((char)(c++));
    }
  }
  return _entry;
}
