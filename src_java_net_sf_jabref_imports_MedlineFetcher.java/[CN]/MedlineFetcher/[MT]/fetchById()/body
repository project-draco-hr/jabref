{
  Pattern p=Pattern.compile("\\d+[,\\d+]*");
  Matcher m=p.matcher(idList);
  if (m.matches()) {
    panel.frame().output(Globals.lang("Fetching Medline by ID..."));
    ArrayList bibs=fetchMedline(idList);
    if ((bibs != null) && (bibs.size() > 0)) {
      tf.setText("");
      int importedEntries=panel.frame().addBibEntries(bibs,null,false);
      if (importedEntries == 0) {
        return;
      }
      panel.markBaseChanged();
      panel.refreshTable();
      if (bibs.size() > 0) {
        BibtexEntry[] entries=(BibtexEntry[])bibs.toArray(new BibtexEntry[0]);
        panel.selectEntries(entries,0);
        if (entries.length == 1)         panel.showEntry(entries[0]);
      }
      panel.output(Globals.lang("Medline entries fetched") + ": " + bibs.size());
    }
 else     panel.output(Globals.lang("No Medline entries found."));
  }
 else {
    JOptionPane.showMessageDialog(panel.frame(),Globals.lang("Please enter a semicolon or comma separated list of Medline IDs (numbers)."),Globals.lang("Input error"),JOptionPane.ERROR_MESSAGE);
  }
}
