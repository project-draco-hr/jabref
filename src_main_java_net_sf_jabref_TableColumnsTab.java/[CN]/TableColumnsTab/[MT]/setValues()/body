{
  fileColumn.setSelected(_prefs.getBoolean("fileColumn"));
  pdfColumn.setSelected(_prefs.getBoolean("pdfColumn"));
  urlColumn.setSelected(_prefs.getBoolean("urlColumn"));
  preferUrl.setSelected(!_prefs.getBoolean("preferUrlDoi"));
  preferDoi.setSelected(_prefs.getBoolean("preferUrlDoi"));
  fileColumn.setSelected(_prefs.getBoolean("fileColumn"));
  arxivColumn.setSelected(_prefs.getBoolean("arxivColumn"));
  extraFileColumns.setSelected(_prefs.getBoolean("extraFileColumns"));
  if (extraFileColumns.isSelected()) {
    String[] desiredColumns=_prefs.getStringArray("listOfFileColumns");
    int listSize=listOfFileColumns.getModel().getSize();
    int[] indicesToSelect=new int[listSize];
    for (int i=0; i < listSize; i++) {
      indicesToSelect[i]=listSize + 1;
      for (int j=0; j < desiredColumns.length; j++) {
        if (listOfFileColumns.getModel().getElementAt(i).equals(desiredColumns[j])) {
          indicesToSelect[i]=i;
          break;
        }
      }
    }
    listOfFileColumns.setSelectedIndices(indicesToSelect);
  }
 else {
    listOfFileColumns.setSelectedIndices(new int[]{});
  }
  oldRankingColumn=_prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_RANKING);
  rankingColumn.setSelected(oldRankingColumn);
  oldCompcatRankingColumn=_prefs.getBoolean(SpecialFieldsUtils.PREF_RANKING_COMPACT);
  compactRankingColumn.setSelected(oldCompcatRankingColumn);
  oldQualityColumn=_prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_QUALITY);
  qualityColumn.setSelected(oldQualityColumn);
  oldPriorityColumn=_prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRIORITY);
  priorityColumn.setSelected(oldPriorityColumn);
  oldRelevanceColumn=_prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_RELEVANCE);
  relevanceColumn.setSelected(oldRelevanceColumn);
  oldSyncKeyWords=_prefs.getBoolean(SpecialFieldsUtils.PREF_AUTOSYNCSPECIALFIELDSTOKEYWORDS);
  syncKeywords.setSelected(oldSyncKeyWords);
  oldWriteSpecialFields=_prefs.getBoolean(SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS);
  writeSpecialFields.setSelected(oldWriteSpecialFields);
  oldSpecialFieldsEnabled=_prefs.getBoolean(SpecialFieldsUtils.PREF_SPECIALFIELDSENABLED);
  specialFieldsEnabled.setSelected(!oldSpecialFieldsEnabled);
  specialFieldsEnabled.setSelected(oldSpecialFieldsEnabled);
  boolean oldShowOneLetterHeadingForIconColumns=_prefs.getBoolean(JabRefPreferences.SHOWONELETTERHEADINGFORICONCOLUMNS);
  showOneLetterHeadingForIconColumns.setSelected(oldShowOneLetterHeadingForIconColumns);
  tableRows.clear();
  String[] names=_prefs.getStringArray("columnNames"), lengths=_prefs.getStringArray("columnWidths");
  for (int i=0; i < names.length; i++) {
    if (i < lengths.length)     tableRows.add(new TableRow(names[i],Integer.parseInt(lengths[i])));
 else     tableRows.add(new TableRow(names[i]));
  }
  rowCount=tableRows.size() + 5;
  ncWidth=_prefs.getInt("numberColWidth");
}
