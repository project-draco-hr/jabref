{
  if (!standardBibtex) {
    return "{" + Util.wrap2(text,GUIGlobals.LINE_LENGTH) + "}";
  }
  sb=new StringBuffer();
  int pivot=0, pos1=-1, pos2=-1;
  int tell=0;
  col=STARTCOL;
  checkBraces(text);
  while (pivot < text.length()) {
    int goFrom=pivot;
    pos1=pivot;
    while (goFrom == pos1) {
      pos1=text.indexOf('#',goFrom);
      if ((pos1 > 0) && (text.charAt(pos1 - 1) == '\\')) {
        goFrom=pos1 + 1;
        pos1++;
      }
 else       goFrom=pos1 - 1;
    }
    if (pos1 == -1) {
      pos1=text.length();
      pos2=-1;
    }
 else {
      pos2=text.indexOf('#',pos1 + 1);
      if (pos2 == -1) {
        throw new IllegalArgumentException("# characters don't match!");
      }
    }
    if (pos1 > pivot)     writeText(text,pivot,pos1);
    if ((pos1 < text.length()) && (pos2 - 1 > pos1))     writeStringLabel(text,pos1 + 1,pos2,(pos1 == pivot),(pos2 + 1 == text.length()));
    if (pos2 > -1)     pivot=pos2 + 1;
 else     pivot=pos1 + 1;
  }
  return sb.toString();
}
