{
  ArrayList<BibEntry> bibitems=new ArrayList<>();
  StringBuilder sb=new StringBuilder();
  BufferedReader in=new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream));
  String str;
  while ((str=in.readLine()) != null) {
    if (str.length() < 3) {
      continue;
    }
    if ("PMID- ".equals(str.substring(0,6))) {
      sb.append("::").append(str);
    }
 else {
      String beg=str.substring(0,6);
      if (beg.indexOf(" ") > 0) {
        sb.append(" ## ");
        sb.append(str);
      }
 else {
        sb.append("EOLEOL");
        sb.append(str.trim());
      }
    }
  }
  String[] entries=sb.toString().split("::");
  HashMap<String,String> hm=new HashMap<>();
  for (  String entry : entries) {
    String[] fields=entry.split(" ## ");
    if (fields.length == 0) {
      fields=entry.split("\n");
    }
    String Type="";
    String pages="";
    String shortauthor="";
    String fullauthor="";
    hm.clear();
    for (    String field : fields) {
      System.out.println(">>>" + field + "<<<");
      if (field.length() <= 2) {
        continue;
      }
      String beg=field.substring(0,6);
      String value=field.substring(6);
      value=value.trim();
      if ("PT  - ".equals(beg)) {
        Type="article";
      }
 else       if ("TY  - ".equals(beg)) {
        if ("CONF".equals(value)) {
          Type="inproceedings";
        }
      }
 else       if ("JO  - ".equals(beg)) {
        hm.put("booktitle",value);
      }
 else       if ("FAU - ".equals(beg)) {
        String tmpauthor=value.replaceAll("EOLEOL"," and ");
        if (!"".equals(fullauthor)) {
          fullauthor=fullauthor + " and " + tmpauthor;
        }
 else {
          fullauthor=tmpauthor;
        }
      }
 else       if ("AU  - ".equals(beg)) {
        String tmpauthor=value.replaceAll("EOLEOL"," and ").replaceAll(" ",", ");
        if (!"".equals(shortauthor)) {
          shortauthor=shortauthor + " and " + tmpauthor;
        }
 else {
          shortauthor=tmpauthor;
        }
      }
 else       if ("TI  - ".equals(beg)) {
        hm.put("title",value.replaceAll("EOLEOL"," "));
      }
 else       if ("TA  - ".equals(beg)) {
        hm.put("journal",value.replaceAll("EOLEOL"," "));
      }
 else       if ("AB  - ".equals(beg)) {
        hm.put("abstract",value.replaceAll("EOLEOL"," "));
      }
 else       if ("PG  - ".equals(beg)) {
        pages=value.replaceAll("-","--");
      }
 else       if ("IP  - ".equals(beg)) {
        hm.put("number",value);
      }
 else       if ("DP  - ".equals(beg)) {
        String[] parts=value.split(" ");
        hm.put("year",parts[0]);
      }
 else       if ("VI  - ".equals(beg)) {
        hm.put("volume",value);
      }
 else       if ("AID - ".equals(beg)) {
        String[] parts=value.split(" ");
        if ("[doi]".equals(parts[1])) {
          hm.put("doi",parts[0]);
          hm.put("url","http://dx.doi.org/" + parts[0]);
        }
      }
    }
    if (!"".equals(pages)) {
      hm.put("pages",pages);
    }
    if (!"".equals(fullauthor)) {
      hm.put("author",fullauthor);
    }
 else     if (!"".equals(shortauthor)) {
      hm.put("author",shortauthor);
    }
    BibEntry b=new BibEntry(DEFAULT_BIBTEXENTRY_ID,EntryTypes.getTypeOrDefault(Type));
    b.setField(hm);
    if ((hm.get("author") != null) || (hm.get("title") != null)) {
      bibitems.add(b);
    }
  }
  return bibitems;
}
