{
  String query="";
  ArrayList<String> fieldRequirement=new ArrayList<String>();
  ArrayList<String> existentTypes=new ArrayList<String>();
  if (out instanceof Connection) {
    ResultSet rs=((Statement)SQLUtil.processQueryWithResults(out,"SELECT label FROM entry_types")).getResultSet();
    while (rs.next()) {
      existentTypes.add(rs.getString(1));
    }
  }
  for (  BibtexEntryType val : BibtexEntryType.ALL_TYPES.values()) {
    fieldRequirement.clear();
    for (int i=0; i < SQLUtil.getAllFields().size(); i++) {
      fieldRequirement.add(i,"gen");
    }
    List<String> reqFields=Arrays.asList(val.getRequiredFields() != null ? val.getRequiredFields() : new String[0]);
    List<String> optFields=Arrays.asList(val.getOptionalFields() != null ? val.getOptionalFields() : new String[0]);
    List<String> utiFields=Arrays.asList(val.getUtilityFields() != null ? val.getUtilityFields() : new String[0]);
    fieldRequirement=SQLUtil.setFieldRequirement(SQLUtil.getAllFields(),reqFields,optFields,utiFields,fieldRequirement);
    if (!existentTypes.contains(val.getName().toLowerCase())) {
      String insert="INSERT INTO entry_types (label, " + fieldStr + ") VALUES (";
      query=insert + "'" + val.getName().toLowerCase()+ "'";
      for (int i=0; i < fieldRequirement.size(); i++) {
        query=query + ", '" + fieldRequirement.get(i)+ "'";
      }
      query=query + ");";
    }
 else {
      String[] update=fieldStr.split(",");
      query="UPDATE entry_types SET \n";
      for (int i=0; i < fieldRequirement.size(); i++) {
        query+=update[i] + "='" + fieldRequirement.get(i)+ "',";
      }
      query=query.substring(0,query.lastIndexOf(","));
      query+=" WHERE label='" + val.getName().toLowerCase() + "'";
    }
    SQLUtil.processQuery(out,query);
  }
}
