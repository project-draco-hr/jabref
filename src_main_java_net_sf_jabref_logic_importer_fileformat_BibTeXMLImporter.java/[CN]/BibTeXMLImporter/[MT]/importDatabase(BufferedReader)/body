{
  Objects.requireNonNull(reader);
  List<BibEntry> bibItems=new ArrayList<>();
  try {
    JAXBContext context=JAXBContext.newInstance("net.sf.jabref.importer.fileformat.bibtexml");
    Unmarshaller unmarshaller=context.createUnmarshaller();
    File file=(File)unmarshaller.unmarshal(reader);
    List<Entry> entries=file.getEntry();
    Map<String,String> fields=new HashMap<>();
    for (    Entry entry : entries) {
      BibEntry bibEntry=new BibEntry();
      if (entry.getArticle() != null) {
        bibEntry.setType("article");
        parse(entry.getArticle(),fields);
      }
 else       if (entry.getBook() != null) {
        bibEntry.setType("book");
        parse(entry.getBook(),fields);
      }
 else       if (entry.getBooklet() != null) {
        bibEntry.setType("booklet");
        parse(entry.getBooklet(),fields);
      }
 else       if (entry.getConference() != null) {
        bibEntry.setType("conference");
        parse(entry.getConference(),fields);
      }
 else       if (entry.getInbook() != null) {
        bibEntry.setType("inbook");
        parseInbook(entry.getInbook(),fields);
      }
 else       if (entry.getIncollection() != null) {
        bibEntry.setType("incollection");
        Incollection incollection=entry.getIncollection();
        if (incollection.getChapter() != null) {
          fields.put(FieldName.CHAPTER,String.valueOf(incollection.getChapter()));
        }
        parse(incollection,fields);
      }
 else       if (entry.getInproceedings() != null) {
        bibEntry.setType("inproceedings");
        parse(entry.getInproceedings(),fields);
      }
 else       if (entry.getManual() != null) {
        bibEntry.setType("manual");
        parse(entry.getManual(),fields);
      }
 else       if (entry.getMastersthesis() != null) {
        bibEntry.setType("mastersthesis");
        parse(entry.getMastersthesis(),fields);
      }
 else       if (entry.getMisc() != null) {
        bibEntry.setType("misc");
        parse(entry.getMisc(),fields);
      }
 else       if (entry.getPhdthesis() != null) {
        bibEntry.setType("phdthesis");
        parse(entry.getPhdthesis(),fields);
      }
 else       if (entry.getProceedings() != null) {
        bibEntry.setType("proceedings");
        parse(entry.getProceedings(),fields);
      }
 else       if (entry.getTechreport() != null) {
        bibEntry.setType("techreport");
        parse(entry.getTechreport(),fields);
      }
 else       if (entry.getUnpublished() != null) {
        bibEntry.setType("unpublished");
        parse(entry.getUnpublished(),fields);
      }
      if (entry.getId() != null) {
        bibEntry.setCiteKey(entry.getId());
      }
      bibEntry.setField(fields);
      bibItems.add(bibEntry);
    }
  }
 catch (  JAXBException e) {
    LOGGER.error("Error with XML parser configuration",e);
    return ParserResult.fromErrorMessage(e.getLocalizedMessage());
  }
  return new ParserResult(bibItems);
}
