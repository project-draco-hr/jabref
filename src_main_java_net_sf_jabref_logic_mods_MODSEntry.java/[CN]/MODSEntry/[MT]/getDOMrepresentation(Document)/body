{
  Element mods=document.createElement(entryType);
  mods.setAttribute("version","3.0");
  if (title != null) {
    Element titleInfo=document.createElement("titleInfo");
    Element mainTitle=document.createElement("title");
    mainTitle.appendChild(document.createTextNode(stripNonValidXMLCharacters(title)));
    titleInfo.appendChild(mainTitle);
    mods.appendChild(titleInfo);
  }
  if (authors != null) {
    for (    PersonName name : authors) {
      Element modsName=document.createElement("name");
      modsName.setAttribute("type","personal");
      if (name.getSurname() != null) {
        Element namePart=document.createElement("namePart");
        namePart.setAttribute("type","family");
        namePart.appendChild(document.createTextNode(stripNonValidXMLCharacters(name.getSurname())));
        modsName.appendChild(namePart);
      }
      if (name.getGivenNames() != null) {
        Element namePart=document.createElement("namePart");
        namePart.setAttribute("type","given");
        namePart.appendChild(document.createTextNode(stripNonValidXMLCharacters(name.getGivenNames())));
        modsName.appendChild(namePart);
      }
      Element role=document.createElement("role");
      Element roleTerm=document.createElement("roleTerm");
      roleTerm.setAttribute("type","text");
      roleTerm.appendChild(document.createTextNode("author"));
      role.appendChild(roleTerm);
      modsName.appendChild(role);
      mods.appendChild(modsName);
    }
  }
  Element originInfo=document.createElement("originInfo");
  mods.appendChild(originInfo);
  if (this.publisher != null) {
    Element publisher=document.createElement("publisher");
    publisher.appendChild(document.createTextNode(stripNonValidXMLCharacters(this.publisher)));
    originInfo.appendChild(publisher);
  }
  if (date != null) {
    Element dateIssued=document.createElement("dateIssued");
    dateIssued.appendChild(document.createTextNode(stripNonValidXMLCharacters(date)));
    originInfo.appendChild(dateIssued);
  }
  Element issuance=document.createElement("issuance");
  issuance.appendChild(document.createTextNode(stripNonValidXMLCharacters(this.issuance)));
  originInfo.appendChild(issuance);
  if (id != null) {
    Element idref=document.createElement("identifier");
    idref.appendChild(document.createTextNode(stripNonValidXMLCharacters(id)));
    mods.appendChild(idref);
    mods.setAttribute("ID",id);
  }
  Element typeOfResource=document.createElement("typeOfResource");
  String type="text";
  typeOfResource.appendChild(document.createTextNode(stripNonValidXMLCharacters(type)));
  mods.appendChild(typeOfResource);
  if (genre != null) {
    Element genreElement=document.createElement("genre");
    genreElement.setAttribute("authority","marc");
    genreElement.appendChild(document.createTextNode(stripNonValidXMLCharacters(genre)));
    mods.appendChild(genreElement);
  }
  if (host != null) {
    Element relatedItem=host.getDOMrepresentation(document);
    relatedItem.setAttribute("type","host");
    mods.appendChild(relatedItem);
  }
  if (pages != null) {
    mods.appendChild(pages.getDOMrepresentation(document));
  }
  for (  Map.Entry<String,String> theEntry : extensionFields.entrySet()) {
    Element extension=document.createElement("extension");
    String field=theEntry.getKey();
    String value=theEntry.getValue();
    if (handledExtensions.contains(field)) {
      continue;
    }
    Element theData=document.createElement(field);
    theData.appendChild(document.createTextNode(stripNonValidXMLCharacters(value)));
    extension.appendChild(theData);
    mods.appendChild(extension);
  }
  return mods;
}
