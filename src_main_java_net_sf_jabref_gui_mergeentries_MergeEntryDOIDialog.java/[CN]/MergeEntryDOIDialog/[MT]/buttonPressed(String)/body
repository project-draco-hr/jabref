{
  BibEntry mergedEntry=mergeEntries.getMergeEntry();
  if ("cancel".equals(button)) {
    panel.output(Localization.lang("Canceled merging entries"));
  }
 else   if ("done".equals(button)) {
    Set<String> jointFields=new TreeSet<>(mergedEntry.getFieldNames());
    Set<String> originalFields=new TreeSet<>(originalEntry.getFieldNames());
    boolean edited=false;
    String oldType=originalEntry.getType();
    String newType=mergedEntry.getType();
    if (!oldType.equalsIgnoreCase(newType)) {
      originalEntry.setType(newType);
      ce.addEdit(new UndoableChangeType(originalEntry,oldType,newType));
      edited=true;
    }
    for (    String field : jointFields) {
      String originalString=originalEntry.getField(field);
      String mergedString=mergedEntry.getField(field);
      if ((originalString == null) || !originalString.equals(mergedEntry.getField(field))) {
        originalEntry.setField(field,mergedString);
        ce.addEdit(new UndoableFieldChange(originalEntry,field,originalString,mergedString));
        edited=true;
      }
    }
    for (    String field : originalFields) {
      if (!jointFields.contains(field)) {
        String originalString=originalEntry.getField(field);
        originalEntry.clearField(field);
        ce.addEdit(new UndoableFieldChange(originalEntry,field,originalString,null));
        edited=true;
      }
    }
    if (edited) {
      ce.end();
      panel.undoManager.addEdit(ce);
      panel.output(Localization.lang("Updated entry with info from DOI"));
      panel.updateEntryEditorIfShowing();
      panel.markBaseChanged();
    }
 else {
      panel.output(Localization.lang("No information added"));
    }
  }
  dispose();
}
