{
{
    BibtexEntry e=t1BibtexEntry();
    XMPUtil.writeXMP(pdfFile,e,null);
    ByteArrayOutputStream s=new ByteArrayOutputStream();
    PrintStream oldOut=System.out;
    System.setOut(new PrintStream(s));
    XMPUtil.main(new String[]{pdfFile.getAbsolutePath()});
    System.setOut(oldOut);
    s.close();
    String bibtex=s.toString();
    ParserResult result=BibtexParser.parse(new StringReader(bibtex));
    Collection c=result.getDatabase().getEntries();
    assertEquals(1,c.size());
    BibtexEntry x=(BibtexEntry)c.iterator().next();
    assertEquals(e,x);
  }
{
    BibtexEntry e=t1BibtexEntry();
    XMPUtil.writeXMP(pdfFile,e,null);
    ByteArrayOutputStream s=new ByteArrayOutputStream();
    PrintStream oldOut=System.out;
    System.setOut(new PrintStream(s));
    XMPUtil.main(new String[]{"-x",pdfFile.getAbsolutePath()});
    System.setOut(oldOut);
    s.close();
    String xmp=s.toString();
    assertTrue(0 < xmp.indexOf("xpacket"));
    assertTrue(0 < xmp.indexOf("adobe:ns:meta"));
    assertTrue(0 < xmp.indexOf("<bibtex:bibtexkey>canh05</bibtex:bibtexkey>") || 0 < xmp.indexOf("bibtex:bibtexkey="));
    assertTrue(0 < xmp.indexOf("<rdf:li>K. Crowston</rdf:li>"));
    assertTrue(0 < xmp.indexOf("id='W5M0MpCehiHzreSzNTczkc9d'?>") || 0 < xmp.indexOf("id=\"W5M0MpCehiHzreSzNTczkc9d\"?>"));
    assertTrue(0 < xmp.indexOf("xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'") || 0 < xmp.indexOf("xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\""));
    assertTrue(0 < xmp.indexOf("<rdf:Description"));
    assertTrue(0 < xmp.indexOf("<?xpacket end='w'?>") || 0 < xmp.indexOf("<?xpacket end=\"w\"?>"));
    writeManually(pdfFile,xmp);
    List l=XMPUtil.readXMP(pdfFile);
    assertEquals(1,l.size());
    assertEquals(t1BibtexEntry(),(BibtexEntry)l.get(0));
  }
}
