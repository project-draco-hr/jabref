{
  String blockStart=null;
  String blockEnd=null;
  StringInt si;
  Vector blockEntries=null;
  Vector tmpEntries=new Vector();
  LayoutEntry le;
  si=(StringInt)parsedEntries.get(0);
  blockStart=si.s;
  si=(StringInt)parsedEntries.get(parsedEntries.size() - 1);
  blockEnd=si.s;
  if (!blockStart.equals(blockEnd)) {
    System.err.println("Field start and end entry must be equal.");
  }
  type=LayoutHelper.IS_FIELD_START;
  text=si.s;
  for (int i=1; i < (parsedEntries.size() - 1); i++) {
    si=(StringInt)parsedEntries.get(i);
    if (si.i == LayoutHelper.IS_LAYOUT_TEXT) {
    }
 else     if (si.i == LayoutHelper.IS_SIMPLE_FIELD) {
    }
 else     if (si.i == LayoutHelper.IS_FIELD_START) {
      blockEntries=new Vector();
      blockStart=si.s;
    }
 else     if (si.i == LayoutHelper.IS_FIELD_END) {
      if (blockStart.equals(si.s)) {
        blockEntries.add(si);
        le=new LayoutEntry(blockEntries);
        tmpEntries.add(le);
        blockEntries=null;
      }
 else {
        System.err.println("Nested field entries are not implemented !!!");
      }
    }
 else     if (si.i == LayoutHelper.IS_OPTION_FIELD) {
    }
    if (blockEntries == null) {
      tmpEntries.add(new LayoutEntry(si));
    }
 else {
      blockEntries.add(si);
    }
  }
  layoutEntries=new LayoutEntry[tmpEntries.size()];
  for (int i=0; i < tmpEntries.size(); i++) {
    layoutEntries[i]=(LayoutEntry)tmpEntries.get(i);
  }
}
