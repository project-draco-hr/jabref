{
  if (text == null) {
    return null;
  }
  StringBuffer sb=new StringBuffer();
  if (Globals.prefs.getBoolean(JabRefPreferences.USE_CONVERT_TO_EQUATION)) {
    text=text.replaceAll("<[ ]?sup>([^<]+)</sup>","\\$\\^\\{$1\\}\\$");
    text=text.replaceAll("<[ ]?sub>([^<]+)</sub>","\\$_\\{$1\\}\\$");
  }
 else {
    text=text.replaceAll("<[ ]?sup>([^<]+)</sup>","\\\\textsuperscript\\{$1\\}");
    text=text.replaceAll("<[ ]?sub>([^<]+)</sub>","\\\\textsubscript\\{$1\\}");
  }
  for (int i=0; i < text.length(); i++) {
    int c=text.charAt(i);
    if (c == '<') {
      i=readTag(text,i);
    }
 else {
      sb.append((char)c);
    }
  }
  text=sb.toString();
  Set<String> patterns=escapedSymbols.keySet();
  for (  String pattern : patterns) {
    text=text.replaceAll(pattern,escapedSymbols.get(pattern));
  }
  Matcher m=ESCAPED_PATTERN.matcher(text);
  while (m.find()) {
    int num=Integer.decode(m.group(1).replace("x","#") + m.group(3));
    if (numSymbols.containsKey(num)) {
      text=text.replaceAll("&#" + m.group(1) + m.group(2)+ m.group(3)+ ";",numSymbols.get(num));
    }
  }
  m=ESCAPED_PATTERN2.matcher(text);
  while (m.find()) {
    int num=Integer.decode(m.group(2).replace("x","#") + m.group(4));
    if (escapedAccents.containsKey(num)) {
      if ("i".equals(m.group(1))) {
        text=text.replaceAll(m.group(1) + "&#" + m.group(2)+ m.group(3)+ m.group(4)+ ";","\\{\\\\" + escapedAccents.get(num) + "\\{\\\\i\\}\\}");
      }
 else       if ("j".equals(m.group(1))) {
        text=text.replaceAll(m.group(1) + "&#" + m.group(2)+ m.group(3)+ m.group(4)+ ";","\\{\\\\" + escapedAccents.get(num) + "\\{\\\\j\\}\\}");
      }
 else {
        text=text.replaceAll(m.group(1) + "&#" + m.group(2)+ m.group(3)+ m.group(4)+ ";","\\{\\\\" + escapedAccents.get(num) + "\\{"+ m.group(1)+ "\\}\\}");
      }
    }
  }
  m=ESCAPED_PATTERN3.matcher(text);
  while (m.find()) {
    int num=Integer.decode(m.group(1).replace("x","#") + m.group(3));
    LOGGER.warn("HTML escaped char not converted: " + m.group(1) + m.group(2)+ m.group(3)+ " = "+ Integer.toString(num));
  }
  text=text.replace("$$","");
  m=ESCAPED_PATTERN4.matcher(text);
  while (m.find()) {
    LOGGER.warn("HTML escaped char not converted: " + m.group(1));
  }
  return text.trim();
}
