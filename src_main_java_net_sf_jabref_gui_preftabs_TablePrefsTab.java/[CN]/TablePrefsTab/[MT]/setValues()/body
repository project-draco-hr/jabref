{
  autoResizeMode.setSelected(prefs.getInt(JabRefPreferences.AUTO_RESIZE_MODE) == JTable.AUTO_RESIZE_ALL_COLUMNS);
  priField.setText(prefs.get(JabRefPreferences.PRIMARY_SORT_FIELD));
  secField.setText(prefs.get(JabRefPreferences.SECONDARY_SORT_FIELD));
  terField.setText(prefs.get(JabRefPreferences.TERTIARY_SORT_FIELD));
  priSort.setSelectedIndex(0);
  secSort.setSelectedIndex(0);
  terSort.setSelectedIndex(0);
  if (prefs.getBoolean(JabRefPreferences.NAMES_AS_IS)) {
    namesAsIs.setSelected(true);
  }
 else   if (prefs.getBoolean(JabRefPreferences.NAMES_FIRST_LAST)) {
    namesFf.setSelected(true);
  }
 else   if (prefs.getBoolean(JabRefPreferences.NAMES_NATBIB)) {
    namesNatbib.setSelected(true);
  }
 else {
    namesFl.setSelected(true);
  }
  if (prefs.getBoolean(JabRefPreferences.ABBR_AUTHOR_NAMES)) {
    abbrNames.setSelected(true);
  }
 else   if (prefs.getBoolean(JabRefPreferences.NAMES_LAST_ONLY)) {
    lastNamesOnly.setSelected(true);
  }
 else {
    noAbbrNames.setSelected(true);
  }
  priDesc.setSelected(prefs.getBoolean(JabRefPreferences.PRIMARY_SORT_DESCENDING));
  secDesc.setSelected(prefs.getBoolean(JabRefPreferences.SECONDARY_SORT_DESCENDING));
  terDesc.setSelected(prefs.getBoolean(JabRefPreferences.TERTIARY_SORT_DESCENDING));
  floatMarked.setSelected(prefs.getBoolean(JabRefPreferences.FLOAT_MARKED_ENTRIES));
  abbrNames.setEnabled(!namesNatbib.isSelected());
  lastNamesOnly.setEnabled(!namesNatbib.isSelected());
  noAbbrNames.setEnabled(!namesNatbib.isSelected());
  String numF=prefs.get(JabRefPreferences.NUMERIC_FIELDS);
  if (numF == null) {
    numericFields.setText("");
  }
 else {
    numericFields.setText(numF);
  }
}
