{
  Token s1=null;
  Token lab=null;
  Token s2=null;
  Token id=null;
  Token para=null;
  Token id2=null;
  Token i=null;
  Token t=null;
  Token s=null;
  try {
{
      if ((LA(1) == STRING)) {
        s1=LT(1);
        match(STRING);
        s=s1;
      }
 else       if ((LA(1) == ID) && (LA(2) == ASSIGN) && (LA(3) == STRING)) {
        lab=LT(1);
        match(ID);
        t=lab;
        match(ASSIGN);
        s2=LT(1);
        match(STRING);
        s=s2;
      }
 else       if ((LA(1) == ID) && (LA(2) == LPAREN)) {
        id=LT(1);
        match(ID);
        t=id;
        match(LPAREN);
        para=LT(1);
        match(STRING);
        match(RPAREN);
      }
 else       if ((LA(1) == ID) && (LA(2) == ASSIGN) && (LA(3) == INT)) {
        id2=LT(1);
        match(ID);
        t=id2;
      }
 else {
        throw new NoViableAltException(LT(1),getFilename());
      }
    }
    match(ASSIGN);
    i=LT(1);
    match(INT);
    Integer value=Integer.valueOf(i.getText());
    if (s != null) {
      tm.define(s.getText(),value.intValue());
      if (t != null) {
        StringLiteralSymbol sl=(StringLiteralSymbol)tm.getTokenSymbol(s.getText());
        sl.setLabel(t.getText());
        tm.mapToTokenSymbol(t.getText(),sl);
      }
    }
 else     if (t != null) {
      tm.define(t.getText(),value.intValue());
      if (para != null) {
        TokenSymbol ts=tm.getTokenSymbol(t.getText());
        ts.setParaphrase(para.getText());
      }
    }
  }
 catch (  RecognitionException ex) {
    reportError(ex);
    consume();
    consumeUntil(_tokenSet_1);
  }
}
