{
  openLast.setSelected(_prefs.getBoolean("openLastEdited"));
  allowEditing.setSelected(_prefs.getBoolean("allowTableEditing"));
  backup.setSelected(_prefs.getBoolean("backup"));
  defSort.setSelected(_prefs.getBoolean("defaultAutoSort"));
  ctrlClick.setSelected(_prefs.getBoolean("ctrlClick"));
  useOwner.setSelected(_prefs.getBoolean("useOwner"));
  useTimeStamp.setSelected(_prefs.getBoolean("useTimeStamp"));
  keyDuplicateWarningDialog.setSelected(_prefs.getBoolean("dialogWarningForDuplicateKey"));
  keyEmptyWarningDialog.setSelected(_prefs.getBoolean("dialogWarningForEmptyKey"));
  confirmDelete.setSelected(_prefs.getBoolean("confirmDelete"));
  if (_prefs.getBoolean("saveInStandardOrder"))   saveAuthorOrder.setSelected(true);
 else   if (_prefs.getBoolean("saveInOriginalOrder"))   saveOriginalOrder.setSelected(true);
 else   saveTableOrder.setSelected(true);
  autoDoubleBraces.setSelected(_prefs.getBoolean("autoDoubleBraces"));
  resolveStringsAll.setSelected(_prefs.getBoolean("resolveStringsAllFields"));
  resolveStringsStandard.setSelected(!resolveStringsAll.isSelected());
  doNotResolveStringsFor.setText(_prefs.get("doNotResolveStringsFor"));
  defOwnerField.setText(_prefs.get("defaultOwner"));
  timeStampFormat.setText(_prefs.get("timeStampFormat"));
  timeStampField.setText(_prefs.get("timeStampField"));
  useImportInspector.setSelected(_prefs.getBoolean("useImportInspectionDialog"));
  useImportInspectorForSingle.setSelected(_prefs.getBoolean("useImportInspectionDialogForSingle"));
  inspectionWarnDupli.setSelected(_prefs.getBoolean("warnAboutDuplicatesInInspection"));
  useImportInspectorForSingle.setEnabled(useImportInspector.isSelected());
  inspectionWarnDupli.setEnabled(useImportInspector.isSelected());
  bracesAroundCapitalsFields.setText(_prefs.get("putBracesAroundCapitals"));
  nonWrappableFields.setText(_prefs.get("nonWrappableFields"));
  String enc=_prefs.get("defaultEncoding");
  for (int i=0; i < Globals.ENCODINGS.length; i++) {
    if (Globals.ENCODINGS[i].equalsIgnoreCase(enc)) {
      encodings.setSelectedIndex(i);
      break;
    }
  }
  String oldLan=_prefs.get("language");
  int ilk=0;
  for (  String lan : GUIGlobals.LANGUAGES.values()) {
    if (lan.equals(oldLan)) {
      language.setSelectedIndex(ilk);
    }
    ilk++;
  }
}
