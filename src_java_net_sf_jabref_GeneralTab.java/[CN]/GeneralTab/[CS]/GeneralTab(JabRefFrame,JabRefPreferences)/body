{
  _prefs=prefs;
  _frame=frame;
  setLayout(new BorderLayout());
  autoOpenForm=new JCheckBox(Globals.lang("Open editor when a new entry is created"));
  openLast=new JCheckBox(Globals.lang("Open last edited databases at startup"));
  allowEditing=new JCheckBox(Globals.lang("Allow editing in table cells"));
  backup=new JCheckBox(Globals.lang("Backup old file when saving"));
  defSource=new JCheckBox(Globals.lang("Show BibTeX source by default"));
  showSource=new JCheckBox(Globals.lang("Show BibTeX source panel"));
  editSource=new JCheckBox(Globals.lang("Enable source editing"));
  defSort=new JCheckBox(Globals.lang("Sort Automatically"));
  ctrlClick=new JCheckBox(Globals.lang("Open right-click menu with Ctrl+left button"));
  disableOnMultiple=new JCheckBox(Globals.lang("Disable entry editor when multiple entries are selected"));
  useOwner=new JCheckBox(Globals.lang("Mark new entries with owner name") + ":");
  useTimeStamp=new JCheckBox(Globals.lang("Mark new entries with addition date") + ". " + Globals.lang("Date format")+ ":");
  keyDuplicateWarningDialog=new JCheckBox(Globals.lang("Show warning dialog when a duplicate BibTeX key is entered"));
  keyEmptyWarningDialog=new JCheckBox(Globals.lang("Show warning dialog when an empty BibTeX key is entered"));
  confirmDelete=new JCheckBox(Globals.lang("Show confirmation dialog when deleting entries"));
  saveInStandardOrder=new JCheckBox(Globals.lang("Always save database ordered by author name"));
  autoDoubleBraces=new JCheckBox("<HTML>" + Globals.lang("Store fields with double braces, and remove extra braces when loading.<BR>" + "Double braces signal that BibTeX should preserve character case.") + "</HTML>");
  useImportInspector=new JCheckBox(Globals.lang("Display imported entries in an inspection window before they are added."));
  useImportInspectorForSingle=new JCheckBox(Globals.lang("Use inspection window also when a single entry is imported."));
  JPanel general=new JPanel();
  defOwnerField=new JTextField();
  timeStampFormat=new JTextField();
  timeStampField=new JTextField();
  ownerHelp=new HelpAction(frame.helpDiag,GUIGlobals.ownerHelp,"Help",GUIGlobals.helpSmallIconFile);
  timeStampHelp=new HelpAction(frame.helpDiag,GUIGlobals.timeStampHelp,"Help",GUIGlobals.helpSmallIconFile);
  inspectionWarnDupli=new JCheckBox(Globals.lang("Warn about unresolved duplicates when closing inspection window"));
  Insets marg=new Insets(0,12,3,0);
  useImportInspectorForSingle.setMargin(marg);
  editSource.setMargin(marg);
  defSource.setMargin(marg);
  inspectionWarnDupli.setMargin(marg);
  fontSize=new JTextField();
  showSource.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent event){
      defSource.setEnabled(showSource.isSelected());
      editSource.setEnabled(showSource.isSelected());
    }
  }
);
  useImportInspector.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent event){
      useImportInspectorForSingle.setEnabled(useImportInspector.isSelected());
      inspectionWarnDupli.setEnabled(useImportInspector.isSelected());
    }
  }
);
  FormLayout layout=new FormLayout("1dlu, 8dlu, left:pref, 4dlu, fill:60dlu, 4dlu, fill:pref","");
  DefaultFormBuilder builder=new DefaultFormBuilder(layout);
  JPanel pan=new JPanel();
  builder.appendSeparator(Globals.lang("File"));
  builder.nextLine();
  builder.append(pan);
  builder.append(openLast);
  builder.nextLine();
  builder.append(pan);
  builder.append(backup);
  builder.nextLine();
  builder.append(pan);
  builder.append(saveInStandardOrder);
  builder.nextLine();
  builder.append(pan);
  builder.append(autoDoubleBraces);
  builder.nextLine();
  builder.appendSeparator(Globals.lang("Entry editor"));
  builder.nextLine();
  builder.append(pan);
  builder.append(autoOpenForm);
  builder.nextLine();
  builder.append(pan);
  builder.append(disableOnMultiple);
  builder.nextLine();
  builder.append(pan);
  builder.append(showSource);
  builder.nextLine();
  builder.append(pan);
  builder.append(defSource);
  builder.nextLine();
  builder.appendSeparator(Globals.lang("Miscellaneous"));
  builder.append(pan);
  builder.append(useImportInspector);
  builder.nextLine();
  builder.append(pan);
  builder.append(useImportInspector);
  builder.nextLine();
  builder.append(pan);
  builder.append(useImportInspectorForSingle);
  builder.nextLine();
  builder.append(pan);
  builder.append(inspectionWarnDupli);
  builder.nextLine();
  builder.append(pan);
  builder.append(ctrlClick);
  builder.nextLine();
  builder.append(pan);
  builder.append(confirmDelete);
  builder.nextLine();
  builder.append(pan);
  builder.append(keyDuplicateWarningDialog);
  builder.nextLine();
  builder.append(pan);
  builder.append(keyEmptyWarningDialog);
  builder.nextLine();
  FormLayout layout2=new FormLayout("left:pref, 8dlu, fill:60dlu, 4dlu, left:pref, 4dlu, left:pref, 4dlu, fill:pref","");
  DefaultFormBuilder builder2=new DefaultFormBuilder(layout2);
  builder2.append(useOwner);
  builder2.append(defOwnerField);
  JButton hlp=new JButton(ownerHelp);
  hlp.setText(null);
  hlp.setPreferredSize(new Dimension(24,24));
  builder2.append(hlp);
  builder2.nextLine();
  builder2.append(useTimeStamp);
  builder2.append(timeStampFormat);
  builder2.append(Globals.lang("Field name") + ":");
  builder2.append(timeStampField);
  hlp=new JButton(timeStampHelp);
  hlp.setText(null);
  hlp.setPreferredSize(new Dimension(24,24));
  builder2.append(hlp);
  builder2.nextLine();
  JLabel lab;
  lab=new JLabel(Globals.lang("Language") + ":");
  builder2.append(lab);
  builder2.append(language);
  builder2.nextLine();
  lab=new JLabel(Globals.lang("Default encoding") + ":");
  builder2.append(lab);
  builder2.append(encodings);
  lab=new JLabel(Globals.lang("Menu and label font size") + ":");
  builder2.nextLine();
  builder2.append(lab);
  builder2.append(fontSize);
  builder.append(pan);
  builder.append(builder2.getPanel());
  builder.nextLine();
  pan=builder.getPanel();
  pan.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  add(pan,BorderLayout.CENTER);
}
