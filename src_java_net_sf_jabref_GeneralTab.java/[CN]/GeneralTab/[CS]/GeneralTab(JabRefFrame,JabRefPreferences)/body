{
  _prefs=prefs;
  _frame=frame;
  setLayout(new BorderLayout());
  openLast=new JCheckBox(Globals.lang("Open last edited databases at startup"));
  allowEditing=new JCheckBox(Globals.lang("Allow editing in table cells"));
  backup=new JCheckBox(Globals.lang("Backup old file when saving"));
  defSort=new JCheckBox(Globals.lang("Sort Automatically"));
  ctrlClick=new JCheckBox(Globals.lang("Open right-click menu with Ctrl+left button"));
  useOwner=new JCheckBox(Globals.lang("Mark new entries with owner name") + ":");
  useTimeStamp=new JCheckBox(Globals.lang("Mark new entries with addition date") + ". " + Globals.lang("Date format")+ ":");
  overwriteOwner=new JCheckBox(Globals.lang("Overwrite"));
  overwriteTimeStamp=new JCheckBox(Globals.lang("Overwrite"));
  overwriteOwner.setToolTipText(Globals.lang("If a pasted or imported entry already has " + "the field set, overwrite."));
  overwriteTimeStamp.setToolTipText(Globals.lang("If a pasted or imported entry already has " + "the field set, overwrite."));
  keyDuplicateWarningDialog=new JCheckBox(Globals.lang("Show warning dialog when a duplicate BibTeX key is entered"));
  keyEmptyWarningDialog=new JCheckBox(Globals.lang("Show warning dialog when an empty BibTeX key is entered"));
  confirmDelete=new JCheckBox(Globals.lang("Show confirmation dialog when deleting entries"));
  saveAuthorOrder=new JRadioButton(Globals.lang("Save ordered by author/editor/year"));
  saveOriginalOrder=new JRadioButton(Globals.lang("Save entries in their original order"));
  saveTableOrder=new JRadioButton(Globals.lang("Save in default table sort order"));
  ButtonGroup bg=new ButtonGroup();
  bg.add(saveAuthorOrder);
  bg.add(saveOriginalOrder);
  bg.add(saveTableOrder);
  resolveStringsAll=new JRadioButton(Globals.lang("Resolve strings for all fields except") + ":");
  resolveStringsStandard=new JRadioButton(Globals.lang("Resolve strings for standard BibTeX fields only"));
  bg=new ButtonGroup();
  bg.add(resolveStringsAll);
  bg.add(resolveStringsStandard);
  doNotResolveStringsFor=new JTextField(30);
  autoDoubleBraces=new JCheckBox(Globals.lang("Remove double braces around BibTeX fields when loading."));
  useImportInspector=new JCheckBox(Globals.lang("Display imported entries in an inspection window before they are added."));
  useImportInspectorForSingle=new JCheckBox(Globals.lang("Use inspection window also when a single entry is imported."));
  defOwnerField=new JTextField();
  timeStampFormat=new JTextField();
  timeStampField=new JTextField();
  ownerHelp=new HelpAction(frame.helpDiag,GUIGlobals.ownerHelp,"Help",GUIGlobals.getIconUrl("helpSmall"));
  timeStampHelp=new HelpAction(frame.helpDiag,GUIGlobals.timeStampHelp,"Help",GUIGlobals.getIconUrl("helpSmall"));
  inspectionWarnDupli=new JCheckBox(Globals.lang("Warn about unresolved duplicates when closing inspection window"));
  Insets marg=new Insets(0,12,3,0);
  useImportInspectorForSingle.setMargin(marg);
  inspectionWarnDupli.setMargin(marg);
  bracesAroundCapitalsFields=new JTextField(25);
  nonWrappableFields=new JTextField(25);
  useImportInspector.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent event){
      useImportInspectorForSingle.setEnabled(useImportInspector.isSelected());
      inspectionWarnDupli.setEnabled(useImportInspector.isSelected());
    }
  }
);
  FormLayout layout=new FormLayout("8dlu, left:pref, 8dlu, fill:pref, 4dlu, fill:pref","pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, " + "pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, " + "pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, "+ "pref, 6dlu, pref, 6dlu, pref, 6dlu, pref");
  DefaultFormBuilder builder=new DefaultFormBuilder(layout);
  CellConstraints cc=new CellConstraints();
  builder.addSeparator(Globals.lang("File"),cc.xyw(1,1,5));
  builder.add(openLast,cc.xy(2,3));
  builder.add(backup,cc.xy(2,5));
  builder.add(autoDoubleBraces,cc.xy(2,7));
  builder.add(saveAuthorOrder,cc.xy(4,3));
  builder.add(saveTableOrder,cc.xy(4,5));
  builder.add(saveOriginalOrder,cc.xy(4,7));
  JLabel label=new JLabel(Globals.lang("Store the following fields with braces around capital letters") + ":");
  DefaultFormBuilder builder3=new DefaultFormBuilder(new FormLayout("left:pref, 4dlu, fill:pref",""));
  builder3.append(label);
  builder3.append(bracesAroundCapitalsFields);
  label=new JLabel(Globals.lang("Do not wrap the following fields when saving") + ":");
  builder3.append(label);
  builder3.append(nonWrappableFields);
  builder.add(builder3.getPanel(),cc.xyw(2,9,3));
  builder.add(resolveStringsStandard,cc.xyw(2,11,5));
  DefaultFormBuilder builder4=new DefaultFormBuilder(new FormLayout("left:pref, 4dlu, fill:pref",""));
  builder4.append(resolveStringsAll);
  builder4.append(doNotResolveStringsFor);
  builder.add(builder4.getPanel(),cc.xyw(2,13,1));
  builder.addSeparator(Globals.lang("Miscellaneous"),cc.xyw(1,15,5));
  builder.add(useImportInspector,cc.xy(2,17));
  builder.add(useImportInspectorForSingle,cc.xy(2,19));
  builder.add(inspectionWarnDupli,cc.xy(2,21));
  builder.add(ctrlClick,cc.xy(2,23));
  builder.add(confirmDelete,cc.xy(2,25));
  builder.add(keyDuplicateWarningDialog,cc.xy(2,27));
  builder.add(keyEmptyWarningDialog,cc.xy(2,29));
  FormLayout layout2=new FormLayout("left:pref, 8dlu, fill:50dlu, 4dlu, left:pref, 4dlu, left:pref, 4dlu, fill:50dlu, 4dlu, fill:pref","");
  DefaultFormBuilder builder2=new DefaultFormBuilder(layout2);
  builder2.append(useOwner);
  builder2.append(defOwnerField);
  builder2.append(overwriteOwner);
  JButton hlp=new JButton(ownerHelp);
  hlp.setText(null);
  hlp.setPreferredSize(new Dimension(24,24));
  builder2.append(hlp);
  builder2.nextLine();
  builder2.append(useTimeStamp);
  builder2.append(timeStampField);
  builder2.append(overwriteTimeStamp);
  builder2.append(Globals.lang("Field name") + ":");
  builder2.append(timeStampFormat);
  hlp=new JButton(timeStampHelp);
  hlp.setText(null);
  hlp.setPreferredSize(new Dimension(24,24));
  builder2.append(hlp);
  builder2.nextLine();
  JLabel lab;
  lab=new JLabel(Globals.lang("Language") + ":");
  builder2.append(lab);
  builder2.append(language);
  builder2.nextLine();
  lab=new JLabel(Globals.lang("Default encoding") + ":");
  builder2.append(lab);
  builder2.append(encodings);
  builder.add(builder2.getPanel(),cc.xyw(2,31,3));
  JPanel pan=builder.getPanel();
  pan.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  add(pan,BorderLayout.CENTER);
}
