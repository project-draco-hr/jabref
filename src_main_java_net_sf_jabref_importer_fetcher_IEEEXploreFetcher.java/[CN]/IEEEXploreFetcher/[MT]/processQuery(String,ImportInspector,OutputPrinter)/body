{
  String terms=query.replaceAll("\"","\\.QT\\.");
  shouldContinue=true;
  int parsed=0;
  int pageNumber=1;
  String postData=makeSearchPostRequestPayload(pageNumber,terms);
  try {
    URL url=new URL(IEEEXploreFetcher.URL_SEARCH);
    HttpURLConnection con=(HttpURLConnection)url.openConnection();
    con.setRequestProperty("Accept","application/json");
    con.setRequestProperty("Content-type","application/json");
    String page=Util.getPostResults(con,postData,StandardCharsets.UTF_8);
    if (page.isEmpty()) {
      status.showMessage(Localization.lang("You have entered an invalid search '%0'.",query),DIALOG_TITLE,JOptionPane.INFORMATION_MESSAGE);
      return false;
    }
    JSONObject searchResultsJson=new JSONObject(page);
    int hits=searchResultsJson.getInt("totalRecords");
    if (hits == 0) {
      status.showMessage(Localization.lang("No entries found for the search string '%0'",query),DIALOG_TITLE,JOptionPane.INFORMATION_MESSAGE);
      return false;
    }
    if (hits > IEEEXploreFetcher.MAX_FETCH) {
      status.showMessage(Localization.lang("%0 entries found. To reduce server load, only %1 will be downloaded.",String.valueOf(hits),String.valueOf(IEEEXploreFetcher.MAX_FETCH)),DIALOG_TITLE,JOptionPane.INFORMATION_MESSAGE);
    }
    URL bibtexURL=new URL(createBibtexQueryURL(searchResultsJson));
    String bibtexPage=Util.getResults(bibtexURL);
    bibtexPage=preprocessBibtexResultsPage(bibtexPage);
    Collection<BibtexEntry> parsedBibtexCollection=BibtexParser.fromString(bibtexPage);
    if (parsedBibtexCollection == null) {
      status.showMessage(Localization.lang("Error occured parsing Bibtex returned from IEEEXplore"),DIALOG_TITLE,JOptionPane.INFORMATION_MESSAGE);
      return false;
    }
    int nEntries=parsedBibtexCollection.size();
    Iterator<BibtexEntry> parsedBibtexCollectionIterator=parsedBibtexCollection.iterator();
    while (parsedBibtexCollectionIterator.hasNext() && shouldContinue) {
      dialog.addEntry(cleanup(parsedBibtexCollectionIterator.next()));
      dialog.setProgress(parsed,nEntries);
      parsed++;
    }
    return true;
  }
 catch (  MalformedURLException e) {
    e.printStackTrace();
  }
catch (  ConnectException e) {
    status.showMessage(Localization.lang("Connection to IEEEXplore failed"),DIALOG_TITLE,JOptionPane.ERROR_MESSAGE);
  }
catch (  UnknownHostException e) {
    status.showMessage(Localization.lang("Connection to IEEEXplore failed"),DIALOG_TITLE,JOptionPane.ERROR_MESSAGE);
  }
catch (  IOException e) {
    status.showMessage(e.getMessage(),DIALOG_TITLE,JOptionPane.ERROR_MESSAGE);
    LOGGER.warn("Search IEEEXplore: " + e.getMessage(),e);
  }
catch (  JSONException e) {
    status.showMessage(e.getMessage(),DIALOG_TITLE,JOptionPane.ERROR_MESSAGE);
    LOGGER.warn("Search IEEEXplore: " + e.getMessage(),e);
  }
  return false;
}
