{
  int score=-3;
  TableCellRenderer renderer=defRenderer;
  int status=getCellStatus(row,column);
  if (!showingFloatSearch || matches(row,searchMatcher))   score++;
  if (!showingFloatGrouping || matches(row,groupMatcher))   score+=2;
  if (score < -1)   renderer=veryGrayedOutRenderer;
 else   if (score == -1)   renderer=grayedOutRenderer;
 else   if (tableColorCodes) {
    if (column == 0) {
      if (!isComplete(row)) {
        incRenderer.setNumber(row);
        renderer=incRenderer;
      }
 else {
        compRenderer.setNumber(row);
        if (isMarked(row)) {
          renderer=markedNumberRenderer;
          markedNumberRenderer.setNumber(row);
        }
 else         renderer=compRenderer;
      }
    }
 else     if (status == EntryTableModel.REQUIRED)     renderer=reqRenderer;
 else     if (status == EntryTableModel.OPTIONAL)     renderer=optRenderer;
 else     if (status == EntryTableModel.BOOLEAN)     renderer=getDefaultRenderer(Boolean.class);
  }
  if ((column != 0) && isMarked(row)) {
    renderer=markedRenderer;
  }
  return renderer;
}
