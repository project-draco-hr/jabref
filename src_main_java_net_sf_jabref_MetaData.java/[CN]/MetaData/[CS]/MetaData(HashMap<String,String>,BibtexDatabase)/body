{
  boolean groupsTreePresent=false;
  Vector<String> flatGroupsData=null;
  Vector<String> treeGroupsData=null;
  int groupsVersionOnDisk=0;
  if (inData != null) {
    for (    String key : inData.keySet()) {
      StringReader data=new StringReader(inData.get(key));
      String unit;
      Vector<String> orderedData=new Vector<>();
      try {
        while ((unit=getNextUnit(data)) != null) {
          orderedData.add(unit);
        }
      }
 catch (      IOException ex) {
        System.err.println("Weird error while parsing meta data.");
      }
switch (key) {
case "groupsversion":
        if (orderedData.size() >= 1) {
          groupsVersionOnDisk=Integer.parseInt(orderedData.firstElement());
        }
      break;
case "groupstree":
    groupsTreePresent=true;
  treeGroupsData=orderedData;
break;
case "groups":
flatGroupsData=orderedData;
break;
default :
putData(key,orderedData);
break;
}
}
}
if (groupsTreePresent) {
putGroups(treeGroupsData,db,groupsVersionOnDisk);
}
if (!groupsTreePresent && flatGroupsData != null) {
try {
groupsRoot=VersionHandling.importFlatGroups(flatGroupsData);
groupTreeValid=true;
}
 catch (IllegalArgumentException ex) {
groupTreeValid=true;
}
}
}
