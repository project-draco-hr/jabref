{
  boolean groupsTreePresent=false;
  Vector<String> flatGroupsData=null;
  Vector<String> treeGroupsData=null;
  int groupsVersionOnDisk=0;
  if (inData != null) {
    for (    Map.Entry<String,String> entry : inData.entrySet()) {
      StringReader data=new StringReader(entry.getValue());
      String unit;
      Vector<String> orderedData=new Vector<>();
      try {
        while ((unit=getNextUnit(data)) != null) {
          orderedData.add(unit);
        }
      }
 catch (      IOException ex) {
        System.err.println("Weird error while parsing meta data.");
      }
      if ("groupsversion".equals(entry.getKey())) {
        if (orderedData.size() >= 1) {
          groupsVersionOnDisk=Integer.parseInt(orderedData.firstElement());
        }
      }
 else       if ("groupstree".equals(entry.getKey())) {
        groupsTreePresent=true;
        treeGroupsData=orderedData;
      }
 else       if ("groups".equals(entry.getKey())) {
        flatGroupsData=orderedData;
      }
 else {
        putData(entry.getKey(),orderedData);
      }
    }
  }
  if (groupsTreePresent) {
    putGroups(treeGroupsData,db,groupsVersionOnDisk);
  }
  if (!groupsTreePresent && (flatGroupsData != null)) {
    try {
      groupsRoot=VersionHandling.importFlatGroups(flatGroupsData);
      groupTreeValid=true;
    }
 catch (    IllegalArgumentException ex) {
      groupTreeValid=true;
    }
  }
}
