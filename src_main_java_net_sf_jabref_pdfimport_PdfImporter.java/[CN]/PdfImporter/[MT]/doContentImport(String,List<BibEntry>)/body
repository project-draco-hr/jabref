{
  File file=new File(fileName);
  BibEntry entry;
  try (InputStream in=new FileInputStream(file)){
    PdfContentImporter contentImporter=new PdfContentImporter();
    ParserResult result=contentImporter.importDatabase(in);
    if (result.hasWarnings()) {
      frame.showMessage(result.getErrorMessage());
    }
    if (!result.getDatabase().hasEntries()) {
      entry=createNewBlankEntry(fileName);
      res.add(entry);
      return;
    }
    entry=result.getDatabase().getEntries().get(0);
  }
 catch (  IOException e) {
    LOGGER.info("Import failed",e);
    entry=createNewBlankEntry(fileName);
    res.add(entry);
    return;
  }
  panel.getDatabase().insertEntry(entry);
  panel.markBaseChanged();
  LabelPatternUtil.makeLabel(panel.getBibDatabaseContext().getMetaData(),panel.getDatabase(),entry);
  DroppedFileHandler dfh=new DroppedFileHandler(frame,panel);
  dfh.linkPdfToEntry(fileName,entry);
  panel.highlightEntry(entry);
  if (Globals.prefs.getBoolean(JabRefPreferences.AUTO_OPEN_FORM)) {
    EntryEditor editor=panel.getEntryEditor(entry);
    panel.showEntryEditor(editor);
    panel.adjustSplitter();
  }
  res.add(entry);
}
