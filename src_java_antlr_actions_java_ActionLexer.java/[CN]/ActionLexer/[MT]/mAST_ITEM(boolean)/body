{
  int _ttype;
  Token _token=null;
  int _begin=text.length();
  _ttype=AST_ITEM;
  int _saveIndex;
  Token t=null;
  Token id=null;
  Token ctor=null;
  if ((LA(1) == '#') && (LA(2) == '(')) {
    _saveIndex=text.length();
    match('#');
    text.setLength(_saveIndex);
    mTREE(true);
    t=_returnToken;
  }
 else   if ((LA(1) == '#') && (_tokenSet_3.member(LA(2)))) {
    _saveIndex=text.length();
    match('#');
    text.setLength(_saveIndex);
    mID(true);
    id=_returnToken;
    String idt=id.getText();
    String var=generator.mapTreeId(idt,transInfo);
    if (var != null) {
      text.setLength(_begin);
      text.append(var);
    }
{
      if ((_tokenSet_4.member(LA(1))) && (true) && (true)) {
        mWS(false);
      }
 else {
      }
    }
{
      if ((LA(1) == '=') && (true) && (true)) {
        mVAR_ASSIGN(false);
      }
 else {
      }
    }
  }
 else   if ((LA(1) == '#') && (LA(2) == '[')) {
    _saveIndex=text.length();
    match('#');
    text.setLength(_saveIndex);
    mAST_CONSTRUCTOR(true);
    ctor=_returnToken;
  }
 else   if ((LA(1) == '#') && (LA(2) == '#')) {
    match("##");
    String r=currentRule.getRuleName() + "_AST";
    text.setLength(_begin);
    text.append(r);
    if (transInfo != null) {
      transInfo.refRuleRoot=r;
    }
{
      if ((_tokenSet_4.member(LA(1))) && (true) && (true)) {
        mWS(false);
      }
 else {
      }
    }
{
      if ((LA(1) == '=') && (true) && (true)) {
        mVAR_ASSIGN(false);
      }
 else {
      }
    }
  }
 else {
    throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
  }
  if (_createToken && _token == null && _ttype != Token.SKIP) {
    _token=makeToken(_ttype);
    _token.setText(new String(text.getBuffer(),_begin,text.length() - _begin));
  }
  _returnToken=_token;
}
