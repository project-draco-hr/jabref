{
  couldNotConnect=false;
  couldNotRunClient=false;
  String command=Globals.prefs.get(JabRefPreferences.EMACS_PATH);
  String addParams[]=Globals.prefs.get(JabRefPreferences.EMACS_ADDITIONAL_PARAMETERS).split(" ");
  try {
    String[] com=new String[addParams.length + 2];
    com[0]=command;
    for (int i=0; i < addParams.length; i++) {
      com[i + 1]=addParams[i];
    }
    com[com.length - 1]=Globals.ON_WIN ? "(insert \\\"\\\\" + Globals.prefs.get("citeCommandEmacs").replaceAll("\\\\","\\\\\\\\") + "{"+ keys+ "}\\\")" : "(insert \"" + Globals.prefs.get("citeCommandEmacs").replaceAll("\\\\","\\\\\\\\") + "{"+ keys+ "}\")";
    final Process p=Runtime.getRuntime().exec(com);
    Runnable errorListener=new Runnable(){
      public void run(){
        InputStream out=p.getErrorStream();
        int c;
        StringBuffer sb=new StringBuffer();
        try {
          while ((c=out.read()) != -1)           sb.append((char)c);
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
        if (sb.toString().trim().length() > 0) {
          System.out.println(sb.toString());
          couldNotConnect=true;
          return;
        }
      }
    }
;
    Thread t=new Thread(errorListener);
    t.start();
    t.join();
  }
 catch (  IOException excep) {
    couldNotRunClient=true;
    return;
  }
catch (  InterruptedException e) {
    e.printStackTrace();
  }
}
