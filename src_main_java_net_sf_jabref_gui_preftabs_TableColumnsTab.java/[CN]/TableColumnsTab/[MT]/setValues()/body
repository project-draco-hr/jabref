{
  fileColumn.setSelected(prefs.getBoolean(JabRefPreferences.FILE_COLUMN));
  urlColumn.setSelected(prefs.getBoolean(JabRefPreferences.URL_COLUMN));
  preferUrl.setSelected(!prefs.getBoolean(JabRefPreferences.PREFER_URL_DOI));
  preferDoi.setSelected(prefs.getBoolean(JabRefPreferences.PREFER_URL_DOI));
  fileColumn.setSelected(prefs.getBoolean(JabRefPreferences.FILE_COLUMN));
  arxivColumn.setSelected(prefs.getBoolean(JabRefPreferences.ARXIV_COLUMN));
  extraFileColumns.setSelected(prefs.getBoolean(JabRefPreferences.EXTRA_FILE_COLUMNS));
  if (extraFileColumns.isSelected()) {
    String[] desiredColumns=prefs.getStringArray(JabRefPreferences.LIST_OF_FILE_COLUMNS);
    int listSize=listOfFileColumns.getModel().getSize();
    int[] indicesToSelect=new int[listSize];
    for (int i=0; i < listSize; i++) {
      indicesToSelect[i]=listSize + 1;
      for (      String desiredColumn : desiredColumns) {
        if (listOfFileColumns.getModel().getElementAt(i).equals(desiredColumn)) {
          indicesToSelect[i]=i;
          break;
        }
      }
    }
    listOfFileColumns.setSelectedIndices(indicesToSelect);
  }
 else {
    listOfFileColumns.setSelectedIndices(new int[]{});
  }
  oldRankingColumn=prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_RANKING);
  rankingColumn.setSelected(oldRankingColumn);
  oldQualityColumn=prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_QUALITY);
  qualityColumn.setSelected(oldQualityColumn);
  oldPriorityColumn=prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRIORITY);
  priorityColumn.setSelected(oldPriorityColumn);
  oldRelevanceColumn=prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_RELEVANCE);
  relevanceColumn.setSelected(oldRelevanceColumn);
  oldPrintedColumn=prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_PRINTED);
  printedColumn.setSelected(oldPrintedColumn);
  oldReadStatusColumn=prefs.getBoolean(SpecialFieldsUtils.PREF_SHOWCOLUMN_READ);
  readStatusColumn.setSelected(oldReadStatusColumn);
  oldSyncKeyWords=prefs.getBoolean(SpecialFieldsUtils.PREF_AUTOSYNCSPECIALFIELDSTOKEYWORDS);
  syncKeywords.setSelected(oldSyncKeyWords);
  oldWriteSpecialFields=prefs.getBoolean(SpecialFieldsUtils.PREF_SERIALIZESPECIALFIELDS);
  writeSpecialFields.setSelected(oldWriteSpecialFields);
  oldSpecialFieldsEnabled=prefs.getBoolean(SpecialFieldsUtils.PREF_SPECIALFIELDSENABLED);
  specialFieldsEnabled.setSelected(!oldSpecialFieldsEnabled);
  specialFieldsEnabled.setSelected(oldSpecialFieldsEnabled);
  tableRows.clear();
  String[] names=prefs.getStringArray(JabRefPreferences.COLUMN_NAMES);
  String[] lengths=prefs.getStringArray(JabRefPreferences.COLUMN_WIDTHS);
  for (int i=0; i < names.length; i++) {
    if (i < lengths.length) {
      tableRows.add(new TableRow(names[i],Integer.parseInt(lengths[i])));
    }
 else {
      tableRows.add(new TableRow(names[i]));
    }
  }
  rowCount=tableRows.size() + 5;
  ncWidth=prefs.getInt(JabRefPreferences.NUMBER_COL_WIDTH);
}
