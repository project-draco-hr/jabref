{
  VM vm=new VM("FUNCTION {test} " + "{ \"123456789\" #2  #1  substring$ " + "  \"123456789\" #4 global.max$ substring$ "+ "  \"123456789\" #1  #9  substring$ "+ "  \"123456789\" #1  #10 substring$ "+ "  \"123456789\" #1  #99 substring$ "+ "  \"123456789\" #-7 #3  substring$ "+ "  \"123456789\" #-1 #1  substring$ "+ "  \"123456789\" #-1 #3  substring$ "+ "  \"123456789\" #-2 #2  substring$ "+ "} EXECUTE {test} ");
  Vector<BibtexEntry> v=new Vector<>();
  vm.run(v);
  Assert.assertEquals("78",vm.getStack().pop());
  Assert.assertEquals("789",vm.getStack().pop());
  Assert.assertEquals("9",vm.getStack().pop());
  Assert.assertEquals("123",vm.getStack().pop());
  Assert.assertEquals("123456789",vm.getStack().pop());
  Assert.assertEquals("123456789",vm.getStack().pop());
  Assert.assertEquals("123456789",vm.getStack().pop());
  Assert.assertEquals("456789",vm.getStack().pop());
  Assert.assertEquals("2",vm.getStack().pop());
  Assert.assertEquals(0,vm.getStack().size());
}
