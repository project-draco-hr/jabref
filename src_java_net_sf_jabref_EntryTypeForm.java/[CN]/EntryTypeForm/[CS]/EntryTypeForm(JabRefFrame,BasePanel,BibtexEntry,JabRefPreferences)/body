{
  super(frame_);
  frame=frame_;
  panel=panel_;
  entry=entry_;
  prefs=prefs_;
  entry.addPropertyChangeListener(this);
  setTitle(entry.getType().getName());
  setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
  helpAction=new HelpAction(frame.helpDiag,GUIGlobals.entryEditorHelp,"Help (F1)");
  closeAction=new CloseAction();
  copyKeyAction=new CopyKeyAction();
  generateKeyAction=new GenerateKeyAction(frame);
  storeFieldAction=new StoreFieldAction(this);
  addWindowListener(new WindowAdapter(){
    public void windowClosing(    WindowEvent e){
      closeAction.actionPerformed(null);
    }
    public void windowOpened(    WindowEvent e){
switch (tabbed.getSelectedIndex()) {
case 0:
        reqPanel.activate();
      break;
case 1:
    optPanel.activate();
  break;
case 2:
genPanel.activate();
break;
case 3:
source.requestFocus();
break;
}
}
}
);
contentPane.setLayout(new BorderLayout());
setupToolBar();
setupFieldPanels(reqPanel,optPanel,genPanel);
setupSourcePanel();
tabbed.setTabPlacement(SwingConstants.TOP);
tabbed.addTab("Required fields",new ImageIcon(GUIGlobals.showReqIconFile),reqPanel.getPane(),"Show required fields");
tabbed.addTab("Optional fields",new ImageIcon(GUIGlobals.showOptIconFile),optPanel.getPane(),"Show optional fields");
tabbed.addTab("General fields",new ImageIcon(GUIGlobals.showGenIconFile),genPanel.getPane(),"Show general fields");
tabbed.addTab("Bibtex source",new ImageIcon(GUIGlobals.sourceIconFile),srcPanel,"Show/edit bibtex source");
tabbed.addChangeListener(new TabListener());
contentPane.add(tabbed,BorderLayout.CENTER);
setFocusTraversalPolicy(new LayoutFocusTraversalPolicy(){
protected boolean accept(Component c){
return (super.accept(c) && (c instanceof JTextComponent));
}
}
);
int prefHeight=(int)(Math.max(genW,Math.max(optW,reqW)) * GUIGlobals.FORM_HEIGHT[prefs.getInt("entryTypeFormHeightFactor")]);
setSize(GUIGlobals.FORM_WIDTH[prefs.getInt("entryTypeFormWidth")],prefHeight);
if (prefs.getBoolean("defaultShowSource")) {
tabbed.setSelectedIndex(3);
}
setResizable(true);
}
