{
  ArrayList<Object[]> result=new ArrayList<>();
  try (Connection conn=this.connectToDB(dbs)){
    Iterator<String> itLista=listOfDBs.iterator();
    String jabrefDBs="(";
    while (itLista.hasNext()) {
      jabrefDBs+='\'' + itLista.next() + "',";
    }
    jabrefDBs=jabrefDBs.substring(0,jabrefDBs.length() - 1) + ')';
    try (Statement statement=SQLUtil.queryAllFromTable(conn,"jabref_database WHERE database_name IN " + jabrefDBs)){
      ResultSet rsDatabase=statement.getResultSet();
      while (rsDatabase.next()) {
        BibDatabase database=new BibDatabase();
        HashMap<String,EntryType> types=new HashMap<>();
        try (Statement entryTypes=SQLUtil.queryAllFromTable(conn,"entry_types")){
          ResultSet rsEntryType=entryTypes.getResultSet();
          while (rsEntryType.next()) {
            types.put(rsEntryType.getString("entry_types_id"),EntryTypes.getType(rsEntryType.getString("label")));
          }
          rsEntryType.getStatement().close();
        }
         List<String> colNames=this.readColumnNames(conn);
        for (        String next : colNames) {
          if (!columnsNotConsideredForEntries.contains(next)) {
            colNames.add(next);
          }
        }
        String database_id=rsDatabase.getString("database_id");
        HashMap<String,BibEntry> entries=new HashMap<>();
        try (Statement entryStatement=SQLUtil.queryAllFromTable(conn,"entries WHERE database_id= '" + database_id + "';")){
          ResultSet rsEntries=entryStatement.getResultSet();
          while (rsEntries.next()) {
            String id=rsEntries.getString("entries_id");
            BibEntry entry=new BibEntry(IdGenerator.next(),types.get(rsEntries.getString("entry_types_id")));
            entry.setField(BibEntry.KEY_FIELD,rsEntries.getString("cite_key"));
            for (            String col : colNames) {
              String value=rsEntries.getString(col);
              if (value != null) {
                col=col.charAt(col.length() - 1) == '_' ? col.substring(0,col.length() - 1) : col;
                entry.setField(col,value);
              }
            }
            entries.put(id,entry);
            database.insertEntry(entry);
          }
          rsEntries.getStatement().close();
        }
         try (Statement stringStatement=SQLUtil.queryAllFromTable(conn,"strings WHERE database_id='" + database_id + '\'')){
          ResultSet rsStrings=stringStatement.getResultSet();
          while (rsStrings.next()) {
            String label=rsStrings.getString("label");
            String content=rsStrings.getString("content");
            if ("@PREAMBLE".equals(label)) {
              database.setPreamble(content);
            }
 else {
              BibtexString string=new BibtexString(IdGenerator.next(),label,content);
              database.addString(string);
            }
          }
          rsStrings.getStatement().close();
        }
         MetaData metaData=new MetaData();
        metaData.initializeNewDatabase();
        importGroupsTree(metaData,entries,conn,database_id);
        result.add(new Object[]{database,metaData,rsDatabase.getString("database_name")});
      }
      rsDatabase.close();
    }
     conn.close();
    return result;
  }
 }
