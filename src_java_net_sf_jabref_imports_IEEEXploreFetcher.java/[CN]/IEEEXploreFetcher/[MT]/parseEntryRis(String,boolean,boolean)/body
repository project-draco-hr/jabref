{
  URL url;
  URLConnection conn;
  try {
    url=new URL(risUrl);
    conn=url.openConnection();
  }
 catch (  MalformedURLException e) {
    e.printStackTrace();
    return null;
  }
  conn.setDoInput(true);
  conn.setDoOutput(true);
  conn.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
  PrintWriter out=new PrintWriter(conn.getOutputStream());
  String cite="cite";
  if (abs == true)   cite="cite_abs";
  out.write("fileFormate=ris&dlSelect=" + cite + "&arnumber="+ URLEncoder.encode("<arnumber>" + number + "</arnumber>","UTF-8"));
  out.flush();
  out.close();
  InputStream inp=conn.getInputStream();
  List<BibtexEntry> items=new RisImporter().importEntries(inp);
  inp.close();
  if (items.size() > 0) {
    BibtexEntry entry=items.get(0);
    if (isStandard == true) {
      entry.setType(BibtexEntryType.getType("standard"));
      entry.setField("organization","IEEE");
      String stdNumber=entry.getField("journal");
      String[] parts=stdNumber.split("Std ");
      if (parts.length == 2) {
        stdNumber=parts[1];
        parts=stdNumber.split(", ");
        if (parts.length == 2) {
          stdNumber=parts[0];
          String date=parts[1];
          parts=date.split(" ");
          if (parts.length == 2) {
            entry.setField("month",parts[0]);
          }
        }
        entry.setField("number",stdNumber);
      }
      entry.clearField("journal");
      entry.clearField("booktitle");
      String title=entry.getField("title");
      entry.setField("title",title);
    }
    return entry;
  }
 else   return null;
}
