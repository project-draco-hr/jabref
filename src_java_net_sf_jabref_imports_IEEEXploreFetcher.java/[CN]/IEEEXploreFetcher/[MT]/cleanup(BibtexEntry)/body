{
  if (entry == null)   return null;
  if (entry.getType().getName() == "Standard")   return entry;
  String author=(String)entry.getField("author");
  if (author != null) {
    author=author.replaceAll("\\.",". ");
    author=author.replaceAll("  "," ");
    author=author.replaceAll("\\. -",".-");
    entry.setField("author",author);
  }
  String month=(String)entry.getField("month");
  if (!month.isEmpty()) {
    month=month.replaceAll("\\.","");
    month=month.toLowerCase();
    Pattern monthPattern=Pattern.compile("(\\d*+)\\s*([a-z]*+)-*(\\d*+)\\s*([a-z]*+)");
    Matcher mm=monthPattern.matcher(month);
    String date=month;
    if (mm.find()) {
      if (mm.group(3).isEmpty()) {
        if (!mm.group(2).isEmpty()) {
          date="#" + mm.group(2).substring(0,3) + "#";
          if (!mm.group(1).isEmpty()) {
            date+=" " + mm.group(1) + ",";
          }
        }
 else {
          date=mm.group(1) + ",";
        }
      }
 else       if (mm.group(2).isEmpty()) {
        if (!mm.group(4).isEmpty()) {
          date="#" + mm.group(4).substring(0,3) + "# "+ mm.group(1)+ "--"+ mm.group(3)+ ",";
        }
 else         date+=",";
      }
 else {
        date="#" + mm.group(2).substring(0,3) + "# "+ mm.group(1)+ "--#"+ mm.group(4).substring(0,3)+ "# "+ mm.group(3)+ ",";
      }
    }
    entry.setField("month",date);
  }
  String pages=entry.getField("pages");
  String[] pageNumbers=pages.split("--");
  if (pageNumbers.length == 2) {
    if (pageNumbers[0].equals(pageNumbers[1])) {
      entry.setField("pages",pageNumbers[0]);
    }
  }
  BibtexEntryType type=entry.getType();
  String sourceField;
  if (type.getName() == "Article") {
    sourceField="journal";
    entry.clearField("booktitle");
  }
 else {
    sourceField="booktitle";
  }
  String fullName=entry.getField(sourceField);
  if (fullName == null) {
    System.err.println("Null publication");
    return null;
  }
  if (type.getName() == "Article") {
    int ind=fullName.indexOf(": Accepted for future publication");
    if (ind > 0) {
      fullName=fullName.substring(0,ind);
      entry.setField("year","to be published");
      entry.clearField("month");
      entry.clearField("pages");
    }
    String[] parts=fullName.split("[\\[\\]]");
    fullName=parts[0];
    if (parts.length == 3) {
      fullName+=parts[2];
    }
  }
 else {
    fullName=fullName.replace("Conference Proceedings","Proceedings").replace("Proceedings of","Proceedings").replace("  ",". ").replace("Proceedings.","Proceedings");
  }
  Matcher m1=publicationPattern.matcher(fullName);
  if (m1.find()) {
    String prefix=m1.group(2).trim();
    String postfix=m1.group(1).trim();
    String abbrv="";
    String[] parts=prefix.split("\\. ",2);
    if (parts.length == 2) {
      if (parts[0].matches(abbrvPattern)) {
        prefix=parts[1];
        abbrv=parts[0];
      }
 else {
        prefix=parts[0];
        abbrv=parts[1];
      }
    }
    if (prefix.matches(abbrvPattern) == false) {
      fullName=prefix + " " + postfix+ " "+ abbrv;
      fullName=fullName.trim();
    }
 else {
      fullName=postfix + " " + prefix;
    }
  }
  if (type.getName() == "Article") {
    fullName=fullName.replace("- ","-");
    fullName=fullName.trim();
    if (Globals.prefs.getBoolean("useIEEEAbrv")) {
      String id=Globals.journalAbbrev.getAbbreviatedName(fullName,false);
      if (id != null)       fullName=id;
    }
  }
 else {
    Matcher m2=proceedingPattern.matcher(fullName);
    if (m2.find()) {
      String prefix=m2.group(2);
      String postfix=m2.group(1).replaceAll("\\.$","");
      if (prefix.matches(abbrvPattern) == false) {
        String abbrv="";
        String[] parts=postfix.split("\\. ",2);
        if (parts.length == 2) {
          if (parts[0].matches(abbrvPattern)) {
            postfix=parts[1];
            abbrv=parts[0];
          }
 else {
            postfix=parts[0];
            abbrv=parts[1];
          }
        }
        fullName=prefix.trim() + " " + postfix.trim()+ " "+ abbrv;
      }
 else {
        fullName=postfix.trim() + " " + prefix.trim();
      }
    }
    fullName=fullName.trim();
    fullName=fullName.replaceAll("^[tT]he ","").replaceAll("^\\d{4} ","").replaceAll("[,.]$","");
    String year=entry.getField("year");
    fullName=fullName.replaceAll(", " + year + "\\.?","");
    if (fullName.contains("Abstract") == false && fullName.contains("Summaries") == false && fullName.contains("Conference Record") == false)     fullName="Proc. " + fullName;
  }
  entry.setField(sourceField,fullName);
  return entry;
}
