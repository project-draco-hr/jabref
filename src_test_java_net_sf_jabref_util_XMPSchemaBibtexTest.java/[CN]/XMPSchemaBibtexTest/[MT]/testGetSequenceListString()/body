{
  XMPMetadata xmp=new XMPMetadata();
  XMPSchemaBibtex bibtex=new XMPSchemaBibtex(xmp);
  bibtex.addSequenceValue("author","Tom DeMarco");
  bibtex.addSequenceValue("author","Kent Beck");
{
    List<String> l=bibtex.getSequenceList("author");
    Assert.assertEquals(2,l.size());
    Assert.assertEquals("Tom DeMarco",l.get(0));
    Assert.assertEquals("Kent Beck",l.get(1));
  }
{
    bibtex.removeSequenceValue("author","Tom DeMarco");
    List<String> l=bibtex.getSequenceList("author");
    Assert.assertEquals(1,l.size());
    Assert.assertTrue(l.get(0).equals("Kent Beck"));
  }
{
    bibtex.removeSequenceValue("author","Tom DeMarco");
    List<String> l=bibtex.getSequenceList("author");
    Assert.assertEquals(1,l.size());
    Assert.assertTrue(l.get(0).equals("Kent Beck"));
  }
{
    bibtex.addSequenceValue("author","Kent Beck");
    List<String> l=bibtex.getSequenceList("author");
    Assert.assertEquals(2,l.size());
    Assert.assertTrue(l.get(0).equals("Kent Beck"));
    Assert.assertTrue(l.get(1).equals("Kent Beck"));
  }
{
    bibtex.removeSequenceValue("author","Kent Beck");
    List<String> l=bibtex.getSequenceList("author");
    Assert.assertEquals(0,l.size());
  }
}
