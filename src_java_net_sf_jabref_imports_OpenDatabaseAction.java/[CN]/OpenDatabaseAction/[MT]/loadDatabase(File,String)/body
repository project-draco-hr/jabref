{
  Reader reader;
  Reader utf8Reader=ImportFormatReader.getReader(fileToOpen,"UTF8");
  String suppliedEncoding=checkForEncoding(utf8Reader);
  utf8Reader.close();
  if (suppliedEncoding == null) {
    Reader utf16Reader=ImportFormatReader.getReader(fileToOpen,"UTF-16");
    suppliedEncoding=checkForEncoding(utf16Reader);
    utf16Reader.close();
  }
  if ((suppliedEncoding != null)) {
    try {
      reader=ImportFormatReader.getReader(fileToOpen,suppliedEncoding);
      encoding=suppliedEncoding;
    }
 catch (    Exception ex) {
      ex.printStackTrace();
      reader=ImportFormatReader.getReader(fileToOpen,encoding);
    }
  }
 else {
    reader=ImportFormatReader.getReader(fileToOpen,encoding);
  }
  BibtexParser bp=new BibtexParser(reader);
  ParserResult pr=bp.parse();
  pr.setEncoding(encoding);
  pr.setFile(fileToOpen);
  if (SpecialFieldsUtils.keywordSyncEnabled()) {
    for (    BibtexEntry entry : pr.getDatabase().getEntries()) {
      SpecialFieldsUtils.syncSpecialFieldsFromKeywords(entry,null);
    }
    Globals.logger(Globals.lang("Synchronized special fields based on keywords"));
  }
  if (!pr.getMetaData().isGroupTreeValid())   pr.addWarning(Globals.lang("Group tree could not be parsed. If you save the BibTeX database, all groups will be lost."));
  return pr;
}
