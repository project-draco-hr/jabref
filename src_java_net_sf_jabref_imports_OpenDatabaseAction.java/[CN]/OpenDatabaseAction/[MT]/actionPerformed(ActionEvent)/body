{
  List filesToOpen=new ArrayList();
  if (showDialog) {
    String[] chosen=Globals.getMultipleFiles(frame,new File(Globals.prefs.get("workingDirectory")),".bib",true);
    if (chosen != null)     for (int i=0; i < chosen.length; i++) {
      if (chosen[i] != null)       filesToOpen.add(new File(chosen[i]));
    }
  }
 else {
    Util.pr(NAME);
    Util.pr(e.getActionCommand());
    filesToOpen.add(new File(Util.checkName(e.getActionCommand())));
  }
  BasePanel toRaise=null;
  int initialCount=filesToOpen.size(), removed=0;
  for (Iterator iterator=filesToOpen.iterator(); iterator.hasNext(); ) {
    File file=(File)iterator.next();
    for (int i=0; i < frame.getTabbedPane().getTabCount(); i++) {
      BasePanel bp=(BasePanel)frame.baseAt(i);
      if ((bp.getFile() != null) && bp.getFile().equals(file)) {
        iterator.remove();
        removed++;
        if (removed == initialCount) {
          toRaise=bp;
        }
        break;
      }
    }
  }
  if (filesToOpen.size() > 0) {
    final List theFiles=Collections.unmodifiableList(filesToOpen);
    (new Thread(){
      public void run(){
        for (Iterator i=theFiles.iterator(); i.hasNext(); )         openIt((File)i.next(),true);
      }
    }
).start();
    for (Iterator i=theFiles.iterator(); i.hasNext(); )     frame.getFileHistory().newFile(((File)i.next()).getPath());
  }
 else   if (toRaise != null) {
    frame.output(Globals.lang("File '%0' is already open.",toRaise.getFile().getPath()));
    frame.getTabbedPane().setSelectedComponent(toRaise);
  }
}
