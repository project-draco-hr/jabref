{
  boolean changedFieldSet=false;
  boolean anythingChanged=false;
  for (  String fieldName : removedFields) {
    metaData.clearContentSelectors(fieldName);
    changedFieldSet=true;
    anythingChanged=true;
  }
  for (  Map.Entry<String,DefaultListModel<String>> entry : wordListModels.entrySet()) {
    if ((entry.getKey() == null) || FIELD_FIRST_LINE.equals(entry.getKey())) {
      continue;
    }
    DefaultListModel<String> lm=entry.getValue();
    int start=0;
    if (!lm.isEmpty()) {
      while ((start < lm.size()) && lm.get(start).equals(WORD_FIRSTLINE_TEXT)) {
        start++;
      }
    }
    Set<String> data=new HashSet<>();
    for (int wrd=start; wrd < lm.size(); wrd++) {
      String word=lm.get(wrd);
      data.add(word);
    }
    if (!data.equals(new HashSet<>(metaData.getContentSelectors(entry.getKey())))) {
      anythingChanged=true;
    }
    if (!data.isEmpty() && metaData.getContentSelectors(entry.getKey()).isEmpty()) {
      changedFieldSet=true;
    }
    metaData.setContentSelectors(entry.getKey(),new ArrayList<>(data));
  }
  if (changedFieldSet) {
    panel.rebuildAllEntryEditors();
  }
 else   if (anythingChanged) {
    panel.updateAllContentSelectors();
  }
  if (anythingChanged) {
    panel.markNonUndoableBaseChanged();
  }
  panel.getAutoCompleters().addContentSelectorValuesToAutoCompleters(panel.getBibDatabaseContext().getMetaData());
}
