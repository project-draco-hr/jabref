{
  println("private static final long[] mk" + getBitsetName(id) + "() {");
  int n=p.lengthInLongWords();
  if (n < BITSET_OPTIMIZE_INIT_THRESHOLD) {
    println("\tlong[] data = { " + p.toStringOfWords() + "};");
  }
 else {
    println("\tlong[] data = new long[" + n + "];");
    long[] elems=p.toPackedArray();
    for (int i=0; i < elems.length; ) {
      if (elems[i] == 0) {
        i++;
        continue;
      }
      if ((i + 1) == elems.length || elems[i] != elems[i + 1]) {
        println("\tdata[" + i + "]="+ elems[i]+ "L;");
        i++;
      }
 else {
        int j;
        for (j=i + 1; j < elems.length && elems[j] == elems[i]; j++) {
        }
        println("\tfor (int i = " + i + "; i<="+ (j - 1)+ "; i++) { data[i]="+ elems[i]+ "L; }");
        i=j;
      }
    }
  }
  println("\treturn data;");
  println("}");
  println("public static final BitSet " + getBitsetName(id) + " = new BitSet("+ "mk"+ getBitsetName(id)+ "()"+ ");");
}
