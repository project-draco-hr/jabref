{
  this.frame=frame;
  personalFile.setEditable(false);
  ButtonGroup group=new ButtonGroup();
  group.add(newFile);
  group.add(oldFile);
  addExtPan.setLayout(new BorderLayout());
  JButton addExt=new JButton(GUIGlobals.getImage("add"));
  addExtPan.add(addExt,BorderLayout.EAST);
  addExtPan.setToolTipText(Localization.lang("Add"));
  FormLayout layout=new FormLayout("1dlu, 8dlu, left:pref, 4dlu, fill:200dlu:grow, 4dlu, fill:pref","pref, pref, pref, 20dlu, 20dlu, fill:200dlu, 4dlu, pref");
  DefaultFormBuilder builder=new DefaultFormBuilder(layout);
  CellConstraints cc=new CellConstraints();
  builder.addSeparator(Localization.lang("Built-in journal list"),cc.xyw(2,1,6));
  JLabel description=new JLabel("<HTML>" + Localization.lang("JabRef includes a built-in list of journal abbreviations.") + "<br>"+ Localization.lang("You can add additional journal names by setting up a personal journal list,<br>as " + "well as linking to external journal lists.")+ "</HTML>");
  description.setBorder(BorderFactory.createEmptyBorder(5,0,5,0));
  builder.add(description,cc.xyw(2,2,6));
  JButton viewBuiltin=new JButton(Localization.lang("View"));
  builder.add(viewBuiltin,cc.xy(7,2));
  builder.addSeparator(Localization.lang("Personal journal list"),cc.xyw(2,3,6));
  builder.add(newFile,cc.xy(3,4));
  builder.add(newNameTf,cc.xy(5,4));
  JButton browseNew=new JButton(Localization.lang("Browse"));
  builder.add(browseNew,cc.xy(7,4));
  builder.add(oldFile,cc.xy(3,5));
  builder.add(personalFile,cc.xy(5,5));
  JButton browseOld=new JButton(Localization.lang("Browse"));
  builder.add(browseOld,cc.xy(7,5));
  userPanel.setLayout(new BorderLayout());
  builder.add(userPanel,cc.xyw(2,6,4));
  ButtonStackBuilder butBul=new ButtonStackBuilder();
  butBul.addButton(add);
  butBul.addButton(remove);
  butBul.addGlue();
  builder.add(butBul.getPanel(),cc.xy(7,6));
  builder.addSeparator(Localization.lang("External files"),cc.xyw(2,8,6));
  externalFilesPanel.setLayout(new BorderLayout());
  setLayout(new BorderLayout());
  builder.getPanel().setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  add(builder.getPanel(),BorderLayout.NORTH);
  add(externalFilesPanel,BorderLayout.CENTER);
  ButtonBarBuilder bb=new ButtonBarBuilder();
  bb.addGlue();
  JButton ok=new JButton(Localization.lang("Ok"));
  bb.addButton(ok);
  JButton cancel=new JButton(Localization.lang("Cancel"));
  bb.addButton(cancel);
  bb.addUnrelatedGap();
  JButton help=new JButton(Localization.lang("Help"));
  bb.addButton(help);
  bb.addGlue();
  bb.getPanel().setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  dialog=new JDialog(frame,Localization.lang("Journal abbreviations"),false);
  dialog.getContentPane().add(this,BorderLayout.CENTER);
  dialog.getContentPane().add(bb.getPanel(),BorderLayout.SOUTH);
  FormLayout layout2=new FormLayout("right:pref, 4dlu, fill:180dlu","");
  DefaultFormBuilder builder2=new DefaultFormBuilder(layout2);
  builder2.append(Localization.lang("Journal name"));
  builder2.append(nameTf);
  builder2.nextLine();
  builder2.append(Localization.lang("ISO abbreviation"));
  builder2.append(abbrTf);
  journalEditPanel=builder2.getPanel();
  viewBuiltin.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      JournalAbbreviationRepository abbr=new JournalAbbreviationRepository();
      abbr.readJournalListFromResource(Globals.JOURNALS_FILE_BUILTIN);
      JTable table=new JTable(JournalAbbreviationsUtil.getTableModel(Globals.journalAbbrev));
      JScrollPane pane=new JScrollPane(table);
      JOptionPane.showMessageDialog(null,pane,Localization.lang("Journal list preview"),JOptionPane.INFORMATION_MESSAGE);
    }
  }
);
  browseNew.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      File old=null;
      if (!newNameTf.getText().equals("")) {
        old=new File(newNameTf.getText());
      }
      String name=FileDialogs.getNewFile(frame,old,null,JFileChooser.SAVE_DIALOG,false);
      if (name != null) {
        newNameTf.setText(name);
        newFile.setSelected(true);
      }
    }
  }
);
  browseOld.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      File old=null;
      if (!personalFile.getText().equals("")) {
        old=new File(personalFile.getText());
      }
      String name=FileDialogs.getNewFile(frame,old,null,JFileChooser.OPEN_DIALOG,false);
      if (name != null) {
        personalFile.setText(name);
        oldFile.setSelected(true);
        oldFile.setEnabled(true);
        setupUserTable();
      }
    }
  }
);
  ok.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      if (readyToClose()) {
        try {
          storeSettings();
          dialog.dispose();
        }
 catch (        FileNotFoundException ex) {
          JOptionPane.showMessageDialog(null,Localization.lang("Error opening file") + ": " + ex.getMessage(),Localization.lang("Error opening file"),JOptionPane.ERROR_MESSAGE);
        }
      }
    }
  }
);
  help.addActionListener(new HelpAction(Globals.helpDiag,GUIGlobals.journalAbbrHelp));
  AbstractAction cancelAction=new AbstractAction(){
    @Override public void actionPerformed(    ActionEvent e){
      dialog.dispose();
    }
  }
;
  cancel.addActionListener(cancelAction);
  add.addActionListener(tableModel);
  remove.addActionListener(tableModel);
  addExt.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      externals.add(new ExternalFileEntry());
      buildExternalsPanel();
    }
  }
);
  ActionMap am=getActionMap();
  InputMap im=getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
  im.put(Globals.prefs.getKey("Close dialog"),"close");
  am.put("close",cancelAction);
  int xSize=getPreferredSize().width;
  dialog.setSize(xSize + 10,700);
}
