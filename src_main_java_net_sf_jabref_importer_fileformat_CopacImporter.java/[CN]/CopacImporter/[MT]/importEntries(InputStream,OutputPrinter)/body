{
  if (stream == null) {
    throw new IOException("No stream given.");
  }
  BufferedReader in=new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream));
  List<String> entries=new LinkedList<>();
  String str;
  StringBuffer sb=new StringBuffer();
  while ((str=in.readLine()) != null) {
    if (str.length() < 4) {
      continue;
    }
    String code=str.substring(0,4);
    if (code.equals("    ")) {
      sb.append(" ").append(str.trim());
    }
 else {
      if (str.substring(0,4).equals("TI- ")) {
        if (sb.length() > 0) {
          entries.add(sb.toString());
        }
        sb=new StringBuffer();
      }
      sb.append('\n').append(str);
    }
  }
  if (sb.length() > 0) {
    entries.add(sb.toString());
  }
  List<BibtexEntry> results=new LinkedList<>();
  for (  String entry : entries) {
    BibtexEntry b=new BibtexEntry(DEFAULT_BIBTEXENTRY_ID,BibtexEntryTypes.BOOK);
    String[] lines=entry.split("\n");
    for (    String line1 : lines) {
      String line=line1.trim();
      if (line.length() < 4) {
        continue;
      }
      String code=line.substring(0,4);
      if (code.equals("TI- ")) {
        setOrAppend(b,"title",line.substring(4).trim(),", ");
      }
 else       if (code.equals("AU- ")) {
        setOrAppend(b,"author",line.substring(4).trim()," and ");
      }
 else       if (code.equals("PY- ")) {
        setOrAppend(b,"year",line.substring(4).trim(),", ");
      }
 else       if (code.equals("PU- ")) {
        setOrAppend(b,"publisher",line.substring(4).trim(),", ");
      }
 else       if (code.equals("SE- ")) {
        setOrAppend(b,"series",line.substring(4).trim(),", ");
      }
 else       if (code.equals("IS- ")) {
        setOrAppend(b,"isbn",line.substring(4).trim(),", ");
      }
 else       if (code.equals("KW- ")) {
        setOrAppend(b,"keywords",line.substring(4).trim(),", ");
      }
 else       if (code.equals("NT- ")) {
        setOrAppend(b,"note",line.substring(4).trim(),", ");
      }
 else       if (code.equals("PD- ")) {
        setOrAppend(b,"physicaldimensions",line.substring(4).trim(),", ");
      }
 else       if (code.equals("DT- ")) {
        setOrAppend(b,"documenttype",line.substring(4).trim(),", ");
      }
 else {
        setOrAppend(b,code.substring(0,2),line.substring(4).trim(),", ");
      }
    }
    results.add(b);
  }
  return results;
}
