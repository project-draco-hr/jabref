{
  Objects.requireNonNull(stream);
  List<String> entries=new LinkedList<>();
  StringBuilder sb=new StringBuilder();
  try (BufferedReader in=new BufferedReader(ImportFormatReader.getReaderDefaultEncoding(stream))){
    String str;
    while ((str=in.readLine()) != null) {
      if (str.length() < 4) {
        continue;
      }
      String code=str.substring(0,4);
      if ("    ".equals(code)) {
        sb.append(' ').append(str.trim());
      }
 else {
        if ("TI- ".equals(str.substring(0,4))) {
          if (sb.length() > 0) {
            entries.add(sb.toString());
          }
          sb=new StringBuilder();
        }
        sb.append('\n').append(str);
      }
    }
  }
   if (sb.length() > 0) {
    entries.add(sb.toString());
  }
  List<BibEntry> results=new LinkedList<>();
  for (  String entry : entries) {
    BibEntry b=new BibEntry(DEFAULT_BIBTEXENTRY_ID,"book");
    String[] lines=entry.split("\n");
    for (    String line1 : lines) {
      String line=line1.trim();
      if (line.length() < 4) {
        continue;
      }
      String code=line.substring(0,4);
      if ("TI- ".equals(code)) {
        setOrAppend(b,"title",line.substring(4).trim(),", ");
      }
 else       if ("AU- ".equals(code)) {
        setOrAppend(b,"author",line.substring(4).trim()," and ");
      }
 else       if ("PY- ".equals(code)) {
        setOrAppend(b,"year",line.substring(4).trim(),", ");
      }
 else       if ("PU- ".equals(code)) {
        setOrAppend(b,"publisher",line.substring(4).trim(),", ");
      }
 else       if ("SE- ".equals(code)) {
        setOrAppend(b,"series",line.substring(4).trim(),", ");
      }
 else       if ("IS- ".equals(code)) {
        setOrAppend(b,"isbn",line.substring(4).trim(),", ");
      }
 else       if ("KW- ".equals(code)) {
        setOrAppend(b,"keywords",line.substring(4).trim(),", ");
      }
 else       if ("NT- ".equals(code)) {
        setOrAppend(b,"note",line.substring(4).trim(),", ");
      }
 else       if ("PD- ".equals(code)) {
        setOrAppend(b,"physicaldimensions",line.substring(4).trim(),", ");
      }
 else       if ("DT- ".equals(code)) {
        setOrAppend(b,"documenttype",line.substring(4).trim(),", ");
      }
 else {
        setOrAppend(b,code.substring(0,2),line.substring(4).trim(),", ");
      }
    }
    results.add(b);
  }
  return new ParserResult(results);
}
