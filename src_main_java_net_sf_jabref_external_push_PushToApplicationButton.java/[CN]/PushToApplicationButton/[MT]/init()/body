{
  comp=new JPanel();
  comp.setLayout(new BorderLayout());
  menuButton=new JButton(PushToApplicationButton.ARROW_ICON);
  menuButton.setMargin(new Insets(0,0,0,0));
  menuButton.setPreferredSize(new Dimension(menuButton.getIcon().getIconWidth(),menuButton.getIcon().getIconHeight()));
  menuButton.addActionListener(new MenuButtonActionListener());
  menuButton.setToolTipText(Localization.lang("Select external application"));
  pushButton=new JButton();
  String appSelected=Globals.prefs.get(JabRefPreferences.PUSH_TO_APPLICATION);
  for (int i=0; i < pushActions.size(); i++) {
    if (pushActions.get(i).getApplicationName().equals(appSelected)) {
      selected=i;
      break;
    }
  }
  setSelected(selected);
  pushButton.addActionListener(this);
  pushButton.addMouseListener(new PushButtonMouseListener());
  pushButton.setOpaque(false);
  menuButton.setOpaque(false);
  comp.setOpaque(false);
  comp.add(pushButton,BorderLayout.CENTER);
  comp.add(menuButton,BorderLayout.EAST);
  comp.setMaximumSize(comp.getPreferredSize());
  optPopup.add(settings);
  settings.addActionListener(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent event){
      PushToApplication toApp=pushActions.get(selected);
      JPanel options=toApp.getSettingsPanel();
      if (options != null) {
        PushToApplicationButton.showSettingsDialog(frame,toApp,options);
      }
    }
  }
);
  buildPopupMenu();
}
